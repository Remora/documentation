### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Rest.API.DiscordRestTemplateAPI
  commentId: T:Remora.Discord.Rest.API.DiscordRestTemplateAPI
  id: DiscordRestTemplateAPI
  parent: Remora.Discord.Rest.API
  children:
  - Remora.Discord.Rest.API.DiscordRestTemplateAPI.#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  - Remora.Discord.Rest.API.DiscordRestTemplateAPI.CreateGuildFromTemplateAsync(System.String,System.String,Remora.Rest.Core.Optional{System.IO.Stream},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestTemplateAPI.CreateGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestTemplateAPI.DeleteGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestTemplateAPI.GetGuildTemplatesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestTemplateAPI.GetTemplateAsync(System.String,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestTemplateAPI.ModifyGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestTemplateAPI.SyncGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: DiscordRestTemplateAPI
  nameWithType: DiscordRestTemplateAPI
  fullName: Remora.Discord.Rest.API.DiscordRestTemplateAPI
  type: Class
  source:
    id: DiscordRestTemplateAPI
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Templates\DiscordRestTemplateAPI.cs
    startLine: 41
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Represents the Discord Template API.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public class DiscordRestTemplateAPI : AbstractDiscordRestAPI, IRestCustomizable, IDiscordRestTemplateAPI
    content.vb: >-
      <PublicAPI>

      Public Class DiscordRestTemplateAPI Inherits AbstractDiscordRestAPI Implements IRestCustomizable, IDiscordRestTemplateAPI
  inheritance:
  - System.Object
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI
  implements:
  - Remora.Rest.IRestCustomizable
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI
  inheritedMembers:
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.API.DiscordRestTemplateAPI.#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  commentId: M:Remora.Discord.Rest.API.DiscordRestTemplateAPI.#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  id: '#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)'
  parent: Remora.Discord.Rest.API.DiscordRestTemplateAPI
  langs:
  - csharp
  - vb
  name: DiscordRestTemplateAPI(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
  nameWithType: DiscordRestTemplateAPI.DiscordRestTemplateAPI(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
  fullName: Remora.Discord.Rest.API.DiscordRestTemplateAPI.DiscordRestTemplateAPI(Remora.Rest.IRestHttpClient, System.Text.Json.JsonSerializerOptions, Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Templates\DiscordRestTemplateAPI.cs
    startLine: 50
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Initializes a new instance of the <xref href="Remora.Discord.Rest.API.DiscordRestTemplateAPI" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public DiscordRestTemplateAPI(IRestHttpClient restHttpClient, JsonSerializerOptions jsonOptions, ICacheProvider rateLimitCache)
    parameters:
    - id: restHttpClient
      type: Remora.Rest.IRestHttpClient
      description: The Discord HTTP client.
    - id: jsonOptions
      type: System.Text.Json.JsonSerializerOptions
      description: The JSON options.
    - id: rateLimitCache
      type: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
      description: The memory cache used for rate limits.
    content.vb: Public Sub New(restHttpClient As IRestHttpClient, jsonOptions As JsonSerializerOptions, rateLimitCache As ICacheProvider)
  overload: Remora.Discord.Rest.API.DiscordRestTemplateAPI.#ctor*
  nameWithType.vb: DiscordRestTemplateAPI.New(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestTemplateAPI.New(Remora.Rest.IRestHttpClient, System.Text.Json.JsonSerializerOptions, Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  name.vb: New(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
- uid: Remora.Discord.Rest.API.DiscordRestTemplateAPI.GetTemplateAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestTemplateAPI.GetTemplateAsync(System.String,System.Threading.CancellationToken)
  id: GetTemplateAsync(System.String,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestTemplateAPI
  langs:
  - csharp
  - vb
  name: GetTemplateAsync(string, CancellationToken)
  nameWithType: DiscordRestTemplateAPI.GetTemplateAsync(string, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestTemplateAPI.GetTemplateAsync(string, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetTemplateAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Templates\DiscordRestTemplateAPI.cs
    startLine: 61
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets the template object for the given code.
  example: []
  syntax:
    content: public virtual Task<Result<ITemplate>> GetTemplateAsync(string templateCode, CancellationToken ct = default)
    parameters:
    - id: templateCode
      type: System.String
      description: The template code.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.ITemplate}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function GetTemplateAsync(templateCode As String, ct As CancellationToken = Nothing) As Task(Of Result(Of ITemplate))
  overload: Remora.Discord.Rest.API.DiscordRestTemplateAPI.GetTemplateAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.GetTemplateAsync(System.String,System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestTemplateAPI.GetTemplateAsync(String, CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestTemplateAPI.GetTemplateAsync(String, System.Threading.CancellationToken)
  name.vb: GetTemplateAsync(String, CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestTemplateAPI.CreateGuildFromTemplateAsync(System.String,System.String,Remora.Rest.Core.Optional{System.IO.Stream},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestTemplateAPI.CreateGuildFromTemplateAsync(System.String,System.String,Remora.Rest.Core.Optional{System.IO.Stream},System.Threading.CancellationToken)
  id: CreateGuildFromTemplateAsync(System.String,System.String,Remora.Rest.Core.Optional{System.IO.Stream},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestTemplateAPI
  langs:
  - csharp
  - vb
  name: CreateGuildFromTemplateAsync(string, string, Optional<Stream>, CancellationToken)
  nameWithType: DiscordRestTemplateAPI.CreateGuildFromTemplateAsync(string, string, Optional<Stream>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestTemplateAPI.CreateGuildFromTemplateAsync(string, string, Remora.Rest.Core.Optional<System.IO.Stream>, System.Threading.CancellationToken)
  type: Method
  source:
    id: CreateGuildFromTemplateAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Templates\DiscordRestTemplateAPI.cs
    startLine: 76
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Creates a new guild from the given template.
  remarks: >-
    Any streams passed to this method will be disposed of at the end of the call. If you want to reuse the streams

    afterwards, ensure that what you pass is a copy that the method can take ownership of.
  example: []
  syntax:
    content: public virtual Task<Result<IGuild>> CreateGuildFromTemplateAsync(string templateCode, string name, Optional<Stream> icon = default, CancellationToken ct = default)
    parameters:
    - id: templateCode
      type: System.String
      description: The template code.
    - id: name
      type: System.String
      description: The name of the new guild.
    - id: icon
      type: Remora.Rest.Core.Optional{System.IO.Stream}
      description: The icon of the new guild.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IGuild}}
      description: A creation result which may or may not have succeeded.
    content.vb: Public Overridable Function CreateGuildFromTemplateAsync(templateCode As String, name As String, icon As [Optional](Of Stream) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IGuild))
  overload: Remora.Discord.Rest.API.DiscordRestTemplateAPI.CreateGuildFromTemplateAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.CreateGuildFromTemplateAsync(System.String,System.String,Remora.Rest.Core.Optional{System.IO.Stream},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestTemplateAPI.CreateGuildFromTemplateAsync(String, String, Optional(Of Stream), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestTemplateAPI.CreateGuildFromTemplateAsync(String, String, Remora.Rest.Core.Optional(Of System.IO.Stream), System.Threading.CancellationToken)
  name.vb: CreateGuildFromTemplateAsync(String, String, Optional(Of Stream), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestTemplateAPI.GetGuildTemplatesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestTemplateAPI.GetGuildTemplatesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: GetGuildTemplatesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestTemplateAPI
  langs:
  - csharp
  - vb
  name: GetGuildTemplatesAsync(Snowflake, CancellationToken)
  nameWithType: DiscordRestTemplateAPI.GetGuildTemplatesAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestTemplateAPI.GetGuildTemplatesAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetGuildTemplatesAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Templates\DiscordRestTemplateAPI.cs
    startLine: 112
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets the template for the given guild.
  example: []
  syntax:
    content: public virtual Task<Result<IReadOnlyList<ITemplate>>> GetGuildTemplatesAsync(Snowflake guildID, CancellationToken ct = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ITemplate}}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function GetGuildTemplatesAsync(guildID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of ITemplate)))
  overload: Remora.Discord.Rest.API.DiscordRestTemplateAPI.GetGuildTemplatesAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.GetGuildTemplatesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestTemplateAPI.CreateGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestTemplateAPI.CreateGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: CreateGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestTemplateAPI
  langs:
  - csharp
  - vb
  name: CreateGuildTemplateAsync(Snowflake, string, Optional<string?>, CancellationToken)
  nameWithType: DiscordRestTemplateAPI.CreateGuildTemplateAsync(Snowflake, string, Optional<string?>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestTemplateAPI.CreateGuildTemplateAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<string?>, System.Threading.CancellationToken)
  type: Method
  source:
    id: CreateGuildTemplateAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Templates\DiscordRestTemplateAPI.cs
    startLine: 127
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Creates a new guild template from the given guild.
  example: []
  syntax:
    content: public virtual Task<Result<ITemplate>> CreateGuildTemplateAsync(Snowflake guildID, string name, Optional<string?> description = default, CancellationToken ct = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: name
      type: System.String
      description: The name of the template.
    - id: description
      type: Remora.Rest.Core.Optional{System.String}
      description: The description of the template.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.ITemplate}}
      description: A creation result which may or may not have succeeded.
    content.vb: Public Overridable Function CreateGuildTemplateAsync(guildID As Snowflake, name As String, description As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of ITemplate))
  overload: Remora.Discord.Rest.API.DiscordRestTemplateAPI.CreateGuildTemplateAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.CreateGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestTemplateAPI.CreateGuildTemplateAsync(Snowflake, String, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestTemplateAPI.CreateGuildTemplateAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: CreateGuildTemplateAsync(Snowflake, String, Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestTemplateAPI.SyncGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestTemplateAPI.SyncGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  id: SyncGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestTemplateAPI
  langs:
  - csharp
  - vb
  name: SyncGuildTemplateAsync(Snowflake, string, CancellationToken)
  nameWithType: DiscordRestTemplateAPI.SyncGuildTemplateAsync(Snowflake, string, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestTemplateAPI.SyncGuildTemplateAsync(Remora.Rest.Core.Snowflake, string, System.Threading.CancellationToken)
  type: Method
  source:
    id: SyncGuildTemplateAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Templates\DiscordRestTemplateAPI.cs
    startLine: 166
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Synchronized the template to the guild's current state.
  example: []
  syntax:
    content: public virtual Task<Result<ITemplate>> SyncGuildTemplateAsync(Snowflake guildID, string templateCode, CancellationToken ct = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: templateCode
      type: System.String
      description: The template code.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.ITemplate}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function SyncGuildTemplateAsync(guildID As Snowflake, templateCode As String, ct As CancellationToken = Nothing) As Task(Of Result(Of ITemplate))
  overload: Remora.Discord.Rest.API.DiscordRestTemplateAPI.SyncGuildTemplateAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.SyncGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestTemplateAPI.SyncGuildTemplateAsync(Snowflake, String, CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestTemplateAPI.SyncGuildTemplateAsync(Remora.Rest.Core.Snowflake, String, System.Threading.CancellationToken)
  name.vb: SyncGuildTemplateAsync(Snowflake, String, CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestTemplateAPI.ModifyGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestTemplateAPI.ModifyGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: ModifyGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestTemplateAPI
  langs:
  - csharp
  - vb
  name: ModifyGuildTemplateAsync(Snowflake, string, Optional<string>, Optional<string?>, CancellationToken)
  nameWithType: DiscordRestTemplateAPI.ModifyGuildTemplateAsync(Snowflake, string, Optional<string>, Optional<string?>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestTemplateAPI.ModifyGuildTemplateAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<string?>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ModifyGuildTemplateAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Templates\DiscordRestTemplateAPI.cs
    startLine: 182
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Modifies the template's metadata.
  example: []
  syntax:
    content: public virtual Task<Result<ITemplate>> ModifyGuildTemplateAsync(Snowflake guildID, string templateCode, Optional<string> name, Optional<string?> description, CancellationToken ct = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: templateCode
      type: System.String
      description: The template code.
    - id: name
      type: Remora.Rest.Core.Optional{System.String}
      description: The new name of the template.
    - id: description
      type: Remora.Rest.Core.Optional{System.String}
      description: The new description of the template.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.ITemplate}}
      description: A modification result which may or may not have succeeded.
    content.vb: Public Overridable Function ModifyGuildTemplateAsync(guildID As Snowflake, templateCode As String, name As [Optional](Of String), description As [Optional](Of String), ct As CancellationToken = Nothing) As Task(Of Result(Of ITemplate))
  overload: Remora.Discord.Rest.API.DiscordRestTemplateAPI.ModifyGuildTemplateAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.ModifyGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestTemplateAPI.ModifyGuildTemplateAsync(Snowflake, String, Optional(Of String), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestTemplateAPI.ModifyGuildTemplateAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyGuildTemplateAsync(Snowflake, String, Optional(Of String), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestTemplateAPI.DeleteGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestTemplateAPI.DeleteGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  id: DeleteGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestTemplateAPI
  langs:
  - csharp
  - vb
  name: DeleteGuildTemplateAsync(Snowflake, string, CancellationToken)
  nameWithType: DiscordRestTemplateAPI.DeleteGuildTemplateAsync(Snowflake, string, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestTemplateAPI.DeleteGuildTemplateAsync(Remora.Rest.Core.Snowflake, string, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteGuildTemplateAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Templates\DiscordRestTemplateAPI.cs
    startLine: 222
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Deletes the given guild template.
  example: []
  syntax:
    content: public virtual Task<Result<ITemplate>> DeleteGuildTemplateAsync(Snowflake guildID, string templateCode, CancellationToken ct = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: templateCode
      type: System.String
      description: The template code.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.ITemplate}}
      description: A retrieval result which may or may not have succeeded. This contains the deleted template.
    content.vb: Public Overridable Function DeleteGuildTemplateAsync(guildID As Snowflake, templateCode As String, ct As CancellationToken = Nothing) As Task(Of Result(Of ITemplate))
  overload: Remora.Discord.Rest.API.DiscordRestTemplateAPI.DeleteGuildTemplateAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.DeleteGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestTemplateAPI.DeleteGuildTemplateAsync(Snowflake, String, CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestTemplateAPI.DeleteGuildTemplateAsync(Remora.Rest.Core.Snowflake, String, System.Threading.CancellationToken)
  name.vb: DeleteGuildTemplateAsync(Snowflake, String, CancellationToken)
references:
- uid: Remora.Discord.Rest.API
  commentId: N:Remora.Discord.Rest.API
  href: Remora.html
  name: Remora.Discord.Rest.API
  nameWithType: Remora.Discord.Rest.API
  fullName: Remora.Discord.Rest.API
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.API
    name: API
    href: Remora.Discord.Rest.API.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.API
    name: API
    href: Remora.Discord.Rest.API.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  commentId: T:Remora.Discord.Rest.API.AbstractDiscordRestAPI
  parent: Remora.Discord.Rest.API
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html
  name: AbstractDiscordRestAPI
  nameWithType: AbstractDiscordRestAPI
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI
- uid: Remora.Rest.IRestCustomizable
  commentId: T:Remora.Rest.IRestCustomizable
  parent: Remora.Rest
  isExternal: true
  name: IRestCustomizable
  nameWithType: IRestCustomizable
  fullName: Remora.Rest.IRestCustomizable
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI
  commentId: T:Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI
  parent: Remora.Discord.API.Abstractions.Rest
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html
  name: IDiscordRestTemplateAPI
  nameWithType: IDiscordRestTemplateAPI
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
  commentId: P:Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_RestHttpClient
  name: RestHttpClient
  nameWithType: AbstractDiscordRestAPI.RestHttpClient
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
  commentId: P:Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_JsonOptions
  name: JsonOptions
  nameWithType: AbstractDiscordRestAPI.JsonOptions
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
  commentId: P:Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_RateLimitCache
  name: RateLimitCache
  nameWithType: AbstractDiscordRestAPI.RateLimitCache
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
  commentId: M:Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  isExternal: true
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_WithCustomization_System_Action_Remora_Rest_RestRequestBuilder__
  name: WithCustomization(Action<RestRequestBuilder>)
  nameWithType: AbstractDiscordRestAPI.WithCustomization(Action<RestRequestBuilder>)
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action<Remora.Rest.RestRequestBuilder>)
  nameWithType.vb: AbstractDiscordRestAPI.WithCustomization(Action(Of RestRequestBuilder))
  fullName.vb: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action(Of Remora.Rest.RestRequestBuilder))
  name.vb: WithCustomization(Action(Of RestRequestBuilder))
  spec.csharp:
  - uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
    name: WithCustomization
    href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_WithCustomization_System_Action_Remora_Rest_RestRequestBuilder__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Remora.Rest.RestRequestBuilder
    name: RestRequestBuilder
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
    name: WithCustomization
    href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_WithCustomization_System_Action_Remora_Rest_RestRequestBuilder__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.RestRequestBuilder
    name: RestRequestBuilder
    isExternal: true
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Rest
  commentId: N:Remora.Rest
  isExternal: true
  name: Remora.Rest
  nameWithType: Remora.Rest
  fullName: Remora.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
- uid: Remora.Discord.API.Abstractions.Rest
  commentId: N:Remora.Discord.API.Abstractions.Rest
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Rest
  nameWithType: Remora.Discord.API.Abstractions.Rest
  fullName: Remora.Discord.API.Abstractions.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
- uid: Remora.Discord.Rest.API.DiscordRestTemplateAPI
  commentId: T:Remora.Discord.Rest.API.DiscordRestTemplateAPI
  href: Remora.Discord.Rest.API.DiscordRestTemplateAPI.html
  name: DiscordRestTemplateAPI
  nameWithType: DiscordRestTemplateAPI
  fullName: Remora.Discord.Rest.API.DiscordRestTemplateAPI
- uid: Remora.Discord.Rest.API.DiscordRestTemplateAPI.#ctor*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestTemplateAPI.#ctor
  href: Remora.Discord.Rest.API.DiscordRestTemplateAPI.html#Remora_Discord_Rest_API_DiscordRestTemplateAPI__ctor_Remora_Rest_IRestHttpClient_System_Text_Json_JsonSerializerOptions_Remora_Discord_Caching_Abstractions_Services_ICacheProvider_
  name: DiscordRestTemplateAPI
  nameWithType: DiscordRestTemplateAPI.DiscordRestTemplateAPI
  fullName: Remora.Discord.Rest.API.DiscordRestTemplateAPI.DiscordRestTemplateAPI
  nameWithType.vb: DiscordRestTemplateAPI.New
  fullName.vb: Remora.Discord.Rest.API.DiscordRestTemplateAPI.New
  name.vb: New
- uid: Remora.Rest.IRestHttpClient
  commentId: T:Remora.Rest.IRestHttpClient
  parent: Remora.Rest
  isExternal: true
  name: IRestHttpClient
  nameWithType: IRestHttpClient
  fullName: Remora.Rest.IRestHttpClient
- uid: System.Text.Json.JsonSerializerOptions
  commentId: T:System.Text.Json.JsonSerializerOptions
  parent: System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions
  name: JsonSerializerOptions
  nameWithType: JsonSerializerOptions
  fullName: System.Text.Json.JsonSerializerOptions
- uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  commentId: T:Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  parent: Remora.Discord.Caching.Abstractions.Services
  href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html
  name: ICacheProvider
  nameWithType: ICacheProvider
  fullName: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
- uid: System.Text.Json
  commentId: N:System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.Json
  nameWithType: System.Text.Json
  fullName: System.Text.Json
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
- uid: Remora.Discord.Caching.Abstractions.Services
  commentId: N:Remora.Discord.Caching.Abstractions.Services
  href: Remora.html
  name: Remora.Discord.Caching.Abstractions.Services
  nameWithType: Remora.Discord.Caching.Abstractions.Services
  fullName: Remora.Discord.Caching.Abstractions.Services
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions
    name: Abstractions
    href: Remora.Discord.Caching.Abstractions.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions.Services
    name: Services
    href: Remora.Discord.Caching.Abstractions.Services.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions
    name: Abstractions
    href: Remora.Discord.Caching.Abstractions.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions.Services
    name: Services
    href: Remora.Discord.Caching.Abstractions.Services.html
- uid: Remora.Discord.Rest.API.DiscordRestTemplateAPI.GetTemplateAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestTemplateAPI.GetTemplateAsync
  href: Remora.Discord.Rest.API.DiscordRestTemplateAPI.html#Remora_Discord_Rest_API_DiscordRestTemplateAPI_GetTemplateAsync_System_String_System_Threading_CancellationToken_
  name: GetTemplateAsync
  nameWithType: DiscordRestTemplateAPI.GetTemplateAsync
  fullName: Remora.Discord.Rest.API.DiscordRestTemplateAPI.GetTemplateAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.GetTemplateAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.GetTemplateAsync(System.String,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_GetTemplateAsync_System_String_System_Threading_CancellationToken_
  name: GetTemplateAsync(string, CancellationToken)
  nameWithType: IDiscordRestTemplateAPI.GetTemplateAsync(string, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.GetTemplateAsync(string, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestTemplateAPI.GetTemplateAsync(String, CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.GetTemplateAsync(String, System.Threading.CancellationToken)
  name.vb: GetTemplateAsync(String, CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.GetTemplateAsync(System.String,System.Threading.CancellationToken)
    name: GetTemplateAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_GetTemplateAsync_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.GetTemplateAsync(System.String,System.Threading.CancellationToken)
    name: GetTemplateAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_GetTemplateAsync_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.ITemplate}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.ITemplate}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<ITemplate>>
  nameWithType: Task<Result<ITemplate>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.ITemplate>>
  nameWithType.vb: Task(Of Result(Of ITemplate))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.ITemplate))
  name.vb: Task(Of Result(Of ITemplate))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ITemplate
    name: ITemplate
    href: Remora.Discord.API.Abstractions.Objects.ITemplate.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ITemplate
    name: ITemplate
    href: Remora.Discord.API.Abstractions.Objects.ITemplate.html
  - name: )
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Rest.API.DiscordRestTemplateAPI.CreateGuildFromTemplateAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestTemplateAPI.CreateGuildFromTemplateAsync
  href: Remora.Discord.Rest.API.DiscordRestTemplateAPI.html#Remora_Discord_Rest_API_DiscordRestTemplateAPI_CreateGuildFromTemplateAsync_System_String_System_String_Remora_Rest_Core_Optional_System_IO_Stream__System_Threading_CancellationToken_
  name: CreateGuildFromTemplateAsync
  nameWithType: DiscordRestTemplateAPI.CreateGuildFromTemplateAsync
  fullName: Remora.Discord.Rest.API.DiscordRestTemplateAPI.CreateGuildFromTemplateAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.CreateGuildFromTemplateAsync(System.String,System.String,Remora.Rest.Core.Optional{System.IO.Stream},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.CreateGuildFromTemplateAsync(System.String,System.String,Remora.Rest.Core.Optional{System.IO.Stream},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_CreateGuildFromTemplateAsync_System_String_System_String_Remora_Rest_Core_Optional_System_IO_Stream__System_Threading_CancellationToken_
  name: CreateGuildFromTemplateAsync(string, string, Optional<Stream>, CancellationToken)
  nameWithType: IDiscordRestTemplateAPI.CreateGuildFromTemplateAsync(string, string, Optional<Stream>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.CreateGuildFromTemplateAsync(string, string, Remora.Rest.Core.Optional<System.IO.Stream>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestTemplateAPI.CreateGuildFromTemplateAsync(String, String, Optional(Of Stream), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.CreateGuildFromTemplateAsync(String, String, Remora.Rest.Core.Optional(Of System.IO.Stream), System.Threading.CancellationToken)
  name.vb: CreateGuildFromTemplateAsync(String, String, Optional(Of Stream), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.CreateGuildFromTemplateAsync(System.String,System.String,Remora.Rest.Core.Optional{System.IO.Stream},System.Threading.CancellationToken)
    name: CreateGuildFromTemplateAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_CreateGuildFromTemplateAsync_System_String_System_String_Remora_Rest_Core_Optional_System_IO_Stream__System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.CreateGuildFromTemplateAsync(System.String,System.String,Remora.Rest.Core.Optional{System.IO.Stream},System.Threading.CancellationToken)
    name: CreateGuildFromTemplateAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_CreateGuildFromTemplateAsync_System_String_System_String_Remora_Rest_Core_Optional_System_IO_Stream__System_Threading_CancellationToken_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Optional{System.IO.Stream}
  commentId: T:Remora.Rest.Core.Optional{System.IO.Stream}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Optional<Stream>
  nameWithType: Optional<Stream>
  fullName: Remora.Rest.Core.Optional<System.IO.Stream>
  nameWithType.vb: Optional(Of Stream)
  fullName.vb: Remora.Rest.Core.Optional(Of System.IO.Stream)
  name.vb: Optional(Of Stream)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IGuild}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IGuild}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IGuild>>
  nameWithType: Task<Result<IGuild>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IGuild>>
  nameWithType.vb: Task(Of Result(Of IGuild))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IGuild))
  name.vb: Task(Of Result(Of IGuild))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IGuild
    name: IGuild
    href: Remora.Discord.API.Abstractions.Objects.IGuild.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IGuild
    name: IGuild
    href: Remora.Discord.API.Abstractions.Objects.IGuild.html
  - name: )
  - name: )
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: Remora.Discord.Rest.API.DiscordRestTemplateAPI.GetGuildTemplatesAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestTemplateAPI.GetGuildTemplatesAsync
  href: Remora.Discord.Rest.API.DiscordRestTemplateAPI.html#Remora_Discord_Rest_API_DiscordRestTemplateAPI_GetGuildTemplatesAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetGuildTemplatesAsync
  nameWithType: DiscordRestTemplateAPI.GetGuildTemplatesAsync
  fullName: Remora.Discord.Rest.API.DiscordRestTemplateAPI.GetGuildTemplatesAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.GetGuildTemplatesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.GetGuildTemplatesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_GetGuildTemplatesAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetGuildTemplatesAsync(Snowflake, CancellationToken)
  nameWithType: IDiscordRestTemplateAPI.GetGuildTemplatesAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.GetGuildTemplatesAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.GetGuildTemplatesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetGuildTemplatesAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_GetGuildTemplatesAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.GetGuildTemplatesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetGuildTemplatesAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_GetGuildTemplatesAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Snowflake
  commentId: T:Remora.Rest.Core.Snowflake
  parent: Remora.Rest.Core
  isExternal: true
  name: Snowflake
  nameWithType: Snowflake
  fullName: Remora.Rest.Core.Snowflake
- uid: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ITemplate}}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ITemplate}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IReadOnlyList<ITemplate>>>
  nameWithType: Task<Result<IReadOnlyList<ITemplate>>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.ITemplate>>>
  nameWithType.vb: Task(Of Result(Of IReadOnlyList(Of ITemplate)))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.ITemplate)))
  name.vb: Task(Of Result(Of IReadOnlyList(Of ITemplate)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ITemplate
    name: ITemplate
    href: Remora.Discord.API.Abstractions.Objects.ITemplate.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ITemplate
    name: ITemplate
    href: Remora.Discord.API.Abstractions.Objects.ITemplate.html
  - name: )
  - name: )
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestTemplateAPI.CreateGuildTemplateAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestTemplateAPI.CreateGuildTemplateAsync
  href: Remora.Discord.Rest.API.DiscordRestTemplateAPI.html#Remora_Discord_Rest_API_DiscordRestTemplateAPI_CreateGuildTemplateAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: CreateGuildTemplateAsync
  nameWithType: DiscordRestTemplateAPI.CreateGuildTemplateAsync
  fullName: Remora.Discord.Rest.API.DiscordRestTemplateAPI.CreateGuildTemplateAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.CreateGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.CreateGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_CreateGuildTemplateAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: CreateGuildTemplateAsync(Snowflake, string, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestTemplateAPI.CreateGuildTemplateAsync(Snowflake, string, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.CreateGuildTemplateAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestTemplateAPI.CreateGuildTemplateAsync(Snowflake, String, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.CreateGuildTemplateAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: CreateGuildTemplateAsync(Snowflake, String, Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.CreateGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: CreateGuildTemplateAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_CreateGuildTemplateAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.CreateGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: CreateGuildTemplateAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_CreateGuildTemplateAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Optional{System.String}
  commentId: T:Remora.Rest.Core.Optional{System.String}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Optional<string>
  nameWithType: Optional<string>
  fullName: Remora.Rest.Core.Optional<string>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Remora.Rest.Core.Optional(Of String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestTemplateAPI.SyncGuildTemplateAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestTemplateAPI.SyncGuildTemplateAsync
  href: Remora.Discord.Rest.API.DiscordRestTemplateAPI.html#Remora_Discord_Rest_API_DiscordRestTemplateAPI_SyncGuildTemplateAsync_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  name: SyncGuildTemplateAsync
  nameWithType: DiscordRestTemplateAPI.SyncGuildTemplateAsync
  fullName: Remora.Discord.Rest.API.DiscordRestTemplateAPI.SyncGuildTemplateAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.SyncGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.SyncGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_SyncGuildTemplateAsync_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  name: SyncGuildTemplateAsync(Snowflake, string, CancellationToken)
  nameWithType: IDiscordRestTemplateAPI.SyncGuildTemplateAsync(Snowflake, string, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.SyncGuildTemplateAsync(Remora.Rest.Core.Snowflake, string, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestTemplateAPI.SyncGuildTemplateAsync(Snowflake, String, CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.SyncGuildTemplateAsync(Remora.Rest.Core.Snowflake, String, System.Threading.CancellationToken)
  name.vb: SyncGuildTemplateAsync(Snowflake, String, CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.SyncGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
    name: SyncGuildTemplateAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_SyncGuildTemplateAsync_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.SyncGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
    name: SyncGuildTemplateAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_SyncGuildTemplateAsync_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestTemplateAPI.ModifyGuildTemplateAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestTemplateAPI.ModifyGuildTemplateAsync
  href: Remora.Discord.Rest.API.DiscordRestTemplateAPI.html#Remora_Discord_Rest_API_DiscordRestTemplateAPI_ModifyGuildTemplateAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyGuildTemplateAsync
  nameWithType: DiscordRestTemplateAPI.ModifyGuildTemplateAsync
  fullName: Remora.Discord.Rest.API.DiscordRestTemplateAPI.ModifyGuildTemplateAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.ModifyGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.ModifyGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_ModifyGuildTemplateAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyGuildTemplateAsync(Snowflake, string, Optional<string>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestTemplateAPI.ModifyGuildTemplateAsync(Snowflake, string, Optional<string>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.ModifyGuildTemplateAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestTemplateAPI.ModifyGuildTemplateAsync(Snowflake, String, Optional(Of String), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.ModifyGuildTemplateAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyGuildTemplateAsync(Snowflake, String, Optional(Of String), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.ModifyGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyGuildTemplateAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_ModifyGuildTemplateAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.ModifyGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyGuildTemplateAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_ModifyGuildTemplateAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestTemplateAPI.DeleteGuildTemplateAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestTemplateAPI.DeleteGuildTemplateAsync
  href: Remora.Discord.Rest.API.DiscordRestTemplateAPI.html#Remora_Discord_Rest_API_DiscordRestTemplateAPI_DeleteGuildTemplateAsync_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  name: DeleteGuildTemplateAsync
  nameWithType: DiscordRestTemplateAPI.DeleteGuildTemplateAsync
  fullName: Remora.Discord.Rest.API.DiscordRestTemplateAPI.DeleteGuildTemplateAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.DeleteGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.DeleteGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_DeleteGuildTemplateAsync_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  name: DeleteGuildTemplateAsync(Snowflake, string, CancellationToken)
  nameWithType: IDiscordRestTemplateAPI.DeleteGuildTemplateAsync(Snowflake, string, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.DeleteGuildTemplateAsync(Remora.Rest.Core.Snowflake, string, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestTemplateAPI.DeleteGuildTemplateAsync(Snowflake, String, CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.DeleteGuildTemplateAsync(Remora.Rest.Core.Snowflake, String, System.Threading.CancellationToken)
  name.vb: DeleteGuildTemplateAsync(Snowflake, String, CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.DeleteGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
    name: DeleteGuildTemplateAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_DeleteGuildTemplateAsync_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.DeleteGuildTemplateAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
    name: DeleteGuildTemplateAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestTemplateAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestTemplateAPI_DeleteGuildTemplateAsync_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
