### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Caching.Responders.LateCacheResponder
  commentId: T:Remora.Discord.Caching.Responders.LateCacheResponder
  id: LateCacheResponder
  parent: Remora.Discord.Caching.Responders
  children:
  - Remora.Discord.Caching.Responders.LateCacheResponder.#ctor(Remora.Discord.Caching.Services.CacheService)
  - Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete,System.Threading.CancellationToken)
  - Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove,System.Threading.CancellationToken)
  - Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete,System.Threading.CancellationToken)
  - Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove,System.Threading.CancellationToken)
  - Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete,System.Threading.CancellationToken)
  - Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete,System.Threading.CancellationToken)
  - Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete,System.Threading.CancellationToken)
  - Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: LateCacheResponder
  nameWithType: LateCacheResponder
  fullName: Remora.Discord.Caching.Responders.LateCacheResponder
  type: Class
  source:
    id: LateCacheResponder
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Caching\Responders\LateCacheResponder.cs
    startLine: 38
  assemblies:
  - Remora.Discord.Caching
  namespace: Remora.Discord.Caching.Responders
  summary: Evicts explicitly deleted data from the cache.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public class LateCacheResponder : IResponder<IChannelDelete>, IResponder<IGuildBanRemove>, IResponder<IGuildDelete>, IResponder<IGuildMemberRemove>, IResponder<IGuildRoleDelete>, IResponder<IInviteDelete>, IResponder<IMessageDelete>, IResponder<IMessageDeleteBulk>, IResponder
    content.vb: >-
      <PublicAPI>

      Public Class LateCacheResponder Implements IResponder(Of IChannelDelete), IResponder(Of IGuildBanRemove), IResponder(Of IGuildDelete), IResponder(Of IGuildMemberRemove), IResponder(Of IGuildRoleDelete), IResponder(Of IInviteDelete), IResponder(Of IMessageDelete), IResponder(Of IMessageDeleteBulk), IResponder
  inheritance:
  - System.Object
  implements:
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete}
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove}
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete}
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove}
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete}
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete}
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete}
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk}
  - Remora.Discord.Gateway.Responders.IResponder
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Caching.Responders.LateCacheResponder.#ctor(Remora.Discord.Caching.Services.CacheService)
  commentId: M:Remora.Discord.Caching.Responders.LateCacheResponder.#ctor(Remora.Discord.Caching.Services.CacheService)
  id: '#ctor(Remora.Discord.Caching.Services.CacheService)'
  parent: Remora.Discord.Caching.Responders.LateCacheResponder
  langs:
  - csharp
  - vb
  name: LateCacheResponder(CacheService)
  nameWithType: LateCacheResponder.LateCacheResponder(CacheService)
  fullName: Remora.Discord.Caching.Responders.LateCacheResponder.LateCacheResponder(Remora.Discord.Caching.Services.CacheService)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Caching\Responders\LateCacheResponder.cs
    startLine: 55
  assemblies:
  - Remora.Discord.Caching
  namespace: Remora.Discord.Caching.Responders
  summary: Initializes a new instance of the <xref href="Remora.Discord.Caching.Responders.LateCacheResponder" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public LateCacheResponder(CacheService cacheService)
    parameters:
    - id: cacheService
      type: Remora.Discord.Caching.Services.CacheService
      description: The cache service.
    content.vb: Public Sub New(cacheService As CacheService)
  overload: Remora.Discord.Caching.Responders.LateCacheResponder.#ctor*
  nameWithType.vb: LateCacheResponder.New(CacheService)
  fullName.vb: Remora.Discord.Caching.Responders.LateCacheResponder.New(Remora.Discord.Caching.Services.CacheService)
  name.vb: New(CacheService)
- uid: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete,System.Threading.CancellationToken)
  id: RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete,System.Threading.CancellationToken)
  parent: Remora.Discord.Caching.Responders.LateCacheResponder
  langs:
  - csharp
  - vb
  name: RespondAsync(IChannelDelete, CancellationToken)
  nameWithType: LateCacheResponder.RespondAsync(IChannelDelete, CancellationToken)
  fullName: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete, System.Threading.CancellationToken)
  type: Method
  source:
    id: RespondAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Caching\Responders\LateCacheResponder.cs
    startLine: 61
  assemblies:
  - Remora.Discord.Caching
  namespace: Remora.Discord.Caching.Responders
  summary: Responds to the given gateway event, handling it asynchronously.
  example: []
  syntax:
    content: public Task<Result> RespondAsync(IChannelDelete gatewayEvent, CancellationToken ct = default)
    parameters:
    - id: gatewayEvent
      type: Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete
      description: The event to respond to.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A response result which may or may not have succeeded.
    content.vb: Public Function RespondAsync(gatewayEvent As IChannelDelete, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync*
  implements:
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete,System.Threading.CancellationToken)
- uid: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove,System.Threading.CancellationToken)
  id: RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove,System.Threading.CancellationToken)
  parent: Remora.Discord.Caching.Responders.LateCacheResponder
  langs:
  - csharp
  - vb
  name: RespondAsync(IGuildBanRemove, CancellationToken)
  nameWithType: LateCacheResponder.RespondAsync(IGuildBanRemove, CancellationToken)
  fullName: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove, System.Threading.CancellationToken)
  type: Method
  source:
    id: RespondAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Caching\Responders\LateCacheResponder.cs
    startLine: 70
  assemblies:
  - Remora.Discord.Caching
  namespace: Remora.Discord.Caching.Responders
  summary: Responds to the given gateway event, handling it asynchronously.
  example: []
  syntax:
    content: public Task<Result> RespondAsync(IGuildBanRemove gatewayEvent, CancellationToken ct = default)
    parameters:
    - id: gatewayEvent
      type: Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove
      description: The event to respond to.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A response result which may or may not have succeeded.
    content.vb: Public Function RespondAsync(gatewayEvent As IGuildBanRemove, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync*
  implements:
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove,System.Threading.CancellationToken)
- uid: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete,System.Threading.CancellationToken)
  id: RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete,System.Threading.CancellationToken)
  parent: Remora.Discord.Caching.Responders.LateCacheResponder
  langs:
  - csharp
  - vb
  name: RespondAsync(IGuildDelete, CancellationToken)
  nameWithType: LateCacheResponder.RespondAsync(IGuildDelete, CancellationToken)
  fullName: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete, System.Threading.CancellationToken)
  type: Method
  source:
    id: RespondAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Caching\Responders\LateCacheResponder.cs
    startLine: 79
  assemblies:
  - Remora.Discord.Caching
  namespace: Remora.Discord.Caching.Responders
  summary: Responds to the given gateway event, handling it asynchronously.
  example: []
  syntax:
    content: public Task<Result> RespondAsync(IGuildDelete gatewayEvent, CancellationToken ct = default)
    parameters:
    - id: gatewayEvent
      type: Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete
      description: The event to respond to.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A response result which may or may not have succeeded.
    content.vb: Public Function RespondAsync(gatewayEvent As IGuildDelete, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync*
  implements:
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete,System.Threading.CancellationToken)
- uid: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove,System.Threading.CancellationToken)
  id: RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove,System.Threading.CancellationToken)
  parent: Remora.Discord.Caching.Responders.LateCacheResponder
  langs:
  - csharp
  - vb
  name: RespondAsync(IGuildMemberRemove, CancellationToken)
  nameWithType: LateCacheResponder.RespondAsync(IGuildMemberRemove, CancellationToken)
  fullName: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove, System.Threading.CancellationToken)
  type: Method
  source:
    id: RespondAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Caching\Responders\LateCacheResponder.cs
    startLine: 88
  assemblies:
  - Remora.Discord.Caching
  namespace: Remora.Discord.Caching.Responders
  summary: Responds to the given gateway event, handling it asynchronously.
  example: []
  syntax:
    content: public Task<Result> RespondAsync(IGuildMemberRemove gatewayEvent, CancellationToken ct = default)
    parameters:
    - id: gatewayEvent
      type: Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove
      description: The event to respond to.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A response result which may or may not have succeeded.
    content.vb: Public Function RespondAsync(gatewayEvent As IGuildMemberRemove, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync*
  implements:
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove,System.Threading.CancellationToken)
- uid: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete,System.Threading.CancellationToken)
  id: RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete,System.Threading.CancellationToken)
  parent: Remora.Discord.Caching.Responders.LateCacheResponder
  langs:
  - csharp
  - vb
  name: RespondAsync(IGuildRoleDelete, CancellationToken)
  nameWithType: LateCacheResponder.RespondAsync(IGuildRoleDelete, CancellationToken)
  fullName: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete, System.Threading.CancellationToken)
  type: Method
  source:
    id: RespondAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Caching\Responders\LateCacheResponder.cs
    startLine: 97
  assemblies:
  - Remora.Discord.Caching
  namespace: Remora.Discord.Caching.Responders
  summary: Responds to the given gateway event, handling it asynchronously.
  example: []
  syntax:
    content: public Task<Result> RespondAsync(IGuildRoleDelete gatewayEvent, CancellationToken ct = default)
    parameters:
    - id: gatewayEvent
      type: Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete
      description: The event to respond to.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A response result which may or may not have succeeded.
    content.vb: Public Function RespondAsync(gatewayEvent As IGuildRoleDelete, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync*
  implements:
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete,System.Threading.CancellationToken)
- uid: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete,System.Threading.CancellationToken)
  id: RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete,System.Threading.CancellationToken)
  parent: Remora.Discord.Caching.Responders.LateCacheResponder
  langs:
  - csharp
  - vb
  name: RespondAsync(IInviteDelete, CancellationToken)
  nameWithType: LateCacheResponder.RespondAsync(IInviteDelete, CancellationToken)
  fullName: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete, System.Threading.CancellationToken)
  type: Method
  source:
    id: RespondAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Caching\Responders\LateCacheResponder.cs
    startLine: 133
  assemblies:
  - Remora.Discord.Caching
  namespace: Remora.Discord.Caching.Responders
  summary: Responds to the given gateway event, handling it asynchronously.
  example: []
  syntax:
    content: public Task<Result> RespondAsync(IInviteDelete gatewayEvent, CancellationToken ct = default)
    parameters:
    - id: gatewayEvent
      type: Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete
      description: The event to respond to.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A response result which may or may not have succeeded.
    content.vb: Public Function RespondAsync(gatewayEvent As IInviteDelete, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync*
  implements:
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete,System.Threading.CancellationToken)
- uid: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete,System.Threading.CancellationToken)
  id: RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete,System.Threading.CancellationToken)
  parent: Remora.Discord.Caching.Responders.LateCacheResponder
  langs:
  - csharp
  - vb
  name: RespondAsync(IMessageDelete, CancellationToken)
  nameWithType: LateCacheResponder.RespondAsync(IMessageDelete, CancellationToken)
  fullName: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete, System.Threading.CancellationToken)
  type: Method
  source:
    id: RespondAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Caching\Responders\LateCacheResponder.cs
    startLine: 142
  assemblies:
  - Remora.Discord.Caching
  namespace: Remora.Discord.Caching.Responders
  summary: Responds to the given gateway event, handling it asynchronously.
  example: []
  syntax:
    content: public Task<Result> RespondAsync(IMessageDelete gatewayEvent, CancellationToken ct = default)
    parameters:
    - id: gatewayEvent
      type: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete
      description: The event to respond to.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A response result which may or may not have succeeded.
    content.vb: Public Function RespondAsync(gatewayEvent As IMessageDelete, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync*
  implements:
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete,System.Threading.CancellationToken)
- uid: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk,System.Threading.CancellationToken)
  id: RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk,System.Threading.CancellationToken)
  parent: Remora.Discord.Caching.Responders.LateCacheResponder
  langs:
  - csharp
  - vb
  name: RespondAsync(IMessageDeleteBulk, CancellationToken)
  nameWithType: LateCacheResponder.RespondAsync(IMessageDeleteBulk, CancellationToken)
  fullName: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk, System.Threading.CancellationToken)
  type: Method
  source:
    id: RespondAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Caching\Responders\LateCacheResponder.cs
    startLine: 151
  assemblies:
  - Remora.Discord.Caching
  namespace: Remora.Discord.Caching.Responders
  summary: Responds to the given gateway event, handling it asynchronously.
  example: []
  syntax:
    content: public Task<Result> RespondAsync(IMessageDeleteBulk gatewayEvent, CancellationToken ct = default)
    parameters:
    - id: gatewayEvent
      type: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk
      description: The event to respond to.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A response result which may or may not have succeeded.
    content.vb: Public Function RespondAsync(gatewayEvent As IMessageDeleteBulk, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync*
  implements:
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk,System.Threading.CancellationToken)
references:
- uid: Remora.Discord.Caching.Responders
  commentId: N:Remora.Discord.Caching.Responders
  href: Remora.html
  name: Remora.Discord.Caching.Responders
  nameWithType: Remora.Discord.Caching.Responders
  fullName: Remora.Discord.Caching.Responders
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Responders
    name: Responders
    href: Remora.Discord.Caching.Responders.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Responders
    name: Responders
    href: Remora.Discord.Caching.Responders.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete}
  commentId: T:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete}
  parent: Remora.Discord.Gateway.Responders
  definition: Remora.Discord.Gateway.Responders.IResponder`1
  href: Remora.Discord.Gateway.Responders.IResponder-1.html
  name: IResponder<IChannelDelete>
  nameWithType: IResponder<IChannelDelete>
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete>
  nameWithType.vb: IResponder(Of IChannelDelete)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete)
  name.vb: IResponder(Of IChannelDelete)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete
    name: IChannelDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete.html
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete
    name: IChannelDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete.html
  - name: )
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove}
  commentId: T:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove}
  parent: Remora.Discord.Gateway.Responders
  definition: Remora.Discord.Gateway.Responders.IResponder`1
  href: Remora.Discord.Gateway.Responders.IResponder-1.html
  name: IResponder<IGuildBanRemove>
  nameWithType: IResponder<IGuildBanRemove>
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove>
  nameWithType.vb: IResponder(Of IGuildBanRemove)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove)
  name.vb: IResponder(Of IGuildBanRemove)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove
    name: IGuildBanRemove
    href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove.html
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove
    name: IGuildBanRemove
    href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove.html
  - name: )
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete}
  commentId: T:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete}
  parent: Remora.Discord.Gateway.Responders
  definition: Remora.Discord.Gateway.Responders.IResponder`1
  href: Remora.Discord.Gateway.Responders.IResponder-1.html
  name: IResponder<IGuildDelete>
  nameWithType: IResponder<IGuildDelete>
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete>
  nameWithType.vb: IResponder(Of IGuildDelete)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete)
  name.vb: IResponder(Of IGuildDelete)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete
    name: IGuildDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete.html
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete
    name: IGuildDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete.html
  - name: )
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove}
  commentId: T:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove}
  parent: Remora.Discord.Gateway.Responders
  definition: Remora.Discord.Gateway.Responders.IResponder`1
  href: Remora.Discord.Gateway.Responders.IResponder-1.html
  name: IResponder<IGuildMemberRemove>
  nameWithType: IResponder<IGuildMemberRemove>
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove>
  nameWithType.vb: IResponder(Of IGuildMemberRemove)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove)
  name.vb: IResponder(Of IGuildMemberRemove)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove
    name: IGuildMemberRemove
    href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove.html
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove
    name: IGuildMemberRemove
    href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove.html
  - name: )
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete}
  commentId: T:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete}
  parent: Remora.Discord.Gateway.Responders
  definition: Remora.Discord.Gateway.Responders.IResponder`1
  href: Remora.Discord.Gateway.Responders.IResponder-1.html
  name: IResponder<IGuildRoleDelete>
  nameWithType: IResponder<IGuildRoleDelete>
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete>
  nameWithType.vb: IResponder(Of IGuildRoleDelete)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete)
  name.vb: IResponder(Of IGuildRoleDelete)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete
    name: IGuildRoleDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete.html
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete
    name: IGuildRoleDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete.html
  - name: )
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete}
  commentId: T:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete}
  parent: Remora.Discord.Gateway.Responders
  definition: Remora.Discord.Gateway.Responders.IResponder`1
  href: Remora.Discord.Gateway.Responders.IResponder-1.html
  name: IResponder<IInviteDelete>
  nameWithType: IResponder<IInviteDelete>
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete>
  nameWithType.vb: IResponder(Of IInviteDelete)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete)
  name.vb: IResponder(Of IInviteDelete)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete
    name: IInviteDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete.html
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete
    name: IInviteDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete.html
  - name: )
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete}
  commentId: T:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete}
  parent: Remora.Discord.Gateway.Responders
  definition: Remora.Discord.Gateway.Responders.IResponder`1
  href: Remora.Discord.Gateway.Responders.IResponder-1.html
  name: IResponder<IMessageDelete>
  nameWithType: IResponder<IMessageDelete>
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete>
  nameWithType.vb: IResponder(Of IMessageDelete)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete)
  name.vb: IResponder(Of IMessageDelete)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete
    name: IMessageDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete.html
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete
    name: IMessageDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete.html
  - name: )
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk}
  commentId: T:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk}
  parent: Remora.Discord.Gateway.Responders
  definition: Remora.Discord.Gateway.Responders.IResponder`1
  href: Remora.Discord.Gateway.Responders.IResponder-1.html
  name: IResponder<IMessageDeleteBulk>
  nameWithType: IResponder<IMessageDeleteBulk>
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk>
  nameWithType.vb: IResponder(Of IMessageDeleteBulk)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk)
  name.vb: IResponder(Of IMessageDeleteBulk)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk
    name: IMessageDeleteBulk
    href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.html
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk
    name: IMessageDeleteBulk
    href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.html
  - name: )
- uid: Remora.Discord.Gateway.Responders.IResponder
  commentId: T:Remora.Discord.Gateway.Responders.IResponder
  parent: Remora.Discord.Gateway.Responders
  href: Remora.Discord.Gateway.Responders.IResponder.html
  name: IResponder
  nameWithType: IResponder
  fullName: Remora.Discord.Gateway.Responders.IResponder
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Gateway.Responders.IResponder`1
  commentId: T:Remora.Discord.Gateway.Responders.IResponder`1
  href: Remora.Discord.Gateway.Responders.IResponder-1.html
  name: IResponder<TGatewayEvent>
  nameWithType: IResponder<TGatewayEvent>
  fullName: Remora.Discord.Gateway.Responders.IResponder<TGatewayEvent>
  nameWithType.vb: IResponder(Of TGatewayEvent)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of TGatewayEvent)
  name.vb: IResponder(Of TGatewayEvent)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: <
  - name: TGatewayEvent
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TGatewayEvent
  - name: )
- uid: Remora.Discord.Gateway.Responders
  commentId: N:Remora.Discord.Gateway.Responders
  href: Remora.html
  name: Remora.Discord.Gateway.Responders
  nameWithType: Remora.Discord.Gateway.Responders
  fullName: Remora.Discord.Gateway.Responders
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Responders
    name: Responders
    href: Remora.Discord.Gateway.Responders.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Responders
    name: Responders
    href: Remora.Discord.Gateway.Responders.html
- uid: Remora.Discord.Caching.Responders.LateCacheResponder
  commentId: T:Remora.Discord.Caching.Responders.LateCacheResponder
  href: Remora.Discord.Caching.Responders.LateCacheResponder.html
  name: LateCacheResponder
  nameWithType: LateCacheResponder
  fullName: Remora.Discord.Caching.Responders.LateCacheResponder
- uid: Remora.Discord.Caching.Responders.LateCacheResponder.#ctor*
  commentId: Overload:Remora.Discord.Caching.Responders.LateCacheResponder.#ctor
  href: Remora.Discord.Caching.Responders.LateCacheResponder.html#Remora_Discord_Caching_Responders_LateCacheResponder__ctor_Remora_Discord_Caching_Services_CacheService_
  name: LateCacheResponder
  nameWithType: LateCacheResponder.LateCacheResponder
  fullName: Remora.Discord.Caching.Responders.LateCacheResponder.LateCacheResponder
  nameWithType.vb: LateCacheResponder.New
  fullName.vb: Remora.Discord.Caching.Responders.LateCacheResponder.New
  name.vb: New
- uid: Remora.Discord.Caching.Services.CacheService
  commentId: T:Remora.Discord.Caching.Services.CacheService
  parent: Remora.Discord.Caching.Services
  href: Remora.Discord.Caching.Services.CacheService.html
  name: CacheService
  nameWithType: CacheService
  fullName: Remora.Discord.Caching.Services.CacheService
- uid: Remora.Discord.Caching.Services
  commentId: N:Remora.Discord.Caching.Services
  href: Remora.html
  name: Remora.Discord.Caching.Services
  nameWithType: Remora.Discord.Caching.Services
  fullName: Remora.Discord.Caching.Services
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Services
    name: Services
    href: Remora.Discord.Caching.Services.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Services
    name: Services
    href: Remora.Discord.Caching.Services.html
- uid: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync*
  commentId: Overload:Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync
  href: Remora.Discord.Caching.Responders.LateCacheResponder.html#Remora_Discord_Caching_Responders_LateCacheResponder_RespondAsync_Remora_Discord_API_Abstractions_Gateway_Events_IChannelDelete_System_Threading_CancellationToken_
  name: RespondAsync
  nameWithType: LateCacheResponder.RespondAsync
  fullName: Remora.Discord.Caching.Responders.LateCacheResponder.RespondAsync
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete}
  definition: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
  href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  name: RespondAsync(IChannelDelete, CancellationToken)
  nameWithType: IResponder<IChannelDelete>.RespondAsync(IChannelDelete, CancellationToken)
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete>.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete, System.Threading.CancellationToken)
  nameWithType.vb: IResponder(Of IChannelDelete).RespondAsync(IChannelDelete, CancellationToken)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete).RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete
    name: IChannelDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete
    name: IChannelDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete
  commentId: T:Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete
  parent: Remora.Discord.API.Abstractions.Gateway.Events
  href: Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete.html
  name: IChannelDelete
  nameWithType: IChannelDelete
  fullName: Remora.Discord.API.Abstractions.Gateway.Events.IChannelDelete
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Remora.Results.Result}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result>
  nameWithType: Task<Result>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result>
  nameWithType.vb: Task(Of Result)
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result)
  name.vb: Task(Of Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: )
- uid: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  name: RespondAsync(TGatewayEvent, CancellationToken)
  nameWithType: IResponder<TGatewayEvent>.RespondAsync(TGatewayEvent, CancellationToken)
  fullName: Remora.Discord.Gateway.Responders.IResponder<TGatewayEvent>.RespondAsync(TGatewayEvent, System.Threading.CancellationToken)
  nameWithType.vb: IResponder(Of TGatewayEvent).RespondAsync(TGatewayEvent, CancellationToken)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of TGatewayEvent).RespondAsync(TGatewayEvent, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - name: TGatewayEvent
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - name: TGatewayEvent
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Gateway.Events
  commentId: N:Remora.Discord.API.Abstractions.Gateway.Events
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Gateway.Events
  nameWithType: Remora.Discord.API.Abstractions.Gateway.Events
  fullName: Remora.Discord.API.Abstractions.Gateway.Events
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway
    name: Gateway
    href: Remora.Discord.API.Abstractions.Gateway.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway.Events
    name: Events
    href: Remora.Discord.API.Abstractions.Gateway.Events.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway
    name: Gateway
    href: Remora.Discord.API.Abstractions.Gateway.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway.Events
    name: Events
    href: Remora.Discord.API.Abstractions.Gateway.Events.html
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove}
  definition: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
  href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  name: RespondAsync(IGuildBanRemove, CancellationToken)
  nameWithType: IResponder<IGuildBanRemove>.RespondAsync(IGuildBanRemove, CancellationToken)
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove>.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove, System.Threading.CancellationToken)
  nameWithType.vb: IResponder(Of IGuildBanRemove).RespondAsync(IGuildBanRemove, CancellationToken)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove).RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove
    name: IGuildBanRemove
    href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove
    name: IGuildBanRemove
    href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove
  commentId: T:Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove
  parent: Remora.Discord.API.Abstractions.Gateway.Events
  href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove.html
  name: IGuildBanRemove
  nameWithType: IGuildBanRemove
  fullName: Remora.Discord.API.Abstractions.Gateway.Events.IGuildBanRemove
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete}
  definition: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
  href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  name: RespondAsync(IGuildDelete, CancellationToken)
  nameWithType: IResponder<IGuildDelete>.RespondAsync(IGuildDelete, CancellationToken)
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete>.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete, System.Threading.CancellationToken)
  nameWithType.vb: IResponder(Of IGuildDelete).RespondAsync(IGuildDelete, CancellationToken)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete).RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete
    name: IGuildDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete
    name: IGuildDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete
  commentId: T:Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete
  parent: Remora.Discord.API.Abstractions.Gateway.Events
  href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete.html
  name: IGuildDelete
  nameWithType: IGuildDelete
  fullName: Remora.Discord.API.Abstractions.Gateway.Events.IGuildDelete
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove}
  definition: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
  href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  name: RespondAsync(IGuildMemberRemove, CancellationToken)
  nameWithType: IResponder<IGuildMemberRemove>.RespondAsync(IGuildMemberRemove, CancellationToken)
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove>.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove, System.Threading.CancellationToken)
  nameWithType.vb: IResponder(Of IGuildMemberRemove).RespondAsync(IGuildMemberRemove, CancellationToken)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove).RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove
    name: IGuildMemberRemove
    href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove
    name: IGuildMemberRemove
    href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove
  commentId: T:Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove
  parent: Remora.Discord.API.Abstractions.Gateway.Events
  href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove.html
  name: IGuildMemberRemove
  nameWithType: IGuildMemberRemove
  fullName: Remora.Discord.API.Abstractions.Gateway.Events.IGuildMemberRemove
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete}
  definition: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
  href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  name: RespondAsync(IGuildRoleDelete, CancellationToken)
  nameWithType: IResponder<IGuildRoleDelete>.RespondAsync(IGuildRoleDelete, CancellationToken)
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete>.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete, System.Threading.CancellationToken)
  nameWithType.vb: IResponder(Of IGuildRoleDelete).RespondAsync(IGuildRoleDelete, CancellationToken)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete).RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete
    name: IGuildRoleDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete
    name: IGuildRoleDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete
  commentId: T:Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete
  parent: Remora.Discord.API.Abstractions.Gateway.Events
  href: Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete.html
  name: IGuildRoleDelete
  nameWithType: IGuildRoleDelete
  fullName: Remora.Discord.API.Abstractions.Gateway.Events.IGuildRoleDelete
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete}
  definition: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
  href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  name: RespondAsync(IInviteDelete, CancellationToken)
  nameWithType: IResponder<IInviteDelete>.RespondAsync(IInviteDelete, CancellationToken)
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete>.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete, System.Threading.CancellationToken)
  nameWithType.vb: IResponder(Of IInviteDelete).RespondAsync(IInviteDelete, CancellationToken)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete).RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete
    name: IInviteDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete
    name: IInviteDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete
  commentId: T:Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete
  parent: Remora.Discord.API.Abstractions.Gateway.Events
  href: Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete.html
  name: IInviteDelete
  nameWithType: IInviteDelete
  fullName: Remora.Discord.API.Abstractions.Gateway.Events.IInviteDelete
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete}
  definition: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
  href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  name: RespondAsync(IMessageDelete, CancellationToken)
  nameWithType: IResponder<IMessageDelete>.RespondAsync(IMessageDelete, CancellationToken)
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete>.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete, System.Threading.CancellationToken)
  nameWithType.vb: IResponder(Of IMessageDelete).RespondAsync(IMessageDelete, CancellationToken)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete).RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete
    name: IMessageDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete
    name: IMessageDelete
    href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete
  commentId: T:Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete
  parent: Remora.Discord.API.Abstractions.Gateway.Events
  href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete.html
  name: IMessageDelete
  nameWithType: IMessageDelete
  fullName: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDelete
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk}
  definition: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
  href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  name: RespondAsync(IMessageDeleteBulk, CancellationToken)
  nameWithType: IResponder<IMessageDeleteBulk>.RespondAsync(IMessageDeleteBulk, CancellationToken)
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk>.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk, System.Threading.CancellationToken)
  nameWithType.vb: IResponder(Of IMessageDeleteBulk).RespondAsync(IMessageDeleteBulk, CancellationToken)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk).RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk
    name: IMessageDeleteBulk
    href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk
    name: IMessageDeleteBulk
    href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk
  commentId: T:Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk
  parent: Remora.Discord.API.Abstractions.Gateway.Events
  href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.html
  name: IMessageDeleteBulk
  nameWithType: IMessageDeleteBulk
  fullName: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk
