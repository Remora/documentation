### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder
  commentId: T:Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder
  id: UnknownEventResponder
  parent: Remora.Discord.Samples.UnknownEventLogger.Responders
  children:
  - Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.#ctor(Microsoft.Extensions.Logging.ILogger{Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder})
  - Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: UnknownEventResponder
  nameWithType: UnknownEventResponder
  fullName: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder
  type: Class
  source:
    id: UnknownEventResponder
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Samples\UnknownEventLogger\Responders\UnknownEventResponder.cs
    startLine: 21
  assemblies:
  - UnknownEventLogger
  namespace: Remora.Discord.Samples.UnknownEventLogger.Responders
  summary: Responds to unknown events, logging them to disk.
  example: []
  syntax:
    content: 'public class UnknownEventResponder : IResponder<IUnknownEvent>, IResponder'
    content.vb: Public Class UnknownEventResponder Implements IResponder(Of IUnknownEvent), IResponder
  inheritance:
  - System.Object
  implements:
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent}
  - Remora.Discord.Gateway.Responders.IResponder
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.#ctor(Microsoft.Extensions.Logging.ILogger{Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder})
  commentId: M:Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.#ctor(Microsoft.Extensions.Logging.ILogger{Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder})
  id: '#ctor(Microsoft.Extensions.Logging.ILogger{Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder})'
  parent: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder
  langs:
  - csharp
  - vb
  name: UnknownEventResponder(ILogger<UnknownEventResponder>)
  nameWithType: UnknownEventResponder.UnknownEventResponder(ILogger<UnknownEventResponder>)
  fullName: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.UnknownEventResponder(Microsoft.Extensions.Logging.ILogger<Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder>)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Samples\UnknownEventLogger\Responders\UnknownEventResponder.cs
    startLine: 29
  assemblies:
  - UnknownEventLogger
  namespace: Remora.Discord.Samples.UnknownEventLogger.Responders
  summary: Initializes a new instance of the <xref href="Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public UnknownEventResponder(ILogger<UnknownEventResponder> log)
    parameters:
    - id: log
      type: Microsoft.Extensions.Logging.ILogger{Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder}
      description: The logging instance.
    content.vb: Public Sub New(log As ILogger(Of UnknownEventResponder))
  overload: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.#ctor*
  nameWithType.vb: UnknownEventResponder.New(ILogger(Of UnknownEventResponder))
  fullName.vb: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.New(Microsoft.Extensions.Logging.ILogger(Of Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder))
  name.vb: New(ILogger(Of UnknownEventResponder))
- uid: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent,System.Threading.CancellationToken)
  id: RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent,System.Threading.CancellationToken)
  parent: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder
  langs:
  - csharp
  - vb
  name: RespondAsync(IUnknownEvent?, CancellationToken)
  nameWithType: UnknownEventResponder.RespondAsync(IUnknownEvent?, CancellationToken)
  fullName: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent?, System.Threading.CancellationToken)
  type: Method
  source:
    id: RespondAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Samples\UnknownEventLogger\Responders\UnknownEventResponder.cs
    startLine: 35
  assemblies:
  - UnknownEventLogger
  namespace: Remora.Discord.Samples.UnknownEventLogger.Responders
  summary: Responds to the given gateway event, handling it asynchronously.
  example: []
  syntax:
    content: public Task<Result> RespondAsync(IUnknownEvent? gatewayEvent, CancellationToken ct = default)
    parameters:
    - id: gatewayEvent
      type: Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent
      description: The event to respond to.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A response result which may or may not have succeeded.
    content.vb: Public Function RespondAsync(gatewayEvent As IUnknownEvent, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.RespondAsync*
  implements:
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent,System.Threading.CancellationToken)
  nameWithType.vb: UnknownEventResponder.RespondAsync(IUnknownEvent, CancellationToken)
  fullName.vb: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent, System.Threading.CancellationToken)
  name.vb: RespondAsync(IUnknownEvent, CancellationToken)
references:
- uid: Remora.Discord.Samples.UnknownEventLogger.Responders
  commentId: N:Remora.Discord.Samples.UnknownEventLogger.Responders
  href: Remora.html
  name: Remora.Discord.Samples.UnknownEventLogger.Responders
  nameWithType: Remora.Discord.Samples.UnknownEventLogger.Responders
  fullName: Remora.Discord.Samples.UnknownEventLogger.Responders
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Samples
    name: Samples
    href: Remora.Discord.Samples.html
  - name: .
  - uid: Remora.Discord.Samples.UnknownEventLogger
    name: UnknownEventLogger
    href: Remora.Discord.Samples.UnknownEventLogger.html
  - name: .
  - uid: Remora.Discord.Samples.UnknownEventLogger.Responders
    name: Responders
    href: Remora.Discord.Samples.UnknownEventLogger.Responders.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Samples
    name: Samples
    href: Remora.Discord.Samples.html
  - name: .
  - uid: Remora.Discord.Samples.UnknownEventLogger
    name: UnknownEventLogger
    href: Remora.Discord.Samples.UnknownEventLogger.html
  - name: .
  - uid: Remora.Discord.Samples.UnknownEventLogger.Responders
    name: Responders
    href: Remora.Discord.Samples.UnknownEventLogger.Responders.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent}
  commentId: T:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent}
  parent: Remora.Discord.Gateway.Responders
  definition: Remora.Discord.Gateway.Responders.IResponder`1
  name: IResponder<IUnknownEvent>
  nameWithType: IResponder<IUnknownEvent>
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent>
  nameWithType.vb: IResponder(Of IUnknownEvent)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent)
  name.vb: IResponder(Of IUnknownEvent)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
  - name: <
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent
    name: IUnknownEvent
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent
    name: IUnknownEvent
  - name: )
- uid: Remora.Discord.Gateway.Responders.IResponder
  commentId: T:Remora.Discord.Gateway.Responders.IResponder
  parent: Remora.Discord.Gateway.Responders
  href: Remora.Discord.Gateway.Responders.IResponder.html
  name: IResponder
  nameWithType: IResponder
  fullName: Remora.Discord.Gateway.Responders.IResponder
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Gateway.Responders.IResponder`1
  commentId: T:Remora.Discord.Gateway.Responders.IResponder`1
  href: Remora.Discord.Gateway.Responders.IResponder-1.html
  name: IResponder<TGatewayEvent>
  nameWithType: IResponder<TGatewayEvent>
  fullName: Remora.Discord.Gateway.Responders.IResponder<TGatewayEvent>
  nameWithType.vb: IResponder(Of TGatewayEvent)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of TGatewayEvent)
  name.vb: IResponder(Of TGatewayEvent)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: <
  - name: TGatewayEvent
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TGatewayEvent
  - name: )
- uid: Remora.Discord.Gateway.Responders
  commentId: N:Remora.Discord.Gateway.Responders
  href: Remora.html
  name: Remora.Discord.Gateway.Responders
  nameWithType: Remora.Discord.Gateway.Responders
  fullName: Remora.Discord.Gateway.Responders
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Responders
    name: Responders
    href: Remora.Discord.Gateway.Responders.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Responders
    name: Responders
    href: Remora.Discord.Gateway.Responders.html
- uid: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder
  commentId: T:Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder
  href: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.html
  name: UnknownEventResponder
  nameWithType: UnknownEventResponder
  fullName: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder
- uid: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.#ctor*
  commentId: Overload:Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.#ctor
  href: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.html#Remora_Discord_Samples_UnknownEventLogger_Responders_UnknownEventResponder__ctor_Microsoft_Extensions_Logging_ILogger_Remora_Discord_Samples_UnknownEventLogger_Responders_UnknownEventResponder__
  name: UnknownEventResponder
  nameWithType: UnknownEventResponder.UnknownEventResponder
  fullName: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.UnknownEventResponder
  nameWithType.vb: UnknownEventResponder.New
  fullName.vb: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.New
  name.vb: New
- uid: Microsoft.Extensions.Logging.ILogger{Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder}
  commentId: T:Microsoft.Extensions.Logging.ILogger{Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<UnknownEventResponder>
  nameWithType: ILogger<UnknownEventResponder>
  fullName: Microsoft.Extensions.Logging.ILogger<Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder>
  nameWithType.vb: ILogger(Of UnknownEventResponder)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder)
  name.vb: ILogger(Of UnknownEventResponder)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder
    name: UnknownEventResponder
    href: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder
    name: UnknownEventResponder
    href: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.html
  - name: )
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.RespondAsync*
  commentId: Overload:Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.RespondAsync
  href: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.html#Remora_Discord_Samples_UnknownEventLogger_Responders_UnknownEventResponder_RespondAsync_Remora_Discord_API_Abstractions_Gateway_Events_IUnknownEvent_System_Threading_CancellationToken_
  name: RespondAsync
  nameWithType: UnknownEventResponder.RespondAsync
  fullName: Remora.Discord.Samples.UnknownEventLogger.Responders.UnknownEventResponder.RespondAsync
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent}
  definition: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: RespondAsync(IUnknownEvent, CancellationToken)
  nameWithType: IResponder<IUnknownEvent>.RespondAsync(IUnknownEvent, CancellationToken)
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent>.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent, System.Threading.CancellationToken)
  nameWithType.vb: IResponder(Of IUnknownEvent).RespondAsync(IUnknownEvent, CancellationToken)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent).RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent,System.Threading.CancellationToken)
    name: RespondAsync
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent
    name: IUnknownEvent
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent,System.Threading.CancellationToken)
    name: RespondAsync
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent
    name: IUnknownEvent
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent
  commentId: T:Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent
  parent: Remora.Discord.API.Abstractions.Gateway.Events
  href: Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent.html
  name: IUnknownEvent
  nameWithType: IUnknownEvent
  fullName: Remora.Discord.API.Abstractions.Gateway.Events.IUnknownEvent
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Remora.Results.Result}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result>
  nameWithType: Task<Result>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result>
  nameWithType.vb: Task(Of Result)
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result)
  name.vb: Task(Of Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: )
- uid: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  name: RespondAsync(TGatewayEvent, CancellationToken)
  nameWithType: IResponder<TGatewayEvent>.RespondAsync(TGatewayEvent, CancellationToken)
  fullName: Remora.Discord.Gateway.Responders.IResponder<TGatewayEvent>.RespondAsync(TGatewayEvent, System.Threading.CancellationToken)
  nameWithType.vb: IResponder(Of TGatewayEvent).RespondAsync(TGatewayEvent, CancellationToken)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of TGatewayEvent).RespondAsync(TGatewayEvent, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - name: TGatewayEvent
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - name: TGatewayEvent
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Gateway.Events
  commentId: N:Remora.Discord.API.Abstractions.Gateway.Events
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Gateway.Events
  nameWithType: Remora.Discord.API.Abstractions.Gateway.Events
  fullName: Remora.Discord.API.Abstractions.Gateway.Events
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway
    name: Gateway
    href: Remora.Discord.API.Abstractions.Gateway.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway.Events
    name: Events
    href: Remora.Discord.API.Abstractions.Gateway.Events.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway
    name: Gateway
    href: Remora.Discord.API.Abstractions.Gateway.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway.Events
    name: Events
    href: Remora.Discord.API.Abstractions.Gateway.Events.html
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
