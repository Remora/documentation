### YamlMime:ManagedReference
items:
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI
  commentId: T:Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI
  id: IDiscordRestInviteAPI
  parent: Remora.Discord.API.Abstractions.Rest
  children:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.DeleteInviteAsync(System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.GetInviteAsync(System.String,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IDiscordRestInviteAPI
  nameWithType: IDiscordRestInviteAPI
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI
  type: Interface
  source:
    id: IDiscordRestInviteAPI
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestInviteAPI.cs
    startLine: 34
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Represents the Discord Invite API.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public interface IDiscordRestInviteAPI
    content.vb: >-
      <PublicAPI>

      Public Interface IDiscordRestInviteAPI
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.GetInviteAsync(System.String,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.GetInviteAsync(System.String,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  id: GetInviteAsync(System.String,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI
  langs:
  - csharp
  - vb
  name: GetInviteAsync(string, Optional<bool>, Optional<bool>, Optional<Snowflake>, CancellationToken)
  nameWithType: IDiscordRestInviteAPI.GetInviteAsync(string, Optional<bool>, Optional<bool>, Optional<Snowflake>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.GetInviteAsync(string, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetInviteAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestInviteAPI.cs
    startLine: 46
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Gets an invite object for the given code.
  example: []
  syntax:
    content: Task<Result<IInvite>> GetInviteAsync(string inviteCode, Optional<bool> withCounts = default, Optional<bool> withExpiration = default, Optional<Snowflake> guildScheduledEventID = default, CancellationToken ct = default)
    parameters:
    - id: inviteCode
      type: System.String
      description: The invite code.
    - id: withCounts
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether the invite should contain approximate member counts.
    - id: withExpiration
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether the invite should contain the expiration date.
    - id: guildScheduledEventID
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: The scheduled event to include with the invite.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IInvite}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Function GetInviteAsync(inviteCode As String, withCounts As [Optional](Of Boolean) = Nothing, withExpiration As [Optional](Of Boolean) = Nothing, guildScheduledEventID As [Optional](Of Snowflake) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IInvite))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.GetInviteAsync*
  nameWithType.vb: IDiscordRestInviteAPI.GetInviteAsync(String, Optional(Of Boolean), Optional(Of Boolean), Optional(Of Snowflake), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.GetInviteAsync(String, Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), System.Threading.CancellationToken)
  name.vb: GetInviteAsync(String, Optional(Of Boolean), Optional(Of Boolean), Optional(Of Snowflake), CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.DeleteInviteAsync(System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.DeleteInviteAsync(System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: DeleteInviteAsync(System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI
  langs:
  - csharp
  - vb
  name: DeleteInviteAsync(string, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestInviteAPI.DeleteInviteAsync(string, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.DeleteInviteAsync(string, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteInviteAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestInviteAPI.cs
    startLine: 62
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Deletes the given invite code.
  example: []
  syntax:
    content: Task<Result<IInvite>> DeleteInviteAsync(string inviteCode, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: inviteCode
      type: System.String
      description: The invite code.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IInvite}}
      description: A deletion result which may or may not have succeeded.
    content.vb: Function DeleteInviteAsync(inviteCode As String, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IInvite))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.DeleteInviteAsync*
  nameWithType.vb: IDiscordRestInviteAPI.DeleteInviteAsync(String, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.DeleteInviteAsync(String, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: DeleteInviteAsync(String, Optional(Of String), CancellationToken)
references:
- uid: Remora.Discord.API.Abstractions.Rest
  commentId: N:Remora.Discord.API.Abstractions.Rest
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Rest
  nameWithType: Remora.Discord.API.Abstractions.Rest
  fullName: Remora.Discord.API.Abstractions.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.GetInviteAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.GetInviteAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestInviteAPI_GetInviteAsync_System_String_Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  name: GetInviteAsync
  nameWithType: IDiscordRestInviteAPI.GetInviteAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.GetInviteAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Remora.Rest.Core.Optional{System.Boolean}
  commentId: T:Remora.Rest.Core.Optional{System.Boolean}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Optional<bool>
  nameWithType: Optional<bool>
  fullName: Remora.Rest.Core.Optional<bool>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: Remora.Rest.Core.Optional(Of Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  commentId: T:Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  name: Optional<Snowflake>
  nameWithType: Optional<Snowflake>
  fullName: Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>
  nameWithType.vb: Optional(Of Snowflake)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake)
  name.vb: Optional(Of Snowflake)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IInvite}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IInvite}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IInvite>>
  nameWithType: Task<Result<IInvite>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IInvite>>
  nameWithType.vb: Task(Of Result(Of IInvite))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IInvite))
  name.vb: Task(Of Result(Of IInvite))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IInvite
    name: IInvite
    href: Remora.Discord.API.Abstractions.Objects.IInvite.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IInvite
    name: IInvite
    href: Remora.Discord.API.Abstractions.Objects.IInvite.html
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.DeleteInviteAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.DeleteInviteAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestInviteAPI_DeleteInviteAsync_System_String_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: DeleteInviteAsync
  nameWithType: IDiscordRestInviteAPI.DeleteInviteAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInviteAPI.DeleteInviteAsync
- uid: Remora.Rest.Core.Optional{System.String}
  commentId: T:Remora.Rest.Core.Optional{System.String}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Optional<string>
  nameWithType: Optional<string>
  fullName: Remora.Rest.Core.Optional<string>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Remora.Rest.Core.Optional(Of String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
