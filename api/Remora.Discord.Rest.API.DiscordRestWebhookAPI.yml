### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI
  commentId: T:Remora.Discord.Rest.API.DiscordRestWebhookAPI
  id: DiscordRestWebhookAPI
  parent: Remora.Discord.Rest.API
  children:
  - Remora.Discord.Rest.API.DiscordRestWebhookAPI.#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  - Remora.Discord.Rest.API.DiscordRestWebhookAPI.CreateWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestWebhookAPI.EditWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetChannelWebhooksAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetGuildWebhooksAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestWebhookAPI.ModifyWebhookAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestWebhookAPI.ModifyWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: DiscordRestWebhookAPI
  nameWithType: DiscordRestWebhookAPI
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI
  type: Class
  source:
    id: DiscordRestWebhookAPI
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Webhooks\DiscordRestWebhookAPI.cs
    startLine: 47
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Represents the Discord Webhook API.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public class DiscordRestWebhookAPI : AbstractDiscordRestAPI, IRestCustomizable, IDiscordRestWebhookAPI
    content.vb: >-
      <PublicAPI>

      Public Class DiscordRestWebhookAPI Inherits AbstractDiscordRestAPI Implements IRestCustomizable, IDiscordRestWebhookAPI
  inheritance:
  - System.Object
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI
  implements:
  - Remora.Rest.IRestCustomizable
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
  inheritedMembers:
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  commentId: M:Remora.Discord.Rest.API.DiscordRestWebhookAPI.#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  id: '#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)'
  parent: Remora.Discord.Rest.API.DiscordRestWebhookAPI
  langs:
  - csharp
  - vb
  name: DiscordRestWebhookAPI(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
  nameWithType: DiscordRestWebhookAPI.DiscordRestWebhookAPI(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DiscordRestWebhookAPI(Remora.Rest.IRestHttpClient, System.Text.Json.JsonSerializerOptions, Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Webhooks\DiscordRestWebhookAPI.cs
    startLine: 56
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Initializes a new instance of the <xref href="Remora.Discord.Rest.API.DiscordRestWebhookAPI" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public DiscordRestWebhookAPI(IRestHttpClient restHttpClient, JsonSerializerOptions jsonOptions, ICacheProvider rateLimitCache)
    parameters:
    - id: restHttpClient
      type: Remora.Rest.IRestHttpClient
      description: The Discord HTTP client.
    - id: jsonOptions
      type: System.Text.Json.JsonSerializerOptions
      description: The JSON options.
    - id: rateLimitCache
      type: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
      description: The memory cache used for rate limits.
    content.vb: Public Sub New(restHttpClient As IRestHttpClient, jsonOptions As JsonSerializerOptions, rateLimitCache As ICacheProvider)
  overload: Remora.Discord.Rest.API.DiscordRestWebhookAPI.#ctor*
  nameWithType.vb: DiscordRestWebhookAPI.New(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestWebhookAPI.New(Remora.Rest.IRestHttpClient, System.Text.Json.JsonSerializerOptions, Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  name.vb: New(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.CreateWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestWebhookAPI.CreateWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: CreateWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestWebhookAPI
  langs:
  - csharp
  - vb
  name: CreateWebhookAsync(Snowflake, string, Optional<Stream?>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestWebhookAPI.CreateWebhookAsync(Snowflake, string, Optional<Stream?>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.CreateWebhookAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<System.IO.Stream?>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: CreateWebhookAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Webhooks\DiscordRestWebhookAPI.cs
    startLine: 67
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Creates a new webhook.
  remarks: >-
    Any streams passed to this method will be disposed of at the end of the call. If you want to reuse the streams

    afterwards, ensure that what you pass is a copy that the method can take ownership of.
  example: []
  syntax:
    content: public virtual Task<Result<IWebhook>> CreateWebhookAsync(Snowflake channelID, string name, Optional<Stream?> avatar, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel the webhook is for.
    - id: name
      type: System.String
      description: The name of the webhook.
    - id: avatar
      type: Remora.Rest.Core.Optional{System.IO.Stream}
      description: The avatar of the webhook.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IWebhook}}
      description: A creation result which may or may not have succeeded.
    content.vb: Public Overridable Function CreateWebhookAsync(channelID As Snowflake, name As String, avatar As [Optional](Of Stream), reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IWebhook))
  overload: Remora.Discord.Rest.API.DiscordRestWebhookAPI.CreateWebhookAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.CreateWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestWebhookAPI.CreateWebhookAsync(Snowflake, String, Optional(Of Stream), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestWebhookAPI.CreateWebhookAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of System.IO.Stream), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: CreateWebhookAsync(Snowflake, String, Optional(Of Stream), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetChannelWebhooksAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetChannelWebhooksAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: GetChannelWebhooksAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestWebhookAPI
  langs:
  - csharp
  - vb
  name: GetChannelWebhooksAsync(Snowflake, CancellationToken)
  nameWithType: DiscordRestWebhookAPI.GetChannelWebhooksAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetChannelWebhooksAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetChannelWebhooksAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Webhooks\DiscordRestWebhookAPI.cs
    startLine: 117
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets the webhooks for a channel.
  example: []
  syntax:
    content: public virtual Task<Result<IReadOnlyList<IWebhook>>> GetChannelWebhooksAsync(Snowflake channelID, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IWebhook}}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function GetChannelWebhooksAsync(channelID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of IWebhook)))
  overload: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetChannelWebhooksAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetChannelWebhooksAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetGuildWebhooksAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetGuildWebhooksAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: GetGuildWebhooksAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestWebhookAPI
  langs:
  - csharp
  - vb
  name: GetGuildWebhooksAsync(Snowflake, CancellationToken)
  nameWithType: DiscordRestWebhookAPI.GetGuildWebhooksAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetGuildWebhooksAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetGuildWebhooksAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Webhooks\DiscordRestWebhookAPI.cs
    startLine: 132
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets the webhooks for a guild.
  example: []
  syntax:
    content: public virtual Task<Result<IReadOnlyList<IWebhook>>> GetGuildWebhooksAsync(Snowflake guildID, CancellationToken ct = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IWebhook}}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function GetGuildWebhooksAsync(guildID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of IWebhook)))
  overload: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetGuildWebhooksAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetGuildWebhooksAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: GetWebhookAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestWebhookAPI
  langs:
  - csharp
  - vb
  name: GetWebhookAsync(Snowflake, CancellationToken)
  nameWithType: DiscordRestWebhookAPI.GetWebhookAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetWebhookAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Webhooks\DiscordRestWebhookAPI.cs
    startLine: 147
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets the webhook with the given ID.
  example: []
  syntax:
    content: public virtual Task<Result<IWebhook>> GetWebhookAsync(Snowflake webhookID, CancellationToken ct = default)
    parameters:
    - id: webhookID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the webhook.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IWebhook}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function GetWebhookAsync(webhookID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IWebhook))
  overload: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  id: GetWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestWebhookAPI
  langs:
  - csharp
  - vb
  name: GetWebhookWithTokenAsync(Snowflake, string, CancellationToken)
  nameWithType: DiscordRestWebhookAPI.GetWebhookWithTokenAsync(Snowflake, string, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookWithTokenAsync(Remora.Rest.Core.Snowflake, string, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetWebhookWithTokenAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Webhooks\DiscordRestWebhookAPI.cs
    startLine: 162
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets the webhook with the given ID and token.
  example: []
  syntax:
    content: public virtual Task<Result<IWebhook>> GetWebhookWithTokenAsync(Snowflake webhookID, string token, CancellationToken ct = default)
    parameters:
    - id: webhookID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the webhook.
    - id: token
      type: System.String
      description: The token.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IWebhook}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function GetWebhookWithTokenAsync(webhookID As Snowflake, token As String, ct As CancellationToken = Nothing) As Task(Of Result(Of IWebhook))
  overload: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookWithTokenAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestWebhookAPI.GetWebhookWithTokenAsync(Snowflake, String, CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookWithTokenAsync(Remora.Rest.Core.Snowflake, String, System.Threading.CancellationToken)
  name.vb: GetWebhookWithTokenAsync(Snowflake, String, CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ModifyWebhookAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestWebhookAPI.ModifyWebhookAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: ModifyWebhookAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestWebhookAPI
  langs:
  - csharp
  - vb
  name: ModifyWebhookAsync(Snowflake, Optional<string>, Optional<Stream?>, Optional<Snowflake>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestWebhookAPI.ModifyWebhookAsync(Snowflake, Optional<string>, Optional<Stream?>, Optional<Snowflake>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ModifyWebhookAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.IO.Stream?>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ModifyWebhookAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Webhooks\DiscordRestWebhookAPI.cs
    startLine: 180
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Modifies the given webhook.
  remarks: >-
    Any streams passed to this method will be disposed of at the end of the call. If you want to reuse the streams

    afterwards, ensure that what you pass is a copy that the method can take ownership of.
  example: []
  syntax:
    content: public virtual Task<Result<IWebhook>> ModifyWebhookAsync(Snowflake webhookID, Optional<string> name = default, Optional<Stream?> avatar = default, Optional<Snowflake> channelID = default, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: webhookID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the webhook.
    - id: name
      type: Remora.Rest.Core.Optional{System.String}
      description: The new name of the webhook.
    - id: avatar
      type: Remora.Rest.Core.Optional{System.IO.Stream}
      description: The new avatar of the webhook.
    - id: channelID
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: The new channel of the webhook.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IWebhook}}
      description: A modification result which may or may not have succeeded.
    content.vb: Public Overridable Function ModifyWebhookAsync(webhookID As Snowflake, name As [Optional](Of String) = Nothing, avatar As [Optional](Of Stream) = Nothing, channelID As [Optional](Of Snowflake) = Nothing, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IWebhook))
  overload: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ModifyWebhookAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ModifyWebhookAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestWebhookAPI.ModifyWebhookAsync(Snowflake, Optional(Of String), Optional(Of Stream), Optional(Of Snowflake), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ModifyWebhookAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.IO.Stream), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyWebhookAsync(Snowflake, Optional(Of String), Optional(Of Stream), Optional(Of Snowflake), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ModifyWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestWebhookAPI.ModifyWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: ModifyWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestWebhookAPI
  langs:
  - csharp
  - vb
  name: ModifyWebhookWithTokenAsync(Snowflake, string, Optional<string>, Optional<Stream?>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestWebhookAPI.ModifyWebhookWithTokenAsync(Snowflake, string, Optional<string>, Optional<Stream?>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ModifyWebhookWithTokenAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.IO.Stream?>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ModifyWebhookWithTokenAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Webhooks\DiscordRestWebhookAPI.cs
    startLine: 217
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Modifies the given webhook.
  remarks: >-
    Any streams passed to this method will be disposed of at the end of the call. If you want to reuse the streams

    afterwards, ensure that what you pass is a copy that the method can take ownership of.
  example: []
  syntax:
    content: public virtual Task<Result<IWebhook>> ModifyWebhookWithTokenAsync(Snowflake webhookID, string token, Optional<string> name = default, Optional<Stream?> avatar = default, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: webhookID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the webhook.
    - id: token
      type: System.String
      description: The token for the webhook.
    - id: name
      type: Remora.Rest.Core.Optional{System.String}
      description: The new name of the webhook.
    - id: avatar
      type: Remora.Rest.Core.Optional{System.IO.Stream}
      description: The new avatar of the webhook.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IWebhook}}
      description: A modification result which may or may not have succeeded.
    content.vb: Public Overridable Function ModifyWebhookWithTokenAsync(webhookID As Snowflake, token As String, name As [Optional](Of String) = Nothing, avatar As [Optional](Of Stream) = Nothing, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IWebhook))
  overload: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ModifyWebhookWithTokenAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ModifyWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestWebhookAPI.ModifyWebhookWithTokenAsync(Snowflake, String, Optional(Of String), Optional(Of Stream), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ModifyWebhookWithTokenAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.IO.Stream), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyWebhookWithTokenAsync(Snowflake, String, Optional(Of String), Optional(Of Stream), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: DeleteWebhookAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestWebhookAPI
  langs:
  - csharp
  - vb
  name: DeleteWebhookAsync(Snowflake, Optional<string>, CancellationToken)
  nameWithType: DiscordRestWebhookAPI.DeleteWebhookAsync(Snowflake, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteWebhookAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Webhooks\DiscordRestWebhookAPI.cs
    startLine: 254
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Deletes the given webhook.
  example: []
  syntax:
    content: public virtual Task<Result> DeleteWebhookAsync(Snowflake webhookID, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: webhookID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the webhook.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A deletion result which may or may not have succeeded.
    content.vb: Public Overridable Function DeleteWebhookAsync(webhookID As Snowflake, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestWebhookAPI.DeleteWebhookAsync(Snowflake, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: DeleteWebhookAsync(Snowflake, Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: DeleteWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestWebhookAPI
  langs:
  - csharp
  - vb
  name: DeleteWebhookWithTokenAsync(Snowflake, string, Optional<string>, CancellationToken)
  nameWithType: DiscordRestWebhookAPI.DeleteWebhookWithTokenAsync(Snowflake, string, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookWithTokenAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteWebhookWithTokenAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Webhooks\DiscordRestWebhookAPI.cs
    startLine: 270
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Deletes the given webhook.
  example: []
  syntax:
    content: public virtual Task<Result> DeleteWebhookWithTokenAsync(Snowflake webhookID, string token, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: webhookID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the webhook.
    - id: token
      type: System.String
      description: The token for the webhook.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A deletion result which may or may not have succeeded.
    content.vb: Public Overridable Function DeleteWebhookWithTokenAsync(webhookID As Snowflake, token As String, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookWithTokenAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestWebhookAPI.DeleteWebhookWithTokenAsync(Snowflake, String, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookWithTokenAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: DeleteWebhookWithTokenAsync(Snowflake, String, Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
  id: ExecuteWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestWebhookAPI
  langs:
  - csharp
  - vb
  name: ExecuteWebhookAsync(Snowflake, string, Optional<bool>, Optional<string>, Optional<string>, Optional<string>, Optional<bool>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<Snowflake>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>, Optional<MessageFlags>, Optional<string>, Optional<IReadOnlyList<Snowflake>>, Optional<IPollCreateRequest>, CancellationToken)
  nameWithType: DiscordRestWebhookAPI.ExecuteWebhookAsync(Snowflake, string, Optional<bool>, Optional<string>, Optional<string>, Optional<string>, Optional<bool>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<Snowflake>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>, Optional<MessageFlags>, Optional<string>, Optional<IReadOnlyList<Snowflake>>, Optional<IPollCreateRequest>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmbed>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IAllowedMentions>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessageComponent>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<OneOf.OneOf<Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment>>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.MessageFlags>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IPollCreateRequest>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ExecuteWebhookAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Webhooks\DiscordRestWebhookAPI.cs
    startLine: 290
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Executes the given webhook.
  remarks: >-
    At least one of <code class="paramref">content</code>, <code class="paramref">embeds</code>, <code class="paramref">components</code> or

    <code class="paramref">attachments</code> must be present.


    Any streams passed to this method will be disposed of at the end of the call. If you want to reuse the streams

    afterwards, ensure that what you pass is a copy that the method can take ownership of.
  example: []
  syntax:
    content: public virtual Task<Result<IMessage?>> ExecuteWebhookAsync(Snowflake webhookID, string token, Optional<bool> shouldWait = default, Optional<string> content = default, Optional<string> username = default, Optional<string> avatarUrl = default, Optional<bool> isTTS = default, Optional<IReadOnlyList<IEmbed>> embeds = default, Optional<IAllowedMentions> allowedMentions = default, Optional<Snowflake> threadID = default, Optional<IReadOnlyList<IMessageComponent>> components = default, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>> attachments = default, Optional<MessageFlags> flags = default, Optional<string> threadName = default, Optional<IReadOnlyList<Snowflake>> appliedTags = default, Optional<IPollCreateRequest> poll = default, CancellationToken ct = default)
    parameters:
    - id: webhookID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the webhook.
    - id: token
      type: System.String
      description: The token for the webhook.
    - id: shouldWait
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether the call should block until the server has confirmed that the message was sent.
    - id: content
      type: Remora.Rest.Core.Optional{System.String}
      description: The content of the message.
    - id: username
      type: Remora.Rest.Core.Optional{System.String}
      description: >-
        The username to use for this message. Note that Discord places some restrictions on valid usernames in order to

        prevent spam and abuse - check the Discord documentation for up-to-date information on allowed usernames.
    - id: avatarUrl
      type: Remora.Rest.Core.Optional{System.String}
      description: The avatar to use for this message.
    - id: isTTS
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether this message is a TTS message.
    - id: embeds
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}}
      description: The embeds in the message.
    - id: allowedMentions
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions}
      description: The set of allowed mentions of the message.
    - id: threadID
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: Send a message to the specified thread within a webhook's channel.
    - id: components
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}}
      description: >-
        The components that should be included with the message. The webhook must be application-owned to use this

        parameter.
    - id: attachments
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}}
      description: >-
        The attachments to associate with the response. Each file may be a new file in the form of

        <xref href="Remora.Discord.API.Abstractions.Rest.FileData" data-throw-if-not-resolved="false"></xref>, or an existing one that should be retained in the form of a

        <xref href="Remora.Discord.API.Abstractions.Objects.IPartialAttachment" data-throw-if-not-resolved="false"></xref>. If this request edits the original message, then any attachments not

        mentioned in this parameter will be deleted.
    - id: flags
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags}
      description: The message flags.
    - id: threadName
      type: Remora.Rest.Core.Optional{System.String}
      description: The name of the forum thread to create.
    - id: appliedTags
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
      description: The tags to apply to the thread (requires the webhook channel to be a forum or media channel).
    - id: poll
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest}
      description: The poll of the message.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
      description: >-
        A result which may or may not have succeeded. The returned message is null if <code class="paramref">shouldWait</code>

        is false.
    content.vb: Public Overridable Function ExecuteWebhookAsync(webhookID As Snowflake, token As String, shouldWait As [Optional](Of Boolean) = Nothing, content As [Optional](Of String) = Nothing, username As [Optional](Of String) = Nothing, avatarUrl As [Optional](Of String) = Nothing, isTTS As [Optional](Of Boolean) = Nothing, embeds As [Optional](Of IReadOnlyList(Of IEmbed)) = Nothing, allowedMentions As [Optional](Of IAllowedMentions) = Nothing, threadID As [Optional](Of Snowflake) = Nothing, components As [Optional](Of IReadOnlyList(Of IMessageComponent)) = Nothing, attachments As [Optional](Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))) = Nothing, flags As [Optional](Of MessageFlags) = Nothing, threadName As [Optional](Of String) = Nothing, appliedTags As [Optional](Of IReadOnlyList(Of Snowflake)) = Nothing, poll As [Optional](Of IPollCreateRequest) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IMessage))
  overload: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ExecuteWebhookAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestWebhookAPI.ExecuteWebhookAsync(Snowflake, String, Optional(Of Boolean), Optional(Of String), Optional(Of String), Optional(Of String), Optional(Of Boolean), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of Snowflake), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), Optional(Of MessageFlags), Optional(Of String), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of IPollCreateRequest), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmbed)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IAllowedMentions), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessageComponent)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of OneOf.OneOf(Of Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment))), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.MessageFlags), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IPollCreateRequest), System.Threading.CancellationToken)
  name.vb: ExecuteWebhookAsync(Snowflake, String, Optional(Of Boolean), Optional(Of String), Optional(Of String), Optional(Of String), Optional(Of Boolean), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of Snowflake), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), Optional(Of MessageFlags), Optional(Of String), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of IPollCreateRequest), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  id: GetWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestWebhookAPI
  langs:
  - csharp
  - vb
  name: GetWebhookMessageAsync(Snowflake, string, Snowflake, Optional<Snowflake>, CancellationToken)
  nameWithType: DiscordRestWebhookAPI.GetWebhookMessageAsync(Snowflake, string, Snowflake, Optional<Snowflake>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookMessageAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetWebhookMessageAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Webhooks\DiscordRestWebhookAPI.cs
    startLine: 379
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets a previously-sent webhook message.
  example: []
  syntax:
    content: public virtual Task<Result<IMessage>> GetWebhookMessageAsync(Snowflake webhookID, string webhookToken, Snowflake messageID, Optional<Snowflake> threadID = default, CancellationToken ct = default)
    parameters:
    - id: webhookID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the webhook.
    - id: webhookToken
      type: System.String
      description: The webhook token.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: threadID
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: The ID of the thread the message is in.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
      description: A result which may or may not have succeeded.
    content.vb: Public Overridable Function GetWebhookMessageAsync(webhookID As Snowflake, webhookToken As String, messageID As Snowflake, threadID As [Optional](Of Snowflake) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IMessage))
  overload: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookMessageAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestWebhookAPI.GetWebhookMessageAsync(Snowflake, String, Snowflake, Optional(Of Snowflake), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookMessageAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), System.Threading.CancellationToken)
  name.vb: GetWebhookMessageAsync(Snowflake, String, Snowflake, Optional(Of Snowflake), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.EditWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestWebhookAPI.EditWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  id: EditWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestWebhookAPI
  langs:
  - csharp
  - vb
  name: EditWebhookMessageAsync(Snowflake, string, Snowflake, Optional<string?>, Optional<IReadOnlyList<IEmbed>?>, Optional<IAllowedMentions?>, Optional<IReadOnlyList<IMessageComponent>?>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>?>, Optional<Snowflake>, CancellationToken)
  nameWithType: DiscordRestWebhookAPI.EditWebhookMessageAsync(Snowflake, string, Snowflake, Optional<string?>, Optional<IReadOnlyList<IEmbed>?>, Optional<IAllowedMentions?>, Optional<IReadOnlyList<IMessageComponent>?>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>?>, Optional<Snowflake>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.EditWebhookMessageAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmbed>?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IAllowedMentions?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessageComponent>?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<OneOf.OneOf<Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment>>?>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, System.Threading.CancellationToken)
  type: Method
  source:
    id: EditWebhookMessageAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Webhooks\DiscordRestWebhookAPI.cs
    startLine: 405
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Edits a message posted by a webhook.
  remarks: >-
    At least one of <code class="paramref">content</code>, <code class="paramref">embeds</code>, <code class="paramref">components</code> or

    <code class="paramref">attachments</code> must be present.


    Any streams passed to this method will be disposed of at the end of the call. If you want to reuse the streams

    afterwards, ensure that what you pass is a copy that the method can take ownership of.
  example: []
  syntax:
    content: public virtual Task<Result<IMessage>> EditWebhookMessageAsync(Snowflake webhookID, string token, Snowflake messageID, Optional<string?> content = default, Optional<IReadOnlyList<IEmbed>?> embeds = default, Optional<IAllowedMentions?> allowedMentions = default, Optional<IReadOnlyList<IMessageComponent>?> components = default, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>?> attachments = default, Optional<Snowflake> threadID = default, CancellationToken ct = default)
    parameters:
    - id: webhookID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the webhook.
    - id: token
      type: System.String
      description: The token for the webhook.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: content
      type: Remora.Rest.Core.Optional{System.String}
      description: The new content, if any.
    - id: embeds
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}}
      description: The new embeds, if any.
    - id: allowedMentions
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions}
      description: The new allowed mentions, if any.
    - id: components
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}}
      description: >-
        The components that should be included with the message. The webhook must be application-owned to use this

        parameter.
    - id: attachments
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}}
      description: >-
        The attachments to associate with the response. Each file may be a new file in the form of

        <xref href="Remora.Discord.API.Abstractions.Rest.FileData" data-throw-if-not-resolved="false"></xref>, or an existing one that should be retained in the form of a

        <xref href="Remora.Discord.API.Abstractions.Objects.IPartialAttachment" data-throw-if-not-resolved="false"></xref>. If this request edits the original message, then any attachments not

        mentioned in this parameter will be deleted.
    - id: threadID
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: The ID of the thread the message is in.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
      description: A result which may or may not have succeeded.
    content.vb: Public Overridable Function EditWebhookMessageAsync(webhookID As Snowflake, token As String, messageID As Snowflake, content As [Optional](Of String) = Nothing, embeds As [Optional](Of IReadOnlyList(Of IEmbed)) = Nothing, allowedMentions As [Optional](Of IAllowedMentions) = Nothing, components As [Optional](Of IReadOnlyList(Of IMessageComponent)) = Nothing, attachments As [Optional](Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))) = Nothing, threadID As [Optional](Of Snowflake) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IMessage))
  overload: Remora.Discord.Rest.API.DiscordRestWebhookAPI.EditWebhookMessageAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.EditWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestWebhookAPI.EditWebhookMessageAsync(Snowflake, String, Snowflake, Optional(Of String), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), Optional(Of Snowflake), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestWebhookAPI.EditWebhookMessageAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmbed)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IAllowedMentions), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessageComponent)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of OneOf.OneOf(Of Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment))), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), System.Threading.CancellationToken)
  name.vb: EditWebhookMessageAsync(Snowflake, String, Snowflake, Optional(Of String), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), Optional(Of Snowflake), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  id: DeleteWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestWebhookAPI
  langs:
  - csharp
  - vb
  name: DeleteWebhookMessageAsync(Snowflake, string, Snowflake, Optional<Snowflake>, CancellationToken)
  nameWithType: DiscordRestWebhookAPI.DeleteWebhookMessageAsync(Snowflake, string, Snowflake, Optional<Snowflake>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookMessageAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteWebhookMessageAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Webhooks\DiscordRestWebhookAPI.cs
    startLine: 489
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Deletes a message posted by a webhook.
  example: []
  syntax:
    content: public virtual Task<Result> DeleteWebhookMessageAsync(Snowflake webhookID, string token, Snowflake messageID, Optional<Snowflake> threadID = default, CancellationToken ct = default)
    parameters:
    - id: webhookID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the webhook.
    - id: token
      type: System.String
      description: The token for the webhook.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: threadID
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: The ID of the thread the message is in.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A result which may or may not have succeeded.
    content.vb: Public Overridable Function DeleteWebhookMessageAsync(webhookID As Snowflake, token As String, messageID As Snowflake, threadID As [Optional](Of Snowflake) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookMessageAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestWebhookAPI.DeleteWebhookMessageAsync(Snowflake, String, Snowflake, Optional(Of Snowflake), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookMessageAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), System.Threading.CancellationToken)
  name.vb: DeleteWebhookMessageAsync(Snowflake, String, Snowflake, Optional(Of Snowflake), CancellationToken)
references:
- uid: Remora.Discord.Rest.API
  commentId: N:Remora.Discord.Rest.API
  href: Remora.html
  name: Remora.Discord.Rest.API
  nameWithType: Remora.Discord.Rest.API
  fullName: Remora.Discord.Rest.API
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.API
    name: API
    href: Remora.Discord.Rest.API.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.API
    name: API
    href: Remora.Discord.Rest.API.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  commentId: T:Remora.Discord.Rest.API.AbstractDiscordRestAPI
  parent: Remora.Discord.Rest.API
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html
  name: AbstractDiscordRestAPI
  nameWithType: AbstractDiscordRestAPI
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI
- uid: Remora.Rest.IRestCustomizable
  commentId: T:Remora.Rest.IRestCustomizable
  parent: Remora.Rest
  isExternal: true
  name: IRestCustomizable
  nameWithType: IRestCustomizable
  fullName: Remora.Rest.IRestCustomizable
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
  commentId: T:Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
  parent: Remora.Discord.API.Abstractions.Rest
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html
  name: IDiscordRestWebhookAPI
  nameWithType: IDiscordRestWebhookAPI
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
  commentId: P:Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_RestHttpClient
  name: RestHttpClient
  nameWithType: AbstractDiscordRestAPI.RestHttpClient
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
  commentId: P:Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_JsonOptions
  name: JsonOptions
  nameWithType: AbstractDiscordRestAPI.JsonOptions
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
  commentId: P:Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_RateLimitCache
  name: RateLimitCache
  nameWithType: AbstractDiscordRestAPI.RateLimitCache
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
  commentId: M:Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  isExternal: true
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_WithCustomization_System_Action_Remora_Rest_RestRequestBuilder__
  name: WithCustomization(Action<RestRequestBuilder>)
  nameWithType: AbstractDiscordRestAPI.WithCustomization(Action<RestRequestBuilder>)
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action<Remora.Rest.RestRequestBuilder>)
  nameWithType.vb: AbstractDiscordRestAPI.WithCustomization(Action(Of RestRequestBuilder))
  fullName.vb: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action(Of Remora.Rest.RestRequestBuilder))
  name.vb: WithCustomization(Action(Of RestRequestBuilder))
  spec.csharp:
  - uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
    name: WithCustomization
    href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_WithCustomization_System_Action_Remora_Rest_RestRequestBuilder__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Remora.Rest.RestRequestBuilder
    name: RestRequestBuilder
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
    name: WithCustomization
    href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_WithCustomization_System_Action_Remora_Rest_RestRequestBuilder__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.RestRequestBuilder
    name: RestRequestBuilder
    isExternal: true
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Rest
  commentId: N:Remora.Rest
  isExternal: true
  name: Remora.Rest
  nameWithType: Remora.Rest
  fullName: Remora.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
- uid: Remora.Discord.API.Abstractions.Rest
  commentId: N:Remora.Discord.API.Abstractions.Rest
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Rest
  nameWithType: Remora.Discord.API.Abstractions.Rest
  fullName: Remora.Discord.API.Abstractions.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI
  commentId: T:Remora.Discord.Rest.API.DiscordRestWebhookAPI
  href: Remora.Discord.Rest.API.DiscordRestWebhookAPI.html
  name: DiscordRestWebhookAPI
  nameWithType: DiscordRestWebhookAPI
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.#ctor*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestWebhookAPI.#ctor
  href: Remora.Discord.Rest.API.DiscordRestWebhookAPI.html#Remora_Discord_Rest_API_DiscordRestWebhookAPI__ctor_Remora_Rest_IRestHttpClient_System_Text_Json_JsonSerializerOptions_Remora_Discord_Caching_Abstractions_Services_ICacheProvider_
  name: DiscordRestWebhookAPI
  nameWithType: DiscordRestWebhookAPI.DiscordRestWebhookAPI
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DiscordRestWebhookAPI
  nameWithType.vb: DiscordRestWebhookAPI.New
  fullName.vb: Remora.Discord.Rest.API.DiscordRestWebhookAPI.New
  name.vb: New
- uid: Remora.Rest.IRestHttpClient
  commentId: T:Remora.Rest.IRestHttpClient
  parent: Remora.Rest
  isExternal: true
  name: IRestHttpClient
  nameWithType: IRestHttpClient
  fullName: Remora.Rest.IRestHttpClient
- uid: System.Text.Json.JsonSerializerOptions
  commentId: T:System.Text.Json.JsonSerializerOptions
  parent: System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions
  name: JsonSerializerOptions
  nameWithType: JsonSerializerOptions
  fullName: System.Text.Json.JsonSerializerOptions
- uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  commentId: T:Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  parent: Remora.Discord.Caching.Abstractions.Services
  href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html
  name: ICacheProvider
  nameWithType: ICacheProvider
  fullName: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
- uid: System.Text.Json
  commentId: N:System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.Json
  nameWithType: System.Text.Json
  fullName: System.Text.Json
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
- uid: Remora.Discord.Caching.Abstractions.Services
  commentId: N:Remora.Discord.Caching.Abstractions.Services
  href: Remora.html
  name: Remora.Discord.Caching.Abstractions.Services
  nameWithType: Remora.Discord.Caching.Abstractions.Services
  fullName: Remora.Discord.Caching.Abstractions.Services
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions
    name: Abstractions
    href: Remora.Discord.Caching.Abstractions.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions.Services
    name: Services
    href: Remora.Discord.Caching.Abstractions.Services.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions
    name: Abstractions
    href: Remora.Discord.Caching.Abstractions.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions.Services
    name: Services
    href: Remora.Discord.Caching.Abstractions.Services.html
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.CreateWebhookAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestWebhookAPI.CreateWebhookAsync
  href: Remora.Discord.Rest.API.DiscordRestWebhookAPI.html#Remora_Discord_Rest_API_DiscordRestWebhookAPI_CreateWebhookAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_IO_Stream__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: CreateWebhookAsync
  nameWithType: DiscordRestWebhookAPI.CreateWebhookAsync
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.CreateWebhookAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.CreateWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.CreateWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_CreateWebhookAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_IO_Stream__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: CreateWebhookAsync(Snowflake, string, Optional<Stream>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestWebhookAPI.CreateWebhookAsync(Snowflake, string, Optional<Stream>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.CreateWebhookAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<System.IO.Stream>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestWebhookAPI.CreateWebhookAsync(Snowflake, String, Optional(Of Stream), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.CreateWebhookAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of System.IO.Stream), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: CreateWebhookAsync(Snowflake, String, Optional(Of Stream), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.CreateWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: CreateWebhookAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_CreateWebhookAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_IO_Stream__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.CreateWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: CreateWebhookAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_CreateWebhookAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_IO_Stream__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Snowflake
  commentId: T:Remora.Rest.Core.Snowflake
  parent: Remora.Rest.Core
  isExternal: true
  name: Snowflake
  nameWithType: Snowflake
  fullName: Remora.Rest.Core.Snowflake
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Remora.Rest.Core.Optional{System.IO.Stream}
  commentId: T:Remora.Rest.Core.Optional{System.IO.Stream}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Optional<Stream>
  nameWithType: Optional<Stream>
  fullName: Remora.Rest.Core.Optional<System.IO.Stream>
  nameWithType.vb: Optional(Of Stream)
  fullName.vb: Remora.Rest.Core.Optional(Of System.IO.Stream)
  name.vb: Optional(Of Stream)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
- uid: Remora.Rest.Core.Optional{System.String}
  commentId: T:Remora.Rest.Core.Optional{System.String}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Optional<string>
  nameWithType: Optional<string>
  fullName: Remora.Rest.Core.Optional<string>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Remora.Rest.Core.Optional(Of String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IWebhook}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IWebhook}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IWebhook>>
  nameWithType: Task<Result<IWebhook>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IWebhook>>
  nameWithType.vb: Task(Of Result(Of IWebhook))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IWebhook))
  name.vb: Task(Of Result(Of IWebhook))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IWebhook
    name: IWebhook
    href: Remora.Discord.API.Abstractions.Objects.IWebhook.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IWebhook
    name: IWebhook
    href: Remora.Discord.API.Abstractions.Objects.IWebhook.html
  - name: )
  - name: )
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetChannelWebhooksAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetChannelWebhooksAsync
  href: Remora.Discord.Rest.API.DiscordRestWebhookAPI.html#Remora_Discord_Rest_API_DiscordRestWebhookAPI_GetChannelWebhooksAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetChannelWebhooksAsync
  nameWithType: DiscordRestWebhookAPI.GetChannelWebhooksAsync
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetChannelWebhooksAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetChannelWebhooksAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetChannelWebhooksAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_GetChannelWebhooksAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetChannelWebhooksAsync(Snowflake, CancellationToken)
  nameWithType: IDiscordRestWebhookAPI.GetChannelWebhooksAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetChannelWebhooksAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetChannelWebhooksAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetChannelWebhooksAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_GetChannelWebhooksAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetChannelWebhooksAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetChannelWebhooksAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_GetChannelWebhooksAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IWebhook}}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IWebhook}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IReadOnlyList<IWebhook>>>
  nameWithType: Task<Result<IReadOnlyList<IWebhook>>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IWebhook>>>
  nameWithType.vb: Task(Of Result(Of IReadOnlyList(Of IWebhook)))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IWebhook)))
  name.vb: Task(Of Result(Of IReadOnlyList(Of IWebhook)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IWebhook
    name: IWebhook
    href: Remora.Discord.API.Abstractions.Objects.IWebhook.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IWebhook
    name: IWebhook
    href: Remora.Discord.API.Abstractions.Objects.IWebhook.html
  - name: )
  - name: )
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetGuildWebhooksAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetGuildWebhooksAsync
  href: Remora.Discord.Rest.API.DiscordRestWebhookAPI.html#Remora_Discord_Rest_API_DiscordRestWebhookAPI_GetGuildWebhooksAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetGuildWebhooksAsync
  nameWithType: DiscordRestWebhookAPI.GetGuildWebhooksAsync
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetGuildWebhooksAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetGuildWebhooksAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetGuildWebhooksAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_GetGuildWebhooksAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetGuildWebhooksAsync(Snowflake, CancellationToken)
  nameWithType: IDiscordRestWebhookAPI.GetGuildWebhooksAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetGuildWebhooksAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetGuildWebhooksAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetGuildWebhooksAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_GetGuildWebhooksAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetGuildWebhooksAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetGuildWebhooksAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_GetGuildWebhooksAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookAsync
  href: Remora.Discord.Rest.API.DiscordRestWebhookAPI.html#Remora_Discord_Rest_API_DiscordRestWebhookAPI_GetWebhookAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetWebhookAsync
  nameWithType: DiscordRestWebhookAPI.GetWebhookAsync
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_GetWebhookAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetWebhookAsync(Snowflake, CancellationToken)
  nameWithType: IDiscordRestWebhookAPI.GetWebhookAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetWebhookAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_GetWebhookAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetWebhookAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_GetWebhookAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookWithTokenAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookWithTokenAsync
  href: Remora.Discord.Rest.API.DiscordRestWebhookAPI.html#Remora_Discord_Rest_API_DiscordRestWebhookAPI_GetWebhookWithTokenAsync_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  name: GetWebhookWithTokenAsync
  nameWithType: DiscordRestWebhookAPI.GetWebhookWithTokenAsync
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookWithTokenAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_GetWebhookWithTokenAsync_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  name: GetWebhookWithTokenAsync(Snowflake, string, CancellationToken)
  nameWithType: IDiscordRestWebhookAPI.GetWebhookWithTokenAsync(Snowflake, string, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookWithTokenAsync(Remora.Rest.Core.Snowflake, string, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestWebhookAPI.GetWebhookWithTokenAsync(Snowflake, String, CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookWithTokenAsync(Remora.Rest.Core.Snowflake, String, System.Threading.CancellationToken)
  name.vb: GetWebhookWithTokenAsync(Snowflake, String, CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
    name: GetWebhookWithTokenAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_GetWebhookWithTokenAsync_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
    name: GetWebhookWithTokenAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_GetWebhookWithTokenAsync_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ModifyWebhookAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestWebhookAPI.ModifyWebhookAsync
  href: Remora.Discord.Rest.API.DiscordRestWebhookAPI.html#Remora_Discord_Rest_API_DiscordRestWebhookAPI_ModifyWebhookAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_IO_Stream__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyWebhookAsync
  nameWithType: DiscordRestWebhookAPI.ModifyWebhookAsync
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ModifyWebhookAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ModifyWebhookAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ModifyWebhookAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_ModifyWebhookAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_IO_Stream__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyWebhookAsync(Snowflake, Optional<string>, Optional<Stream>, Optional<Snowflake>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestWebhookAPI.ModifyWebhookAsync(Snowflake, Optional<string>, Optional<Stream>, Optional<Snowflake>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ModifyWebhookAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.IO.Stream>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestWebhookAPI.ModifyWebhookAsync(Snowflake, Optional(Of String), Optional(Of Stream), Optional(Of Snowflake), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ModifyWebhookAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.IO.Stream), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyWebhookAsync(Snowflake, Optional(Of String), Optional(Of Stream), Optional(Of Snowflake), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ModifyWebhookAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyWebhookAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_ModifyWebhookAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_IO_Stream__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ModifyWebhookAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyWebhookAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_ModifyWebhookAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_IO_Stream__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  commentId: T:Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  name: Optional<Snowflake>
  nameWithType: Optional<Snowflake>
  fullName: Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>
  nameWithType.vb: Optional(Of Snowflake)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake)
  name.vb: Optional(Of Snowflake)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ModifyWebhookWithTokenAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestWebhookAPI.ModifyWebhookWithTokenAsync
  href: Remora.Discord.Rest.API.DiscordRestWebhookAPI.html#Remora_Discord_Rest_API_DiscordRestWebhookAPI_ModifyWebhookWithTokenAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_IO_Stream__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyWebhookWithTokenAsync
  nameWithType: DiscordRestWebhookAPI.ModifyWebhookWithTokenAsync
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ModifyWebhookWithTokenAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ModifyWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ModifyWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_ModifyWebhookWithTokenAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_IO_Stream__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyWebhookWithTokenAsync(Snowflake, string, Optional<string>, Optional<Stream>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestWebhookAPI.ModifyWebhookWithTokenAsync(Snowflake, string, Optional<string>, Optional<Stream>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ModifyWebhookWithTokenAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.IO.Stream>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestWebhookAPI.ModifyWebhookWithTokenAsync(Snowflake, String, Optional(Of String), Optional(Of Stream), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ModifyWebhookWithTokenAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.IO.Stream), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyWebhookWithTokenAsync(Snowflake, String, Optional(Of String), Optional(Of Stream), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ModifyWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyWebhookWithTokenAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_ModifyWebhookWithTokenAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_IO_Stream__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ModifyWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyWebhookWithTokenAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_ModifyWebhookWithTokenAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_IO_Stream__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookAsync
  href: Remora.Discord.Rest.API.DiscordRestWebhookAPI.html#Remora_Discord_Rest_API_DiscordRestWebhookAPI_DeleteWebhookAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: DeleteWebhookAsync
  nameWithType: DiscordRestWebhookAPI.DeleteWebhookAsync
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_DeleteWebhookAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: DeleteWebhookAsync(Snowflake, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestWebhookAPI.DeleteWebhookAsync(Snowflake, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestWebhookAPI.DeleteWebhookAsync(Snowflake, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: DeleteWebhookAsync(Snowflake, Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: DeleteWebhookAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_DeleteWebhookAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: DeleteWebhookAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_DeleteWebhookAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result>
  nameWithType: Task<Result>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result>
  nameWithType.vb: Task(Of Result)
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result)
  name.vb: Task(Of Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookWithTokenAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookWithTokenAsync
  href: Remora.Discord.Rest.API.DiscordRestWebhookAPI.html#Remora_Discord_Rest_API_DiscordRestWebhookAPI_DeleteWebhookWithTokenAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: DeleteWebhookWithTokenAsync
  nameWithType: DiscordRestWebhookAPI.DeleteWebhookWithTokenAsync
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookWithTokenAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_DeleteWebhookWithTokenAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: DeleteWebhookWithTokenAsync(Snowflake, string, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestWebhookAPI.DeleteWebhookWithTokenAsync(Snowflake, string, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookWithTokenAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestWebhookAPI.DeleteWebhookWithTokenAsync(Snowflake, String, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookWithTokenAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: DeleteWebhookWithTokenAsync(Snowflake, String, Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: DeleteWebhookWithTokenAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_DeleteWebhookWithTokenAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookWithTokenAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: DeleteWebhookWithTokenAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_DeleteWebhookWithTokenAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Rest.FileData
  commentId: T:Remora.Discord.API.Abstractions.Rest.FileData
  parent: Remora.Discord.API.Abstractions.Rest
  href: Remora.Discord.API.Abstractions.Rest.FileData.html
  name: FileData
  nameWithType: FileData
  fullName: Remora.Discord.API.Abstractions.Rest.FileData
- uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
  commentId: T:Remora.Discord.API.Abstractions.Objects.IPartialAttachment
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IPartialAttachment.html
  name: IPartialAttachment
  nameWithType: IPartialAttachment
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ExecuteWebhookAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestWebhookAPI.ExecuteWebhookAsync
  href: Remora.Discord.Rest.API.DiscordRestWebhookAPI.html#Remora_Discord_Rest_API_DiscordRestWebhookAPI_ExecuteWebhookAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_MessageFlags__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IPollCreateRequest__System_Threading_CancellationToken_
  name: ExecuteWebhookAsync
  nameWithType: DiscordRestWebhookAPI.ExecuteWebhookAsync
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.ExecuteWebhookAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_ExecuteWebhookAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_MessageFlags__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IPollCreateRequest__System_Threading_CancellationToken_
  name: ExecuteWebhookAsync(Snowflake, string, Optional<bool>, Optional<string>, Optional<string>, Optional<string>, Optional<bool>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<Snowflake>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>, Optional<MessageFlags>, Optional<string>, Optional<IReadOnlyList<Snowflake>>, Optional<IPollCreateRequest>, CancellationToken)
  nameWithType: IDiscordRestWebhookAPI.ExecuteWebhookAsync(Snowflake, string, Optional<bool>, Optional<string>, Optional<string>, Optional<string>, Optional<bool>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<Snowflake>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>, Optional<MessageFlags>, Optional<string>, Optional<IReadOnlyList<Snowflake>>, Optional<IPollCreateRequest>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmbed>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IAllowedMentions>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessageComponent>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<OneOf.OneOf<Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment>>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.MessageFlags>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IPollCreateRequest>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestWebhookAPI.ExecuteWebhookAsync(Snowflake, String, Optional(Of Boolean), Optional(Of String), Optional(Of String), Optional(Of String), Optional(Of Boolean), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of Snowflake), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), Optional(Of MessageFlags), Optional(Of String), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of IPollCreateRequest), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmbed)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IAllowedMentions), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessageComponent)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of OneOf.OneOf(Of Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment))), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.MessageFlags), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IPollCreateRequest), System.Threading.CancellationToken)
  name.vb: ExecuteWebhookAsync(Snowflake, String, Optional(Of Boolean), Optional(Of String), Optional(Of String), Optional(Of String), Optional(Of Boolean), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of Snowflake), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), Optional(Of MessageFlags), Optional(Of String), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of IPollCreateRequest), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
    name: ExecuteWebhookAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_ExecuteWebhookAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_MessageFlags__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IPollCreateRequest__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
    href: Remora.Discord.API.Abstractions.Objects.IEmbed.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
    href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
    href: Remora.Discord.API.Abstractions.Objects.IMessageComponent.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
    name: IPartialAttachment
    href: Remora.Discord.API.Abstractions.Objects.IPartialAttachment.html
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
    href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest
    name: IPollCreateRequest
    href: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.ExecuteWebhookAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
    name: ExecuteWebhookAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_ExecuteWebhookAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_MessageFlags__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IPollCreateRequest__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
    href: Remora.Discord.API.Abstractions.Objects.IEmbed.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
    href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
    href: Remora.Discord.API.Abstractions.Objects.IMessageComponent.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
    name: IPartialAttachment
    href: Remora.Discord.API.Abstractions.Objects.IPartialAttachment.html
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
    href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest
    name: IPollCreateRequest
    href: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Optional{System.Boolean}
  commentId: T:Remora.Rest.Core.Optional{System.Boolean}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Optional<bool>
  nameWithType: Optional<bool>
  fullName: Remora.Rest.Core.Optional<bool>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: Remora.Rest.Core.Optional(Of Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<IEmbed>>
  nameWithType: Optional<IReadOnlyList<IEmbed>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmbed>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of IEmbed))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmbed))
  name.vb: Optional(Of IReadOnlyList(Of IEmbed))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
    href: Remora.Discord.API.Abstractions.Objects.IEmbed.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
    href: Remora.Discord.API.Abstractions.Objects.IEmbed.html
  - name: )
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  name: Optional<IAllowedMentions>
  nameWithType: Optional<IAllowedMentions>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IAllowedMentions>
  nameWithType.vb: Optional(Of IAllowedMentions)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IAllowedMentions)
  name.vb: Optional(Of IAllowedMentions)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
    href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
    href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<IMessageComponent>>
  nameWithType: Optional<IReadOnlyList<IMessageComponent>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessageComponent>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of IMessageComponent))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessageComponent))
  name.vb: Optional(Of IReadOnlyList(Of IMessageComponent))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
    href: Remora.Discord.API.Abstractions.Objects.IMessageComponent.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
    href: Remora.Discord.API.Abstractions.Objects.IMessageComponent.html
  - name: )
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>
  nameWithType: Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<OneOf.OneOf<Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment>>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment)))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of OneOf.OneOf(Of Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment)))
  name.vb: Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment)))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
    name: IPartialAttachment
    href: Remora.Discord.API.Abstractions.Objects.IPartialAttachment.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
    name: IPartialAttachment
    href: Remora.Discord.API.Abstractions.Objects.IPartialAttachment.html
  - name: )
  - name: )
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  name: Optional<MessageFlags>
  nameWithType: Optional<MessageFlags>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.MessageFlags>
  nameWithType.vb: Optional(Of MessageFlags)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.MessageFlags)
  name.vb: Optional(Of MessageFlags)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
    href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
    href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<Snowflake>>
  nameWithType: Optional<IReadOnlyList<Snowflake>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of Snowflake))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake))
  name.vb: Optional(Of IReadOnlyList(Of Snowflake))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest.html
  name: Optional<IPollCreateRequest>
  nameWithType: Optional<IPollCreateRequest>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IPollCreateRequest>
  nameWithType.vb: Optional(Of IPollCreateRequest)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IPollCreateRequest)
  name.vb: Optional(Of IPollCreateRequest)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest
    name: IPollCreateRequest
    href: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest
    name: IPollCreateRequest
    href: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest.html
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IMessage>>
  nameWithType: Task<Result<IMessage>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IMessage>>
  nameWithType.vb: Task(Of Result(Of IMessage))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IMessage))
  name.vb: Task(Of Result(Of IMessage))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IMessage
    name: IMessage
    href: Remora.Discord.API.Abstractions.Objects.IMessage.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IMessage
    name: IMessage
    href: Remora.Discord.API.Abstractions.Objects.IMessage.html
  - name: )
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects
  commentId: N:Remora.Discord.API.Abstractions.Objects
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Objects
  nameWithType: Remora.Discord.API.Abstractions.Objects
  fullName: Remora.Discord.API.Abstractions.Objects
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookMessageAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookMessageAsync
  href: Remora.Discord.Rest.API.DiscordRestWebhookAPI.html#Remora_Discord_Rest_API_DiscordRestWebhookAPI_GetWebhookMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  name: GetWebhookMessageAsync
  nameWithType: DiscordRestWebhookAPI.GetWebhookMessageAsync
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.GetWebhookMessageAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_GetWebhookMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  name: GetWebhookMessageAsync(Snowflake, string, Snowflake, Optional<Snowflake>, CancellationToken)
  nameWithType: IDiscordRestWebhookAPI.GetWebhookMessageAsync(Snowflake, string, Snowflake, Optional<Snowflake>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookMessageAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestWebhookAPI.GetWebhookMessageAsync(Snowflake, String, Snowflake, Optional(Of Snowflake), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookMessageAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), System.Threading.CancellationToken)
  name.vb: GetWebhookMessageAsync(Snowflake, String, Snowflake, Optional(Of Snowflake), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
    name: GetWebhookMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_GetWebhookMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.GetWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
    name: GetWebhookMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_GetWebhookMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.EditWebhookMessageAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestWebhookAPI.EditWebhookMessageAsync
  href: Remora.Discord.Rest.API.DiscordRestWebhookAPI.html#Remora_Discord_Rest_API_DiscordRestWebhookAPI_EditWebhookMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  name: EditWebhookMessageAsync
  nameWithType: DiscordRestWebhookAPI.EditWebhookMessageAsync
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.EditWebhookMessageAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.EditWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.EditWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_EditWebhookMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  name: EditWebhookMessageAsync(Snowflake, string, Snowflake, Optional<string>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>, Optional<Snowflake>, CancellationToken)
  nameWithType: IDiscordRestWebhookAPI.EditWebhookMessageAsync(Snowflake, string, Snowflake, Optional<string>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>, Optional<Snowflake>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.EditWebhookMessageAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmbed>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IAllowedMentions>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessageComponent>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<OneOf.OneOf<Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment>>>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestWebhookAPI.EditWebhookMessageAsync(Snowflake, String, Snowflake, Optional(Of String), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), Optional(Of Snowflake), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.EditWebhookMessageAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmbed)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IAllowedMentions), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessageComponent)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of OneOf.OneOf(Of Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment))), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), System.Threading.CancellationToken)
  name.vb: EditWebhookMessageAsync(Snowflake, String, Snowflake, Optional(Of String), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), Optional(Of Snowflake), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.EditWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
    name: EditWebhookMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_EditWebhookMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
    href: Remora.Discord.API.Abstractions.Objects.IEmbed.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
    href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
    href: Remora.Discord.API.Abstractions.Objects.IMessageComponent.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
    name: IPartialAttachment
    href: Remora.Discord.API.Abstractions.Objects.IPartialAttachment.html
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.EditWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
    name: EditWebhookMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_EditWebhookMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
    href: Remora.Discord.API.Abstractions.Objects.IEmbed.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
    href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
    href: Remora.Discord.API.Abstractions.Objects.IMessageComponent.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
    name: IPartialAttachment
    href: Remora.Discord.API.Abstractions.Objects.IPartialAttachment.html
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookMessageAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookMessageAsync
  href: Remora.Discord.Rest.API.DiscordRestWebhookAPI.html#Remora_Discord_Rest_API_DiscordRestWebhookAPI_DeleteWebhookMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  name: DeleteWebhookMessageAsync
  nameWithType: DiscordRestWebhookAPI.DeleteWebhookMessageAsync
  fullName: Remora.Discord.Rest.API.DiscordRestWebhookAPI.DeleteWebhookMessageAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_DeleteWebhookMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  name: DeleteWebhookMessageAsync(Snowflake, string, Snowflake, Optional<Snowflake>, CancellationToken)
  nameWithType: IDiscordRestWebhookAPI.DeleteWebhookMessageAsync(Snowflake, string, Snowflake, Optional<Snowflake>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookMessageAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestWebhookAPI.DeleteWebhookMessageAsync(Snowflake, String, Snowflake, Optional(Of Snowflake), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookMessageAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), System.Threading.CancellationToken)
  name.vb: DeleteWebhookMessageAsync(Snowflake, String, Snowflake, Optional(Of Snowflake), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
    name: DeleteWebhookMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_DeleteWebhookMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.DeleteWebhookMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
    name: DeleteWebhookMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestWebhookAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestWebhookAPI_DeleteWebhookMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
