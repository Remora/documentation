### YamlMime:ManagedReference
items:
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI
  commentId: T:Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI
  id: IDiscordRestPollAPI
  parent: Remora.Discord.API.Abstractions.Rest
  children:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.EndPollAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.GetAnswerVotersAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Int32,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IDiscordRestPollAPI
  nameWithType: IDiscordRestPollAPI
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI
  type: Interface
  source:
    id: IDiscordRestPollAPI
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestPollAPI.cs
    startLine: 35
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Represents the Discord Poll API.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public interface IDiscordRestPollAPI
    content.vb: >-
      <PublicAPI>

      Public Interface IDiscordRestPollAPI
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.GetAnswerVotersAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Int32,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.GetAnswerVotersAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Int32,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  id: GetAnswerVotersAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Int32,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI
  langs:
  - csharp
  - vb
  name: GetAnswerVotersAsync(Snowflake, Snowflake, int, Optional<Snowflake>, Optional<int>, CancellationToken)
  nameWithType: IDiscordRestPollAPI.GetAnswerVotersAsync(Snowflake, Snowflake, int, Optional<Snowflake>, Optional<int>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.GetAnswerVotersAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, int, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<int>, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetAnswerVotersAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestPollAPI.cs
    startLine: 48
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Gets a list of users that voted for this specific answer.
  example: []
  syntax:
    content: Task<Result<IPollAnswerVoters>> GetAnswerVotersAsync(Snowflake channelID, Snowflake messageID, int answerID, Optional<Snowflake> after = default, Optional<int> limit = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: answerID
      type: System.Int32
      description: The ID of the answer.
    - id: after
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: The ID of the user to get users after.
    - id: limit
      type: Remora.Rest.Core.Optional{System.Int32}
      description: The maximum number of users to retrieve. Ranges between 1 and 100.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IPollAnswerVoters}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Function GetAnswerVotersAsync(channelID As Snowflake, messageID As Snowflake, answerID As Integer, after As [Optional](Of Snowflake) = Nothing, limit As [Optional](Of Integer) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IPollAnswerVoters))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.GetAnswerVotersAsync*
  nameWithType.vb: IDiscordRestPollAPI.GetAnswerVotersAsync(Snowflake, Snowflake, Integer, Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.GetAnswerVotersAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Integer, Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Integer), System.Threading.CancellationToken)
  name.vb: GetAnswerVotersAsync(Snowflake, Snowflake, Integer, Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.EndPollAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.EndPollAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: EndPollAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI
  langs:
  - csharp
  - vb
  name: EndPollAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: IDiscordRestPollAPI.EndPollAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.EndPollAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: EndPollAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestPollAPI.cs
    startLine: 69
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Immediately ends the poll.
  remarks: >-
    You cannot end polls from other users.

    Fires a <xref href="Remora.Discord.API.Abstractions.Gateway.Events.IMessageUpdate" data-throw-if-not-resolved="false"></xref> Gateway event.
  example: []
  syntax:
    content: Task<Result<IMessage>> EndPollAsync(Snowflake channelID, Snowflake messageID, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
      description: An ending result which may or may not have succeeded.
    content.vb: Function EndPollAsync(channelID As Snowflake, messageID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IMessage))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.EndPollAsync*
references:
- uid: Remora.Discord.API.Abstractions.Rest
  commentId: N:Remora.Discord.API.Abstractions.Rest
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Rest
  nameWithType: Remora.Discord.API.Abstractions.Rest
  fullName: Remora.Discord.API.Abstractions.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.GetAnswerVotersAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.GetAnswerVotersAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestPollAPI_GetAnswerVotersAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Int32_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  name: GetAnswerVotersAsync
  nameWithType: IDiscordRestPollAPI.GetAnswerVotersAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.GetAnswerVotersAsync
- uid: Remora.Rest.Core.Snowflake
  commentId: T:Remora.Rest.Core.Snowflake
  parent: Remora.Rest.Core
  isExternal: true
  name: Snowflake
  nameWithType: Snowflake
  fullName: Remora.Rest.Core.Snowflake
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  commentId: T:Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  name: Optional<Snowflake>
  nameWithType: Optional<Snowflake>
  fullName: Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>
  nameWithType.vb: Optional(Of Snowflake)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake)
  name.vb: Optional(Of Snowflake)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
- uid: Remora.Rest.Core.Optional{System.Int32}
  commentId: T:Remora.Rest.Core.Optional{System.Int32}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Optional<int>
  nameWithType: Optional<int>
  fullName: Remora.Rest.Core.Optional<int>
  nameWithType.vb: Optional(Of Integer)
  fullName.vb: Remora.Rest.Core.Optional(Of Integer)
  name.vb: Optional(Of Integer)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IPollAnswerVoters}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IPollAnswerVoters}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IPollAnswerVoters>>
  nameWithType: Task<Result<IPollAnswerVoters>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IPollAnswerVoters>>
  nameWithType.vb: Task(Of Result(Of IPollAnswerVoters))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IPollAnswerVoters))
  name.vb: Task(Of Result(Of IPollAnswerVoters))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPollAnswerVoters
    name: IPollAnswerVoters
    href: Remora.Discord.API.Abstractions.Objects.IPollAnswerVoters.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPollAnswerVoters
    name: IPollAnswerVoters
    href: Remora.Discord.API.Abstractions.Objects.IPollAnswerVoters.html
  - name: )
  - name: )
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageUpdate
  commentId: T:Remora.Discord.API.Abstractions.Gateway.Events.IMessageUpdate
  parent: Remora.Discord.API.Abstractions.Gateway.Events
  href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageUpdate.html
  name: IMessageUpdate
  nameWithType: IMessageUpdate
  fullName: Remora.Discord.API.Abstractions.Gateway.Events.IMessageUpdate
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.EndPollAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.EndPollAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestPollAPI_EndPollAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: EndPollAsync
  nameWithType: IDiscordRestPollAPI.EndPollAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestPollAPI.EndPollAsync
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IMessage>>
  nameWithType: Task<Result<IMessage>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IMessage>>
  nameWithType.vb: Task(Of Result(Of IMessage))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IMessage))
  name.vb: Task(Of Result(Of IMessage))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IMessage
    name: IMessage
    href: Remora.Discord.API.Abstractions.Objects.IMessage.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IMessage
    name: IMessage
    href: Remora.Discord.API.Abstractions.Objects.IMessage.html
  - name: )
  - name: )
- uid: Remora.Discord.API.Abstractions.Gateway.Events
  commentId: N:Remora.Discord.API.Abstractions.Gateway.Events
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Gateway.Events
  nameWithType: Remora.Discord.API.Abstractions.Gateway.Events
  fullName: Remora.Discord.API.Abstractions.Gateway.Events
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway
    name: Gateway
    href: Remora.Discord.API.Abstractions.Gateway.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway.Events
    name: Events
    href: Remora.Discord.API.Abstractions.Gateway.Events.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway
    name: Gateway
    href: Remora.Discord.API.Abstractions.Gateway.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway.Events
    name: Events
    href: Remora.Discord.API.Abstractions.Gateway.Events.html
