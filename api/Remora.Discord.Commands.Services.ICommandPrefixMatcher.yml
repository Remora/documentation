### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Commands.Services.ICommandPrefixMatcher
  commentId: T:Remora.Discord.Commands.Services.ICommandPrefixMatcher
  id: ICommandPrefixMatcher
  parent: Remora.Discord.Commands.Services
  children:
  - Remora.Discord.Commands.Services.ICommandPrefixMatcher.MatchesPrefixAsync(System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ICommandPrefixMatcher
  nameWithType: ICommandPrefixMatcher
  fullName: Remora.Discord.Commands.Services.ICommandPrefixMatcher
  type: Interface
  source:
    id: ICommandPrefixMatcher
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Remora.Discord.Commands\Services\ICommandPrefixMatcher.cs
    startLine: 32
  assemblies:
  - Remora.Discord.Commands
  namespace: Remora.Discord.Commands.Services
  summary: Provides matching logic for text-based command prefixes.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public interface ICommandPrefixMatcher
    content.vb: >-
      <PublicAPI>

      Public Interface ICommandPrefixMatcher
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Services.ICommandPrefixMatcher.MatchesPrefixAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Commands.Services.ICommandPrefixMatcher.MatchesPrefixAsync(System.String,System.Threading.CancellationToken)
  id: MatchesPrefixAsync(System.String,System.Threading.CancellationToken)
  parent: Remora.Discord.Commands.Services.ICommandPrefixMatcher
  langs:
  - csharp
  - vb
  name: MatchesPrefixAsync(string, CancellationToken)
  nameWithType: ICommandPrefixMatcher.MatchesPrefixAsync(string, CancellationToken)
  fullName: Remora.Discord.Commands.Services.ICommandPrefixMatcher.MatchesPrefixAsync(string, System.Threading.CancellationToken)
  type: Method
  source:
    id: MatchesPrefixAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Remora.Discord.Commands\Services\ICommandPrefixMatcher.cs
    startLine: 44
  assemblies:
  - Remora.Discord.Commands
  namespace: Remora.Discord.Commands.Services
  summary: Determines whether the message contents begin or match some accepted command prefix.
  example: []
  syntax:
    content: ValueTask<Result<(bool Matches, int ContentStartIndex)>> MatchesPrefixAsync(string content, CancellationToken ct = default)
    parameters:
    - id: content
      type: System.String
      description: The message contents to check.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.ValueTask{Remora.Results.Result{System.ValueTuple{System.Boolean,System.Int32}}}
      description: >-
        A tuple which indicates whether the contents match an accepted prefix, and if so, the index at which the actual

        command contents start.
    content.vb: Function MatchesPrefixAsync(content As String, ct As CancellationToken = Nothing) As ValueTask(Of Result(Of (Matches As Boolean, ContentStartIndex As Integer)))
  overload: Remora.Discord.Commands.Services.ICommandPrefixMatcher.MatchesPrefixAsync*
  nameWithType.vb: ICommandPrefixMatcher.MatchesPrefixAsync(String, CancellationToken)
  fullName.vb: Remora.Discord.Commands.Services.ICommandPrefixMatcher.MatchesPrefixAsync(String, System.Threading.CancellationToken)
  name.vb: MatchesPrefixAsync(String, CancellationToken)
references:
- uid: Remora.Discord.Commands.Services
  commentId: N:Remora.Discord.Commands.Services
  href: Remora.html
  name: Remora.Discord.Commands.Services
  nameWithType: Remora.Discord.Commands.Services
  fullName: Remora.Discord.Commands.Services
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Services
    name: Services
    href: Remora.Discord.Commands.Services.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Services
    name: Services
    href: Remora.Discord.Commands.Services.html
- uid: Remora.Discord.Commands.Services.ICommandPrefixMatcher.MatchesPrefixAsync*
  commentId: Overload:Remora.Discord.Commands.Services.ICommandPrefixMatcher.MatchesPrefixAsync
  href: Remora.Discord.Commands.Services.ICommandPrefixMatcher.html#Remora_Discord_Commands_Services_ICommandPrefixMatcher_MatchesPrefixAsync_System_String_System_Threading_CancellationToken_
  name: MatchesPrefixAsync
  nameWithType: ICommandPrefixMatcher.MatchesPrefixAsync
  fullName: Remora.Discord.Commands.Services.ICommandPrefixMatcher.MatchesPrefixAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.ValueTask{Remora.Results.Result{System.ValueTuple{System.Boolean,System.Int32}}}
  commentId: T:System.Threading.Tasks.ValueTask{Remora.Results.Result{System.ValueTuple{System.Boolean,System.Int32}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<Result<(bool Matches, int ContentStartIndex)>>
  nameWithType: ValueTask<Result<(bool Matches, int ContentStartIndex)>>
  fullName: System.Threading.Tasks.ValueTask<Remora.Results.Result<(bool Matches, int ContentStartIndex)>>
  nameWithType.vb: ValueTask(Of Result(Of (Matches As Boolean, ContentStartIndex As Integer)))
  fullName.vb: System.Threading.Tasks.ValueTask(Of Remora.Results.Result(Of (Matches As Boolean, ContentStartIndex As Integer)))
  name.vb: ValueTask(Of Result(Of (Matches As Boolean, ContentStartIndex As Integer)))
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: " "
  - uid: System.ValueTuple{System.Boolean,System.Int32}.Matches
    name: Matches
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,system.int32-.matches
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Boolean,System.Int32}.ContentStartIndex
    name: ContentStartIndex
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,system.int32-.contentstartindex
  - name: )
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Boolean,System.Int32}.Matches
    name: Matches
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,system.int32-.matches
  - name: " "
  - name: As
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Boolean,System.Int32}.ContentStartIndex
    name: ContentStartIndex
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.boolean,system.int32-.contentstartindex
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
