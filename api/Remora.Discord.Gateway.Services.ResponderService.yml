### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Gateway.Services.ResponderService
  commentId: T:Remora.Discord.Gateway.Services.ResponderService
  id: ResponderService
  parent: Remora.Discord.Gateway.Services
  children:
  - Remora.Discord.Gateway.Services.ResponderService.GetEarlyResponderTypes``1
  - Remora.Discord.Gateway.Services.ResponderService.GetLateResponderTypes``1
  - Remora.Discord.Gateway.Services.ResponderService.GetResponderTypes``1
  - Remora.Discord.Gateway.Services.ResponderService.GetResponderTypes``1(System.Collections.Generic.IReadOnlyDictionary{System.Type,System.Collections.Generic.List{System.Type}})
  langs:
  - csharp
  - vb
  name: ResponderService
  nameWithType: ResponderService
  fullName: Remora.Discord.Gateway.Services.ResponderService
  type: Class
  source:
    id: ResponderService
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Gateway\Services\ResponderService.cs
    startLine: 35
  assemblies:
  - Remora.Discord.Gateway
  namespace: Remora.Discord.Gateway.Services
  summary: Handles introspection of registered responders.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public class ResponderService : IResponderTypeRepository
    content.vb: >-
      <PublicAPI>

      Public Class ResponderService Implements IResponderTypeRepository
  inheritance:
  - System.Object
  implements:
  - Remora.Discord.Gateway.Services.IResponderTypeRepository
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Gateway.Services.ResponderService.GetEarlyResponderTypes``1
  commentId: M:Remora.Discord.Gateway.Services.ResponderService.GetEarlyResponderTypes``1
  id: GetEarlyResponderTypes``1
  parent: Remora.Discord.Gateway.Services.ResponderService
  langs:
  - csharp
  - vb
  name: GetEarlyResponderTypes<TGatewayEvent>()
  nameWithType: ResponderService.GetEarlyResponderTypes<TGatewayEvent>()
  fullName: Remora.Discord.Gateway.Services.ResponderService.GetEarlyResponderTypes<TGatewayEvent>()
  type: Method
  source:
    id: GetEarlyResponderTypes
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Gateway\Services\ResponderService.cs
    startLine: 100
  assemblies:
  - Remora.Discord.Gateway
  namespace: Remora.Discord.Gateway.Services
  summary: Gets all responder types that are relevant for the given event, and should run before any other responders.
  example: []
  syntax:
    content: 'public IReadOnlyList<Type> GetEarlyResponderTypes<TGatewayEvent>() where TGatewayEvent : IGatewayEvent'
    typeParameters:
    - id: TGatewayEvent
      description: The event type.
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Type}
      description: A list of responder types.
    content.vb: Public Function GetEarlyResponderTypes(Of TGatewayEvent As IGatewayEvent)() As IReadOnlyList(Of Type)
  overload: Remora.Discord.Gateway.Services.ResponderService.GetEarlyResponderTypes*
  implements:
  - Remora.Discord.Gateway.Services.IResponderTypeRepository.GetEarlyResponderTypes``1
  nameWithType.vb: ResponderService.GetEarlyResponderTypes(Of TGatewayEvent)()
  fullName.vb: Remora.Discord.Gateway.Services.ResponderService.GetEarlyResponderTypes(Of TGatewayEvent)()
  name.vb: GetEarlyResponderTypes(Of TGatewayEvent)()
- uid: Remora.Discord.Gateway.Services.ResponderService.GetResponderTypes``1
  commentId: M:Remora.Discord.Gateway.Services.ResponderService.GetResponderTypes``1
  id: GetResponderTypes``1
  parent: Remora.Discord.Gateway.Services.ResponderService
  langs:
  - csharp
  - vb
  name: GetResponderTypes<TGatewayEvent>()
  nameWithType: ResponderService.GetResponderTypes<TGatewayEvent>()
  fullName: Remora.Discord.Gateway.Services.ResponderService.GetResponderTypes<TGatewayEvent>()
  type: Method
  source:
    id: GetResponderTypes
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Gateway\Services\ResponderService.cs
    startLine: 104
  assemblies:
  - Remora.Discord.Gateway
  namespace: Remora.Discord.Gateway.Services
  summary: Gets all responder types that are relevant for the given event.
  example: []
  syntax:
    content: 'public IReadOnlyList<Type> GetResponderTypes<TGatewayEvent>() where TGatewayEvent : IGatewayEvent'
    typeParameters:
    - id: TGatewayEvent
      description: The event type.
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Type}
      description: A list of responder types.
    content.vb: Public Function GetResponderTypes(Of TGatewayEvent As IGatewayEvent)() As IReadOnlyList(Of Type)
  overload: Remora.Discord.Gateway.Services.ResponderService.GetResponderTypes*
  implements:
  - Remora.Discord.Gateway.Services.IResponderTypeRepository.GetResponderTypes``1
  nameWithType.vb: ResponderService.GetResponderTypes(Of TGatewayEvent)()
  fullName.vb: Remora.Discord.Gateway.Services.ResponderService.GetResponderTypes(Of TGatewayEvent)()
  name.vb: GetResponderTypes(Of TGatewayEvent)()
- uid: Remora.Discord.Gateway.Services.ResponderService.GetLateResponderTypes``1
  commentId: M:Remora.Discord.Gateway.Services.ResponderService.GetLateResponderTypes``1
  id: GetLateResponderTypes``1
  parent: Remora.Discord.Gateway.Services.ResponderService
  langs:
  - csharp
  - vb
  name: GetLateResponderTypes<TGatewayEvent>()
  nameWithType: ResponderService.GetLateResponderTypes<TGatewayEvent>()
  fullName: Remora.Discord.Gateway.Services.ResponderService.GetLateResponderTypes<TGatewayEvent>()
  type: Method
  source:
    id: GetLateResponderTypes
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Gateway\Services\ResponderService.cs
    startLine: 108
  assemblies:
  - Remora.Discord.Gateway
  namespace: Remora.Discord.Gateway.Services
  summary: Gets all responder types that are relevant for the given event, and should run after any other responders.
  example: []
  syntax:
    content: 'public IReadOnlyList<Type> GetLateResponderTypes<TGatewayEvent>() where TGatewayEvent : IGatewayEvent'
    typeParameters:
    - id: TGatewayEvent
      description: The event type.
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Type}
      description: A list of responder types.
    content.vb: Public Function GetLateResponderTypes(Of TGatewayEvent As IGatewayEvent)() As IReadOnlyList(Of Type)
  overload: Remora.Discord.Gateway.Services.ResponderService.GetLateResponderTypes*
  implements:
  - Remora.Discord.Gateway.Services.IResponderTypeRepository.GetLateResponderTypes``1
  nameWithType.vb: ResponderService.GetLateResponderTypes(Of TGatewayEvent)()
  fullName.vb: Remora.Discord.Gateway.Services.ResponderService.GetLateResponderTypes(Of TGatewayEvent)()
  name.vb: GetLateResponderTypes(Of TGatewayEvent)()
- uid: Remora.Discord.Gateway.Services.ResponderService.GetResponderTypes``1(System.Collections.Generic.IReadOnlyDictionary{System.Type,System.Collections.Generic.List{System.Type}})
  commentId: M:Remora.Discord.Gateway.Services.ResponderService.GetResponderTypes``1(System.Collections.Generic.IReadOnlyDictionary{System.Type,System.Collections.Generic.List{System.Type}})
  id: GetResponderTypes``1(System.Collections.Generic.IReadOnlyDictionary{System.Type,System.Collections.Generic.List{System.Type}})
  parent: Remora.Discord.Gateway.Services.ResponderService
  langs:
  - csharp
  - vb
  name: GetResponderTypes<TGatewayEvent>(IReadOnlyDictionary<Type, List<Type>>)
  nameWithType: ResponderService.GetResponderTypes<TGatewayEvent>(IReadOnlyDictionary<Type, List<Type>>)
  fullName: Remora.Discord.Gateway.Services.ResponderService.GetResponderTypes<TGatewayEvent>(System.Collections.Generic.IReadOnlyDictionary<System.Type, System.Collections.Generic.List<System.Type>>)
  type: Method
  source:
    id: GetResponderTypes
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Gateway\Services\ResponderService.cs
    startLine: 117
  assemblies:
  - Remora.Discord.Gateway
  namespace: Remora.Discord.Gateway.Services
  summary: Gets all responder types that are relevant for the given event.
  example: []
  syntax:
    content: 'public static IReadOnlyList<Type> GetResponderTypes<TGatewayEvent>(IReadOnlyDictionary<Type, List<Type>> responderGroup) where TGatewayEvent : IGatewayEvent'
    parameters:
    - id: responderGroup
      type: System.Collections.Generic.IReadOnlyDictionary{System.Type,System.Collections.Generic.List{System.Type}}
      description: The responder group that responders should be retrieved from.
    typeParameters:
    - id: TGatewayEvent
      description: The event type.
    return:
      type: System.Collections.Generic.IReadOnlyList{System.Type}
      description: A list of responder types.
    content.vb: Public Shared Function GetResponderTypes(Of TGatewayEvent As IGatewayEvent)(responderGroup As IReadOnlyDictionary(Of Type, List(Of Type))) As IReadOnlyList(Of Type)
  overload: Remora.Discord.Gateway.Services.ResponderService.GetResponderTypes*
  nameWithType.vb: ResponderService.GetResponderTypes(Of TGatewayEvent)(IReadOnlyDictionary(Of Type, List(Of Type)))
  fullName.vb: Remora.Discord.Gateway.Services.ResponderService.GetResponderTypes(Of TGatewayEvent)(System.Collections.Generic.IReadOnlyDictionary(Of System.Type, System.Collections.Generic.List(Of System.Type)))
  name.vb: GetResponderTypes(Of TGatewayEvent)(IReadOnlyDictionary(Of Type, List(Of Type)))
references:
- uid: Remora.Discord.Gateway.Services
  commentId: N:Remora.Discord.Gateway.Services
  href: Remora.html
  name: Remora.Discord.Gateway.Services
  nameWithType: Remora.Discord.Gateway.Services
  fullName: Remora.Discord.Gateway.Services
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Services
    name: Services
    href: Remora.Discord.Gateway.Services.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Services
    name: Services
    href: Remora.Discord.Gateway.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Gateway.Services.IResponderTypeRepository
  commentId: T:Remora.Discord.Gateway.Services.IResponderTypeRepository
  parent: Remora.Discord.Gateway.Services
  href: Remora.Discord.Gateway.Services.IResponderTypeRepository.html
  name: IResponderTypeRepository
  nameWithType: IResponderTypeRepository
  fullName: Remora.Discord.Gateway.Services.IResponderTypeRepository
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Gateway.Services.ResponderService.GetEarlyResponderTypes*
  commentId: Overload:Remora.Discord.Gateway.Services.ResponderService.GetEarlyResponderTypes
  href: Remora.Discord.Gateway.Services.ResponderService.html#Remora_Discord_Gateway_Services_ResponderService_GetEarlyResponderTypes__1
  name: GetEarlyResponderTypes
  nameWithType: ResponderService.GetEarlyResponderTypes
  fullName: Remora.Discord.Gateway.Services.ResponderService.GetEarlyResponderTypes
- uid: Remora.Discord.Gateway.Services.IResponderTypeRepository.GetEarlyResponderTypes``1
  commentId: M:Remora.Discord.Gateway.Services.IResponderTypeRepository.GetEarlyResponderTypes``1
  parent: Remora.Discord.Gateway.Services.IResponderTypeRepository
  href: Remora.Discord.Gateway.Services.IResponderTypeRepository.html#Remora_Discord_Gateway_Services_IResponderTypeRepository_GetEarlyResponderTypes__1
  name: GetEarlyResponderTypes<TGatewayEvent>()
  nameWithType: IResponderTypeRepository.GetEarlyResponderTypes<TGatewayEvent>()
  fullName: Remora.Discord.Gateway.Services.IResponderTypeRepository.GetEarlyResponderTypes<TGatewayEvent>()
  nameWithType.vb: IResponderTypeRepository.GetEarlyResponderTypes(Of TGatewayEvent)()
  fullName.vb: Remora.Discord.Gateway.Services.IResponderTypeRepository.GetEarlyResponderTypes(Of TGatewayEvent)()
  name.vb: GetEarlyResponderTypes(Of TGatewayEvent)()
  spec.csharp:
  - uid: Remora.Discord.Gateway.Services.IResponderTypeRepository.GetEarlyResponderTypes``1
    name: GetEarlyResponderTypes
    href: Remora.Discord.Gateway.Services.IResponderTypeRepository.html#Remora_Discord_Gateway_Services_IResponderTypeRepository_GetEarlyResponderTypes__1
  - name: <
  - name: TGatewayEvent
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Services.IResponderTypeRepository.GetEarlyResponderTypes``1
    name: GetEarlyResponderTypes
    href: Remora.Discord.Gateway.Services.IResponderTypeRepository.html#Remora_Discord_Gateway_Services_IResponderTypeRepository_GetEarlyResponderTypes__1
  - name: (
  - name: Of
  - name: " "
  - name: TGatewayEvent
  - name: )
  - name: (
  - name: )
- uid: System.Collections.Generic.IReadOnlyList{System.Type}
  commentId: T:System.Collections.Generic.IReadOnlyList{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<Type>
  nameWithType: IReadOnlyList<Type>
  fullName: System.Collections.Generic.IReadOnlyList<System.Type>
  nameWithType.vb: IReadOnlyList(Of Type)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of System.Type)
  name.vb: IReadOnlyList(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Remora.Discord.Gateway.Services.ResponderService.GetResponderTypes*
  commentId: Overload:Remora.Discord.Gateway.Services.ResponderService.GetResponderTypes
  href: Remora.Discord.Gateway.Services.ResponderService.html#Remora_Discord_Gateway_Services_ResponderService_GetResponderTypes__1
  name: GetResponderTypes
  nameWithType: ResponderService.GetResponderTypes
  fullName: Remora.Discord.Gateway.Services.ResponderService.GetResponderTypes
- uid: Remora.Discord.Gateway.Services.IResponderTypeRepository.GetResponderTypes``1
  commentId: M:Remora.Discord.Gateway.Services.IResponderTypeRepository.GetResponderTypes``1
  parent: Remora.Discord.Gateway.Services.IResponderTypeRepository
  href: Remora.Discord.Gateway.Services.IResponderTypeRepository.html#Remora_Discord_Gateway_Services_IResponderTypeRepository_GetResponderTypes__1
  name: GetResponderTypes<TGatewayEvent>()
  nameWithType: IResponderTypeRepository.GetResponderTypes<TGatewayEvent>()
  fullName: Remora.Discord.Gateway.Services.IResponderTypeRepository.GetResponderTypes<TGatewayEvent>()
  nameWithType.vb: IResponderTypeRepository.GetResponderTypes(Of TGatewayEvent)()
  fullName.vb: Remora.Discord.Gateway.Services.IResponderTypeRepository.GetResponderTypes(Of TGatewayEvent)()
  name.vb: GetResponderTypes(Of TGatewayEvent)()
  spec.csharp:
  - uid: Remora.Discord.Gateway.Services.IResponderTypeRepository.GetResponderTypes``1
    name: GetResponderTypes
    href: Remora.Discord.Gateway.Services.IResponderTypeRepository.html#Remora_Discord_Gateway_Services_IResponderTypeRepository_GetResponderTypes__1
  - name: <
  - name: TGatewayEvent
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Services.IResponderTypeRepository.GetResponderTypes``1
    name: GetResponderTypes
    href: Remora.Discord.Gateway.Services.IResponderTypeRepository.html#Remora_Discord_Gateway_Services_IResponderTypeRepository_GetResponderTypes__1
  - name: (
  - name: Of
  - name: " "
  - name: TGatewayEvent
  - name: )
  - name: (
  - name: )
- uid: Remora.Discord.Gateway.Services.ResponderService.GetLateResponderTypes*
  commentId: Overload:Remora.Discord.Gateway.Services.ResponderService.GetLateResponderTypes
  href: Remora.Discord.Gateway.Services.ResponderService.html#Remora_Discord_Gateway_Services_ResponderService_GetLateResponderTypes__1
  name: GetLateResponderTypes
  nameWithType: ResponderService.GetLateResponderTypes
  fullName: Remora.Discord.Gateway.Services.ResponderService.GetLateResponderTypes
- uid: Remora.Discord.Gateway.Services.IResponderTypeRepository.GetLateResponderTypes``1
  commentId: M:Remora.Discord.Gateway.Services.IResponderTypeRepository.GetLateResponderTypes``1
  parent: Remora.Discord.Gateway.Services.IResponderTypeRepository
  href: Remora.Discord.Gateway.Services.IResponderTypeRepository.html#Remora_Discord_Gateway_Services_IResponderTypeRepository_GetLateResponderTypes__1
  name: GetLateResponderTypes<TGatewayEvent>()
  nameWithType: IResponderTypeRepository.GetLateResponderTypes<TGatewayEvent>()
  fullName: Remora.Discord.Gateway.Services.IResponderTypeRepository.GetLateResponderTypes<TGatewayEvent>()
  nameWithType.vb: IResponderTypeRepository.GetLateResponderTypes(Of TGatewayEvent)()
  fullName.vb: Remora.Discord.Gateway.Services.IResponderTypeRepository.GetLateResponderTypes(Of TGatewayEvent)()
  name.vb: GetLateResponderTypes(Of TGatewayEvent)()
  spec.csharp:
  - uid: Remora.Discord.Gateway.Services.IResponderTypeRepository.GetLateResponderTypes``1
    name: GetLateResponderTypes
    href: Remora.Discord.Gateway.Services.IResponderTypeRepository.html#Remora_Discord_Gateway_Services_IResponderTypeRepository_GetLateResponderTypes__1
  - name: <
  - name: TGatewayEvent
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Services.IResponderTypeRepository.GetLateResponderTypes``1
    name: GetLateResponderTypes
    href: Remora.Discord.Gateway.Services.IResponderTypeRepository.html#Remora_Discord_Gateway_Services_IResponderTypeRepository_GetLateResponderTypes__1
  - name: (
  - name: Of
  - name: " "
  - name: TGatewayEvent
  - name: )
  - name: (
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary{System.Type,System.Collections.Generic.List{System.Type}}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.Type,System.Collections.Generic.List{System.Type}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<Type, List<Type>>
  nameWithType: IReadOnlyDictionary<Type, List<Type>>
  fullName: System.Collections.Generic.IReadOnlyDictionary<System.Type, System.Collections.Generic.List<System.Type>>
  nameWithType.vb: IReadOnlyDictionary(Of Type, List(Of Type))
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of System.Type, System.Collections.Generic.List(Of System.Type))
  name.vb: IReadOnlyDictionary(Of Type, List(Of Type))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
