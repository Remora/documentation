### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI
  commentId: T:Remora.Discord.Rest.API.DiscordRestChannelAPI
  id: DiscordRestChannelAPI
  parent: Remora.Discord.Rest.API
  children:
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.AddThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.BulkDeleteMessagesAsync(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateChannelInviteAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.TimeSpan},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.InviteTarget},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IMessageReference},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.CrosspostMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteAllReactionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteChannelPermissionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteOwnReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteUserReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.EditChannelPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.EditMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.MessageFlags}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.FollowAnnouncementChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelInvitesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelMessagesAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.GetPinnedMessagesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.GetReactionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.GetThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.GroupDMAddRecipientAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.GroupDMRemoveRecipientAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.JoinThreadAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.LeaveThreadAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.ListPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.DateTimeOffset},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.ListPublicArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.DateTimeOffset},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.ListThreadMembersAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyForumChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGroupDMChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildStageChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildTextChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildVoiceChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyMediaChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyThreadChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.PinMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.RemoveThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadFromMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Rest.FileData}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadWithoutMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Discord.API.Abstractions.Objects.ChannelType,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.TriggerTypingIndicatorAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestChannelAPI.UnpinMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: DiscordRestChannelAPI
  nameWithType: DiscordRestChannelAPI
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI
  type: Class
  source:
    id: DiscordRestChannelAPI
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 48
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Represents the Discord Channel API.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public class DiscordRestChannelAPI : AbstractDiscordRestAPI, IRestCustomizable, IDiscordRestChannelAPI
    content.vb: >-
      <PublicAPI>

      Public Class DiscordRestChannelAPI Inherits AbstractDiscordRestAPI Implements IRestCustomizable, IDiscordRestChannelAPI
  inheritance:
  - System.Object
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI
  implements:
  - Remora.Rest.IRestCustomizable
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  inheritedMembers:
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  id: '#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)'
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: DiscordRestChannelAPI(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
  nameWithType: DiscordRestChannelAPI.DiscordRestChannelAPI(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.DiscordRestChannelAPI(Remora.Rest.IRestHttpClient, System.Text.Json.JsonSerializerOptions, Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 57
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Initializes a new instance of the <xref href="Remora.Discord.Rest.API.DiscordRestChannelAPI" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public DiscordRestChannelAPI(IRestHttpClient restHttpClient, JsonSerializerOptions jsonOptions, ICacheProvider rateLimitCache)
    parameters:
    - id: restHttpClient
      type: Remora.Rest.IRestHttpClient
      description: The Discord HTTP client.
    - id: jsonOptions
      type: System.Text.Json.JsonSerializerOptions
      description: The JSON options.
    - id: rateLimitCache
      type: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
      description: The memory cache used for rate limits.
    content.vb: Public Sub New(restHttpClient As IRestHttpClient, jsonOptions As JsonSerializerOptions, rateLimitCache As ICacheProvider)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.#ctor*
  nameWithType.vb: DiscordRestChannelAPI.New(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.New(Remora.Rest.IRestHttpClient, System.Text.Json.JsonSerializerOptions, Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  name.vb: New(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: GetChannelAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: GetChannelAsync(Snowflake, CancellationToken)
  nameWithType: DiscordRestChannelAPI.GetChannelAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetChannelAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 68
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets a channel by its ID.
  example: []
  syntax:
    content: public virtual Task<Result<IChannel>> GetChannelAsync(Snowflake channelID, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannel}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function GetChannelAsync(channelID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IChannel))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: ModifyChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: ModifyChannelAsync(Snowflake, Optional<string>, Optional<Stream>, Optional<ChannelType>, Optional<int?>, Optional<string?>, Optional<bool?>, Optional<int?>, Optional<int?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>?>, Optional<Snowflake?>, Optional<VideoQualityMode?>, Optional<bool>, Optional<AutoArchiveDuration>, Optional<bool>, Optional<bool>, Optional<AutoArchiveDuration?>, Optional<string?>, Optional<ChannelFlags>, Optional<IReadOnlyList<IPartialForumTag>>, Optional<IDefaultReaction?>, Optional<int>, Optional<IReadOnlyList<Snowflake>>, Optional<SortOrder>, Optional<ForumLayout>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.ModifyChannelAsync(Snowflake, Optional<string>, Optional<Stream>, Optional<ChannelType>, Optional<int?>, Optional<string?>, Optional<bool?>, Optional<int?>, Optional<int?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>?>, Optional<Snowflake?>, Optional<VideoQualityMode?>, Optional<bool>, Optional<AutoArchiveDuration>, Optional<bool>, Optional<bool>, Optional<AutoArchiveDuration?>, Optional<string?>, Optional<ChannelFlags>, Optional<IReadOnlyList<IPartialForumTag>>, Optional<IDefaultReaction?>, Optional<int>, Optional<IReadOnlyList<Snowflake>>, Optional<SortOrder>, Optional<ForumLayout>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.IO.Stream>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelType>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string?>, Remora.Rest.Core.Optional<bool?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite>?>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.VideoQualityMode?>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?>, Remora.Rest.Core.Optional<string?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelFlags>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialForumTag>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDefaultReaction?>, Remora.Rest.Core.Optional<int>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.SortOrder>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ForumLayout>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ModifyChannelAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 83
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Modifies the given channel.
  remarks: >-
    Any streams passed to this method will be disposed of at the end of the call. If you want to reuse the streams

    afterwards, ensure that what you pass is a copy that the method can take ownership of.
  example: []
  syntax:
    content: public virtual Task<Result<IChannel>> ModifyChannelAsync(Snowflake channelID, Optional<string> name = default, Optional<Stream> icon = default, Optional<ChannelType> type = default, Optional<int?> position = default, Optional<string?> topic = default, Optional<bool?> isNsfw = default, Optional<int?> rateLimitPerUser = default, Optional<int?> bitrate = default, Optional<int?> userLimit = default, Optional<IReadOnlyList<IPartialPermissionOverwrite>?> permissionOverwrites = default, Optional<Snowflake?> parentID = default, Optional<VideoQualityMode?> videoQualityMode = default, Optional<bool> isArchived = default, Optional<AutoArchiveDuration> autoArchiveDuration = default, Optional<bool> isLocked = default, Optional<bool> isInvitable = default, Optional<AutoArchiveDuration?> defaultAutoArchiveDuration = default, Optional<string?> rtcRegion = default, Optional<ChannelFlags> flags = default, Optional<IReadOnlyList<IPartialForumTag>> availableTags = default, Optional<IDefaultReaction?> defaultReactionEmoji = default, Optional<int> defaultThreadRateLimitPerUser = default, Optional<IReadOnlyList<Snowflake>> appliedTags = default, Optional<SortOrder> defaultSortOrder = default, Optional<ForumLayout> defaultForumLayout = default, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: name
      type: Remora.Rest.Core.Optional{System.String}
      description: The new name of the channel.
    - id: icon
      type: Remora.Rest.Core.Optional{System.IO.Stream}
      description: The new icon.
    - id: type
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType}
      description: >-
        The new type of the channel. Only conversions between <xref href="Remora.Discord.API.Abstractions.Objects.ChannelType.GuildText" data-throw-if-not-resolved="false"></xref> and

        <xref href="Remora.Discord.API.Abstractions.Objects.ChannelType.GuildAnnouncement" data-throw-if-not-resolved="false"></xref> are supported.
    - id: position
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new position of the channel in the listing.
    - id: topic
      type: Remora.Rest.Core.Optional{System.String}
      description: The new topic of the channel. Max 1024 characters (4096 for forums).
    - id: isNsfw
      type: Remora.Rest.Core.Optional{System.Nullable{System.Boolean}}
      description: The new NSFW status of the channel.
    - id: rateLimitPerUser
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new rate limit per user.
    - id: bitrate
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new bitrate.
    - id: userLimit
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new user limit.
    - id: permissionOverwrites
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}}
      description: The new permission overwrites.
    - id: parentID
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}}
      description: The new parent category ID.
    - id: videoQualityMode
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}}
      description: The new video quality mode.
    - id: isArchived
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether the thread is archived.
    - id: autoArchiveDuration
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}
      description: The time of inactivity after which the thread is archived.
    - id: isLocked
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether the thread is locked.
    - id: isInvitable
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether non-moderators can add other non-moderators to the private thread.
    - id: defaultAutoArchiveDuration
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}}
      description: The default time of inactivity after which threads in the channel are archived.
    - id: rtcRegion
      type: Remora.Rest.Core.Optional{System.String}
      description: The channel's voice region. Automatic when null.
    - id: flags
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags}
      description: The channel flags to use.
    - id: availableTags
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}}
      description: The set of tags that can be used in a forum channel. Only "name" is required to be set.
    - id: defaultReactionEmoji
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction}
      description: The emoji to show in the add reaction button on threads in a forum.
    - id: defaultThreadRateLimitPerUser
      type: Remora.Rest.Core.Optional{System.Int32}
      description: The initial <xref href="Remora.Discord.API.Abstractions.Objects.IChannel.RateLimitPerUser" data-throw-if-not-resolved="false"></xref> to set on new threads in a forum channel.
    - id: appliedTags
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
      description: The tags applied to the thread.
    - id: defaultSortOrder
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder}
      description: The default sort order of posts.
    - id: defaultForumLayout
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout}
      description: The default layout of posts in a forum.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannel}}
      description: A modification result which may or may not have succeeded.
    content.vb: Public Overridable Function ModifyChannelAsync(channelID As Snowflake, name As [Optional](Of String) = Nothing, icon As [Optional](Of Stream) = Nothing, type As [Optional](Of ChannelType) = Nothing, position As [Optional](Of Integer?) = Nothing, topic As [Optional](Of String) = Nothing, isNsfw As [Optional](Of Boolean?) = Nothing, rateLimitPerUser As [Optional](Of Integer?) = Nothing, bitrate As [Optional](Of Integer?) = Nothing, userLimit As [Optional](Of Integer?) = Nothing, permissionOverwrites As [Optional](Of IReadOnlyList(Of IPartialPermissionOverwrite)) = Nothing, parentID As [Optional](Of Snowflake?) = Nothing, videoQualityMode As [Optional](Of VideoQualityMode?) = Nothing, isArchived As [Optional](Of Boolean) = Nothing, autoArchiveDuration As [Optional](Of AutoArchiveDuration) = Nothing, isLocked As [Optional](Of Boolean) = Nothing, isInvitable As [Optional](Of Boolean) = Nothing, defaultAutoArchiveDuration As [Optional](Of AutoArchiveDuration?) = Nothing, rtcRegion As [Optional](Of String) = Nothing, flags As [Optional](Of ChannelFlags) = Nothing, availableTags As [Optional](Of IReadOnlyList(Of IPartialForumTag)) = Nothing, defaultReactionEmoji As [Optional](Of IDefaultReaction) = Nothing, defaultThreadRateLimitPerUser As [Optional](Of Integer) = Nothing, appliedTags As [Optional](Of IReadOnlyList(Of Snowflake)) = Nothing, defaultSortOrder As [Optional](Of SortOrder) = Nothing, defaultForumLayout As [Optional](Of ForumLayout) = Nothing, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IChannel))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyChannelAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.ModifyChannelAsync(Snowflake, Optional(Of String), Optional(Of Stream), Optional(Of ChannelType), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of VideoQualityMode?), Optional(Of Boolean), Optional(Of AutoArchiveDuration), Optional(Of Boolean), Optional(Of Boolean), Optional(Of AutoArchiveDuration?), Optional(Of String), Optional(Of ChannelFlags), Optional(Of IReadOnlyList(Of IPartialForumTag)), Optional(Of IDefaultReaction), Optional(Of Integer), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of SortOrder), Optional(Of ForumLayout), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.IO.Stream), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelType), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite)), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.VideoQualityMode?), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelFlags), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialForumTag)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDefaultReaction), Remora.Rest.Core.Optional(Of Integer), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.SortOrder), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ForumLayout), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyChannelAsync(Snowflake, Optional(Of String), Optional(Of Stream), Optional(Of ChannelType), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of VideoQualityMode?), Optional(Of Boolean), Optional(Of AutoArchiveDuration), Optional(Of Boolean), Optional(Of Boolean), Optional(Of AutoArchiveDuration?), Optional(Of String), Optional(Of ChannelFlags), Optional(Of IReadOnlyList(Of IPartialForumTag)), Optional(Of IDefaultReaction), Optional(Of Integer), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of SortOrder), Optional(Of ForumLayout), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGroupDMChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGroupDMChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},System.Threading.CancellationToken)
  id: ModifyGroupDMChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: ModifyGroupDMChannelAsync(Snowflake, Optional<string>, Optional<Stream>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.ModifyGroupDMChannelAsync(Snowflake, Optional<string>, Optional<Stream>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGroupDMChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.IO.Stream>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ModifyGroupDMChannelAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 206
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Modifies the given group DM channel.
  remarks: >-
    Any streams passed to this method will be disposed of at the end of the call. If you want to reuse the streams

    afterwards, ensure that what you pass is a copy that the method can take ownership of.
  example: []
  syntax:
    content: public virtual Task<Result<IChannel>> ModifyGroupDMChannelAsync(Snowflake channelID, Optional<string> name = default, Optional<Stream> icon = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: name
      type: Remora.Rest.Core.Optional{System.String}
      description: The new name of the channel.
    - id: icon
      type: Remora.Rest.Core.Optional{System.IO.Stream}
      description: The new icon.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannel}}
      description: A modification result which may or may not have succeeded.
    content.vb: Public Overridable Function ModifyGroupDMChannelAsync(channelID As Snowflake, name As [Optional](Of String) = Nothing, icon As [Optional](Of Stream) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IChannel))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGroupDMChannelAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGroupDMChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.ModifyGroupDMChannelAsync(Snowflake, Optional(Of String), Optional(Of Stream), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGroupDMChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.IO.Stream), System.Threading.CancellationToken)
  name.vb: ModifyGroupDMChannelAsync(Snowflake, Optional(Of String), Optional(Of Stream), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildTextChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildTextChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: ModifyGuildTextChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: ModifyGuildTextChannelAsync(Snowflake, Optional<string>, Optional<ChannelType>, Optional<int?>, Optional<string?>, Optional<bool?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>?>, Optional<Snowflake?>, Optional<AutoArchiveDuration?>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.ModifyGuildTextChannelAsync(Snowflake, Optional<string>, Optional<ChannelType>, Optional<int?>, Optional<string?>, Optional<bool?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>?>, Optional<Snowflake?>, Optional<AutoArchiveDuration?>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildTextChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelType>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string?>, Remora.Rest.Core.Optional<bool?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite>?>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ModifyGuildTextChannelAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 218
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Modifies the given guild text channel.
  example: []
  syntax:
    content: public virtual Task<Result<IChannel>> ModifyGuildTextChannelAsync(Snowflake channelID, Optional<string> name = default, Optional<ChannelType> type = default, Optional<int?> position = default, Optional<string?> topic = default, Optional<bool?> isNsfw = default, Optional<int?> rateLimitPerUser = default, Optional<IReadOnlyList<IPartialPermissionOverwrite>?> permissionOverwrites = default, Optional<Snowflake?> parentID = default, Optional<AutoArchiveDuration?> defaultAutoArchiveDuration = default, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: name
      type: Remora.Rest.Core.Optional{System.String}
      description: The new name of the channel.
    - id: type
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType}
      description: >-
        The new type of the channel. Only conversions between <xref href="Remora.Discord.API.Abstractions.Objects.ChannelType.GuildText" data-throw-if-not-resolved="false"></xref> and

        <xref href="Remora.Discord.API.Abstractions.Objects.ChannelType.GuildAnnouncement" data-throw-if-not-resolved="false"></xref> are supported.
    - id: position
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new position of the channel in the listing.
    - id: topic
      type: Remora.Rest.Core.Optional{System.String}
      description: The new topic of the channel.
    - id: isNsfw
      type: Remora.Rest.Core.Optional{System.Nullable{System.Boolean}}
      description: The new NSFW status of the channel.
    - id: rateLimitPerUser
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new rate limit per user.
    - id: permissionOverwrites
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}}
      description: The new permission overwrites.
    - id: parentID
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}}
      description: The new parent category ID.
    - id: defaultAutoArchiveDuration
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}}
      description: The default time of inactivity after which threads in the channel are archived.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannel}}
      description: A modification result which may or may not have succeeded.
    content.vb: Public Overridable Function ModifyGuildTextChannelAsync(channelID As Snowflake, name As [Optional](Of String) = Nothing, type As [Optional](Of ChannelType) = Nothing, position As [Optional](Of Integer?) = Nothing, topic As [Optional](Of String) = Nothing, isNsfw As [Optional](Of Boolean?) = Nothing, rateLimitPerUser As [Optional](Of Integer?) = Nothing, permissionOverwrites As [Optional](Of IReadOnlyList(Of IPartialPermissionOverwrite)) = Nothing, parentID As [Optional](Of Snowflake?) = Nothing, defaultAutoArchiveDuration As [Optional](Of AutoArchiveDuration?) = Nothing, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IChannel))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildTextChannelAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildTextChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.ModifyGuildTextChannelAsync(Snowflake, Optional(Of String), Optional(Of ChannelType), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of AutoArchiveDuration?), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildTextChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelType), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite)), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyGuildTextChannelAsync(Snowflake, Optional(Of String), Optional(Of ChannelType), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of AutoArchiveDuration?), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildVoiceChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildVoiceChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: ModifyGuildVoiceChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: ModifyGuildVoiceChannelAsync(Snowflake, Optional<string>, Optional<int?>, Optional<bool?>, Optional<int?>, Optional<int?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>?>, Optional<Snowflake?>, Optional<string?>, Optional<VideoQualityMode?>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.ModifyGuildVoiceChannelAsync(Snowflake, Optional<string>, Optional<int?>, Optional<bool?>, Optional<int?>, Optional<int?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>?>, Optional<Snowflake?>, Optional<string?>, Optional<VideoQualityMode?>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildVoiceChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<bool?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite>?>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>, Remora.Rest.Core.Optional<string?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.VideoQualityMode?>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ModifyGuildVoiceChannelAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 252
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Modifies the given guild voice channel.
  example: []
  syntax:
    content: public virtual Task<Result<IChannel>> ModifyGuildVoiceChannelAsync(Snowflake channelID, Optional<string> name = default, Optional<int?> position = default, Optional<bool?> isNsfw = default, Optional<int?> rateLimitPerUser = default, Optional<int?> bitrate = default, Optional<int?> userLimit = default, Optional<IReadOnlyList<IPartialPermissionOverwrite>?> permissionOverwrites = default, Optional<Snowflake?> parentID = default, Optional<string?> rtcRegion = default, Optional<VideoQualityMode?> videoQualityMode = default, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: name
      type: Remora.Rest.Core.Optional{System.String}
      description: The new name of the channel.
    - id: position
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new position of the channel in the listing.
    - id: isNsfw
      type: Remora.Rest.Core.Optional{System.Nullable{System.Boolean}}
      description: The new NSFW status of the channel.
    - id: rateLimitPerUser
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new rate limit per user.
    - id: bitrate
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new bitrate.
    - id: userLimit
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new user limit.
    - id: permissionOverwrites
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}}
      description: The new permission overwrites.
    - id: parentID
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}}
      description: The new parent category ID.
    - id: rtcRegion
      type: Remora.Rest.Core.Optional{System.String}
      description: The channel's voice region. Automatic when null.
    - id: videoQualityMode
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}}
      description: The new video quality mode.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannel}}
      description: A modification result which may or may not have succeeded.
    content.vb: Public Overridable Function ModifyGuildVoiceChannelAsync(channelID As Snowflake, name As [Optional](Of String) = Nothing, position As [Optional](Of Integer?) = Nothing, isNsfw As [Optional](Of Boolean?) = Nothing, rateLimitPerUser As [Optional](Of Integer?) = Nothing, bitrate As [Optional](Of Integer?) = Nothing, userLimit As [Optional](Of Integer?) = Nothing, permissionOverwrites As [Optional](Of IReadOnlyList(Of IPartialPermissionOverwrite)) = Nothing, parentID As [Optional](Of Snowflake?) = Nothing, rtcRegion As [Optional](Of String) = Nothing, videoQualityMode As [Optional](Of VideoQualityMode?) = Nothing, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IChannel))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildVoiceChannelAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildVoiceChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.ModifyGuildVoiceChannelAsync(Snowflake, Optional(Of String), Optional(Of Integer?), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of String), Optional(Of VideoQualityMode?), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildVoiceChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Boolean?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite)), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.VideoQualityMode?), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyGuildVoiceChannelAsync(Snowflake, Optional(Of String), Optional(Of Integer?), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of String), Optional(Of VideoQualityMode?), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildStageChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildStageChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: ModifyGuildStageChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: ModifyGuildStageChannelAsync(Snowflake, Optional<string>, Optional<int?>, Optional<bool?>, Optional<int?>, Optional<int?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>?>, Optional<Snowflake?>, Optional<string?>, Optional<VideoQualityMode?>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.ModifyGuildStageChannelAsync(Snowflake, Optional<string>, Optional<int?>, Optional<bool?>, Optional<int?>, Optional<int?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>?>, Optional<Snowflake?>, Optional<string?>, Optional<VideoQualityMode?>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildStageChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<bool?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite>?>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>, Remora.Rest.Core.Optional<string?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.VideoQualityMode?>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ModifyGuildStageChannelAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 288
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Modifies the given guild stage channel.
  example: []
  syntax:
    content: public virtual Task<Result<IChannel>> ModifyGuildStageChannelAsync(Snowflake channelID, Optional<string> name = default, Optional<int?> position = default, Optional<bool?> isNsfw = default, Optional<int?> rateLimitPerUser = default, Optional<int?> bitrate = default, Optional<int?> userLimit = default, Optional<IReadOnlyList<IPartialPermissionOverwrite>?> permissionOverwrites = default, Optional<Snowflake?> parentID = default, Optional<string?> rtcRegion = default, Optional<VideoQualityMode?> videoQualityMode = default, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: name
      type: Remora.Rest.Core.Optional{System.String}
      description: The new name of the channel.
    - id: position
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new position of the channel in the listing.
    - id: isNsfw
      type: Remora.Rest.Core.Optional{System.Nullable{System.Boolean}}
      description: The new NSFW status of the channel.
    - id: rateLimitPerUser
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new rate limit per user.
    - id: bitrate
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new bitrate.
    - id: userLimit
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new user limit.
    - id: permissionOverwrites
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}}
      description: The new permission overwrites.
    - id: parentID
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}}
      description: The new parent category ID.
    - id: rtcRegion
      type: Remora.Rest.Core.Optional{System.String}
      description: The channel's voice region. Automatic when null.
    - id: videoQualityMode
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}}
      description: The new video quality mode.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannel}}
      description: A modification result which may or may not have succeeded.
    content.vb: Public Overridable Function ModifyGuildStageChannelAsync(channelID As Snowflake, name As [Optional](Of String) = Nothing, position As [Optional](Of Integer?) = Nothing, isNsfw As [Optional](Of Boolean?) = Nothing, rateLimitPerUser As [Optional](Of Integer?) = Nothing, bitrate As [Optional](Of Integer?) = Nothing, userLimit As [Optional](Of Integer?) = Nothing, permissionOverwrites As [Optional](Of IReadOnlyList(Of IPartialPermissionOverwrite)) = Nothing, parentID As [Optional](Of Snowflake?) = Nothing, rtcRegion As [Optional](Of String) = Nothing, videoQualityMode As [Optional](Of VideoQualityMode?) = Nothing, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IChannel))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildStageChannelAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildStageChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.ModifyGuildStageChannelAsync(Snowflake, Optional(Of String), Optional(Of Integer?), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of String), Optional(Of VideoQualityMode?), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildStageChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Boolean?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite)), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.VideoQualityMode?), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyGuildStageChannelAsync(Snowflake, Optional(Of String), Optional(Of Integer?), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of String), Optional(Of VideoQualityMode?), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: ModifyGuildAnnouncementChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: ModifyGuildAnnouncementChannelAsync(Snowflake, Optional<string>, Optional<ChannelType>, Optional<int?>, Optional<string?>, Optional<bool?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>?>, Optional<Snowflake?>, Optional<AutoArchiveDuration?>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync(Snowflake, Optional<string>, Optional<ChannelType>, Optional<int?>, Optional<string?>, Optional<bool?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>?>, Optional<Snowflake?>, Optional<AutoArchiveDuration?>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelType>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string?>, Remora.Rest.Core.Optional<bool?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite>?>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ModifyGuildAnnouncementChannelAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 324
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Modifies the given guild announcement channel.
  example: []
  syntax:
    content: public virtual Task<Result<IChannel>> ModifyGuildAnnouncementChannelAsync(Snowflake channelID, Optional<string> name = default, Optional<ChannelType> type = default, Optional<int?> position = default, Optional<string?> topic = default, Optional<bool?> isNsfw = default, Optional<IReadOnlyList<IPartialPermissionOverwrite>?> permissionOverwrites = default, Optional<Snowflake?> parentID = default, Optional<AutoArchiveDuration?> defaultAutoArchiveDuration = default, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: name
      type: Remora.Rest.Core.Optional{System.String}
      description: The new name of the channel.
    - id: type
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType}
      description: >-
        The new type of the channel. Only conversions between <xref href="Remora.Discord.API.Abstractions.Objects.ChannelType.GuildText" data-throw-if-not-resolved="false"></xref> and

        <xref href="Remora.Discord.API.Abstractions.Objects.ChannelType.GuildAnnouncement" data-throw-if-not-resolved="false"></xref> are supported.
    - id: position
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new position of the channel in the listing.
    - id: topic
      type: Remora.Rest.Core.Optional{System.String}
      description: The new topic of the channel.
    - id: isNsfw
      type: Remora.Rest.Core.Optional{System.Nullable{System.Boolean}}
      description: The new NSFW status of the channel.
    - id: permissionOverwrites
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}}
      description: The new permission overwrites.
    - id: parentID
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}}
      description: The new parent category ID.
    - id: defaultAutoArchiveDuration
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}}
      description: The default time of inactivity after which threads in the channel are archived.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannel}}
      description: A modification result which may or may not have succeeded.
    content.vb: Public Overridable Function ModifyGuildAnnouncementChannelAsync(channelID As Snowflake, name As [Optional](Of String) = Nothing, type As [Optional](Of ChannelType) = Nothing, position As [Optional](Of Integer?) = Nothing, topic As [Optional](Of String) = Nothing, isNsfw As [Optional](Of Boolean?) = Nothing, permissionOverwrites As [Optional](Of IReadOnlyList(Of IPartialPermissionOverwrite)) = Nothing, parentID As [Optional](Of Snowflake?) = Nothing, defaultAutoArchiveDuration As [Optional](Of AutoArchiveDuration?) = Nothing, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IChannel))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync(Snowflake, Optional(Of String), Optional(Of ChannelType), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of AutoArchiveDuration?), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelType), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean?), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite)), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyGuildAnnouncementChannelAsync(Snowflake, Optional(Of String), Optional(Of ChannelType), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of AutoArchiveDuration?), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyThreadChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyThreadChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: ModifyThreadChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: ModifyThreadChannelAsync(Snowflake, Optional<string>, Optional<bool>, Optional<AutoArchiveDuration>, Optional<bool>, Optional<bool>, Optional<int?>, Optional<ChannelFlags>, Optional<IReadOnlyList<Snowflake>>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.ModifyThreadChannelAsync(Snowflake, Optional<string>, Optional<bool>, Optional<AutoArchiveDuration>, Optional<bool>, Optional<bool>, Optional<int?>, Optional<ChannelFlags>, Optional<IReadOnlyList<Snowflake>>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyThreadChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelFlags>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ModifyThreadChannelAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 356
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Modifies the given channel.
  example: []
  syntax:
    content: public virtual Task<Result<IChannel>> ModifyThreadChannelAsync(Snowflake channelID, Optional<string> name = default, Optional<bool> isArchived = default, Optional<AutoArchiveDuration> autoArchiveDuration = default, Optional<bool> isLocked = default, Optional<bool> isInvitable = default, Optional<int?> rateLimitPerUser = default, Optional<ChannelFlags> flags = default, Optional<IReadOnlyList<Snowflake>> appliedTags = default, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: name
      type: Remora.Rest.Core.Optional{System.String}
      description: The new name of the channel.
    - id: isArchived
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether the thread is archived.
    - id: autoArchiveDuration
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}
      description: The time of inactivity after which the thread is archived.
    - id: isLocked
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether the thread is locked.
    - id: isInvitable
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether non-moderators can add other non-moderators to the private thread.
    - id: rateLimitPerUser
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new rate limit per user.
    - id: flags
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags}
      description: The channel flags to use.
    - id: appliedTags
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
      description: The tags applied to the thread.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannel}}
      description: A modification result which may or may not have succeeded.
    content.vb: Public Overridable Function ModifyThreadChannelAsync(channelID As Snowflake, name As [Optional](Of String) = Nothing, isArchived As [Optional](Of Boolean) = Nothing, autoArchiveDuration As [Optional](Of AutoArchiveDuration) = Nothing, isLocked As [Optional](Of Boolean) = Nothing, isInvitable As [Optional](Of Boolean) = Nothing, rateLimitPerUser As [Optional](Of Integer?) = Nothing, flags As [Optional](Of ChannelFlags) = Nothing, appliedTags As [Optional](Of IReadOnlyList(Of Snowflake)) = Nothing, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IChannel))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyThreadChannelAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyThreadChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.ModifyThreadChannelAsync(Snowflake, Optional(Of String), Optional(Of Boolean), Optional(Of AutoArchiveDuration), Optional(Of Boolean), Optional(Of Boolean), Optional(Of Integer?), Optional(Of ChannelFlags), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyThreadChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelFlags), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyThreadChannelAsync(Snowflake, Optional(Of String), Optional(Of Boolean), Optional(Of AutoArchiveDuration), Optional(Of Boolean), Optional(Of Boolean), Optional(Of Integer?), Optional(Of ChannelFlags), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyForumChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyForumChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: ModifyForumChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: ModifyForumChannelAsync(Snowflake, Optional<string>, Optional<int?>, Optional<string?>, Optional<bool?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>?>, Optional<Snowflake?>, Optional<AutoArchiveDuration?>, Optional<ChannelFlags>, Optional<IReadOnlyList<IPartialForumTag>>, Optional<IDefaultReaction?>, Optional<int>, Optional<SortOrder>, Optional<ForumLayout>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.ModifyForumChannelAsync(Snowflake, Optional<string>, Optional<int?>, Optional<string?>, Optional<bool?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>?>, Optional<Snowflake?>, Optional<AutoArchiveDuration?>, Optional<ChannelFlags>, Optional<IReadOnlyList<IPartialForumTag>>, Optional<IDefaultReaction?>, Optional<int>, Optional<SortOrder>, Optional<ForumLayout>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyForumChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string?>, Remora.Rest.Core.Optional<bool?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite>?>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelFlags>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialForumTag>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDefaultReaction?>, Remora.Rest.Core.Optional<int>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.SortOrder>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ForumLayout>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ModifyForumChannelAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 388
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Modifies the given forum channel.
  example: []
  syntax:
    content: public Task<Result<IChannel>> ModifyForumChannelAsync(Snowflake channelID, Optional<string> name = default, Optional<int?> position = default, Optional<string?> topic = default, Optional<bool?> isNsfw = default, Optional<int?> rateLimitPerUser = default, Optional<IReadOnlyList<IPartialPermissionOverwrite>?> permissionOverwrites = default, Optional<Snowflake?> parentID = default, Optional<AutoArchiveDuration?> defaultAutoArchiveDuration = default, Optional<ChannelFlags> flags = default, Optional<IReadOnlyList<IPartialForumTag>> availableTags = default, Optional<IDefaultReaction?> defaultReactionEmoji = default, Optional<int> defaultThreadRateLimitPerUser = default, Optional<SortOrder> defaultSortOrder = default, Optional<ForumLayout> defaultForumLayout = default, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: name
      type: Remora.Rest.Core.Optional{System.String}
      description: The new name of the channel.
    - id: position
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new position of the channel in the listing.
    - id: topic
      type: Remora.Rest.Core.Optional{System.String}
      description: The new topic of the channel. Max 1024 characters (4096 for forums).
    - id: isNsfw
      type: Remora.Rest.Core.Optional{System.Nullable{System.Boolean}}
      description: The new NSFW status of the channel.
    - id: rateLimitPerUser
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new rate limit per user.
    - id: permissionOverwrites
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}}
      description: The new permission overwrites.
    - id: parentID
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}}
      description: The new parent category ID.
    - id: defaultAutoArchiveDuration
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}}
      description: The default time of inactivity after which threads in the channel are archived.
    - id: flags
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags}
      description: The new channel flags.
    - id: availableTags
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}}
      description: The set of tags that can be used in a forum channel. Only "name" is required to be set.
    - id: defaultReactionEmoji
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction}
      description: The emoji to show in the add reaction button on threads in a forum.
    - id: defaultThreadRateLimitPerUser
      type: Remora.Rest.Core.Optional{System.Int32}
      description: The initial <xref href="Remora.Discord.API.Abstractions.Objects.IChannel.RateLimitPerUser" data-throw-if-not-resolved="false"></xref> to set on new threads in a forum channel.
    - id: defaultSortOrder
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder}
      description: The default sort order of posts.
    - id: defaultForumLayout
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout}
      description: The default layout of posts in a forum.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannel}}
      description: A modification result which may or may not have succeeded.
    content.vb: Public Function ModifyForumChannelAsync(channelID As Snowflake, name As [Optional](Of String) = Nothing, position As [Optional](Of Integer?) = Nothing, topic As [Optional](Of String) = Nothing, isNsfw As [Optional](Of Boolean?) = Nothing, rateLimitPerUser As [Optional](Of Integer?) = Nothing, permissionOverwrites As [Optional](Of IReadOnlyList(Of IPartialPermissionOverwrite)) = Nothing, parentID As [Optional](Of Snowflake?) = Nothing, defaultAutoArchiveDuration As [Optional](Of AutoArchiveDuration?) = Nothing, flags As [Optional](Of ChannelFlags) = Nothing, availableTags As [Optional](Of IReadOnlyList(Of IPartialForumTag)) = Nothing, defaultReactionEmoji As [Optional](Of IDefaultReaction) = Nothing, defaultThreadRateLimitPerUser As [Optional](Of Integer) = Nothing, defaultSortOrder As [Optional](Of SortOrder) = Nothing, defaultForumLayout As [Optional](Of ForumLayout) = Nothing, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IChannel))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyForumChannelAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyForumChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.ModifyForumChannelAsync(Snowflake, Optional(Of String), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of AutoArchiveDuration?), Optional(Of ChannelFlags), Optional(Of IReadOnlyList(Of IPartialForumTag)), Optional(Of IDefaultReaction), Optional(Of Integer), Optional(Of SortOrder), Optional(Of ForumLayout), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyForumChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite)), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelFlags), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialForumTag)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDefaultReaction), Remora.Rest.Core.Optional(Of Integer), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.SortOrder), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ForumLayout), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyForumChannelAsync(Snowflake, Optional(Of String), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of AutoArchiveDuration?), Optional(Of ChannelFlags), Optional(Of IReadOnlyList(Of IPartialForumTag)), Optional(Of IDefaultReaction), Optional(Of Integer), Optional(Of SortOrder), Optional(Of ForumLayout), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyMediaChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyMediaChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: ModifyMediaChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: ModifyMediaChannelAsync(Snowflake, Optional<string>, Optional<int?>, Optional<string?>, Optional<bool?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>?>, Optional<Snowflake?>, Optional<AutoArchiveDuration?>, Optional<ChannelFlags>, Optional<IReadOnlyList<IPartialForumTag>>, Optional<IDefaultReaction?>, Optional<int>, Optional<SortOrder>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.ModifyMediaChannelAsync(Snowflake, Optional<string>, Optional<int?>, Optional<string?>, Optional<bool?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>?>, Optional<Snowflake?>, Optional<AutoArchiveDuration?>, Optional<ChannelFlags>, Optional<IReadOnlyList<IPartialForumTag>>, Optional<IDefaultReaction?>, Optional<int>, Optional<SortOrder>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyMediaChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string?>, Remora.Rest.Core.Optional<bool?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite>?>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelFlags>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialForumTag>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDefaultReaction?>, Remora.Rest.Core.Optional<int>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.SortOrder>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ModifyMediaChannelAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 432
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Modifies the given media channel.
  example: []
  syntax:
    content: public Task<Result<IChannel>> ModifyMediaChannelAsync(Snowflake channelID, Optional<string> name = default, Optional<int?> position = default, Optional<string?> topic = default, Optional<bool?> isNsfw = default, Optional<int?> rateLimitPerUser = default, Optional<IReadOnlyList<IPartialPermissionOverwrite>?> permissionOverwrites = default, Optional<Snowflake?> parentID = default, Optional<AutoArchiveDuration?> defaultAutoArchiveDuration = default, Optional<ChannelFlags> flags = default, Optional<IReadOnlyList<IPartialForumTag>> availableTags = default, Optional<IDefaultReaction?> defaultReactionEmoji = default, Optional<int> defaultThreadRateLimitPerUser = default, Optional<SortOrder> defaultSortOrder = default, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: name
      type: Remora.Rest.Core.Optional{System.String}
      description: The new name of the channel.
    - id: position
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new position of the channel in the listing.
    - id: topic
      type: Remora.Rest.Core.Optional{System.String}
      description: The new topic of the channel. Max 1024 characters (4096 for forums).
    - id: isNsfw
      type: Remora.Rest.Core.Optional{System.Nullable{System.Boolean}}
      description: The new NSFW status of the channel.
    - id: rateLimitPerUser
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The new rate limit per user.
    - id: permissionOverwrites
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}}
      description: The new permission overwrites.
    - id: parentID
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}}
      description: The new parent category ID.
    - id: defaultAutoArchiveDuration
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}}
      description: The default time of inactivity after which threads in the channel are archived.
    - id: flags
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags}
      description: The new channel flags.
    - id: availableTags
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}}
      description: The set of tags that can be used in a forum channel. Only "name" is required to be set.
    - id: defaultReactionEmoji
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction}
      description: The emoji to show in the add reaction button on threads in a forum.
    - id: defaultThreadRateLimitPerUser
      type: Remora.Rest.Core.Optional{System.Int32}
      description: The initial <xref href="Remora.Discord.API.Abstractions.Objects.IChannel.RateLimitPerUser" data-throw-if-not-resolved="false"></xref> to set on new threads in a forum channel.
    - id: defaultSortOrder
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder}
      description: The default sort order of posts.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannel}}
      description: A modification result which may or may not have succeeded.
    content.vb: Public Function ModifyMediaChannelAsync(channelID As Snowflake, name As [Optional](Of String) = Nothing, position As [Optional](Of Integer?) = Nothing, topic As [Optional](Of String) = Nothing, isNsfw As [Optional](Of Boolean?) = Nothing, rateLimitPerUser As [Optional](Of Integer?) = Nothing, permissionOverwrites As [Optional](Of IReadOnlyList(Of IPartialPermissionOverwrite)) = Nothing, parentID As [Optional](Of Snowflake?) = Nothing, defaultAutoArchiveDuration As [Optional](Of AutoArchiveDuration?) = Nothing, flags As [Optional](Of ChannelFlags) = Nothing, availableTags As [Optional](Of IReadOnlyList(Of IPartialForumTag)) = Nothing, defaultReactionEmoji As [Optional](Of IDefaultReaction) = Nothing, defaultThreadRateLimitPerUser As [Optional](Of Integer) = Nothing, defaultSortOrder As [Optional](Of SortOrder) = Nothing, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IChannel))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyMediaChannelAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyMediaChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.ModifyMediaChannelAsync(Snowflake, Optional(Of String), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of AutoArchiveDuration?), Optional(Of ChannelFlags), Optional(Of IReadOnlyList(Of IPartialForumTag)), Optional(Of IDefaultReaction), Optional(Of Integer), Optional(Of SortOrder), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyMediaChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite)), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelFlags), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialForumTag)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDefaultReaction), Remora.Rest.Core.Optional(Of Integer), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.SortOrder), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyMediaChannelAsync(Snowflake, Optional(Of String), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of AutoArchiveDuration?), Optional(Of ChannelFlags), Optional(Of IReadOnlyList(Of IPartialForumTag)), Optional(Of IDefaultReaction), Optional(Of Integer), Optional(Of SortOrder), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: DeleteChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: DeleteChannelAsync(Snowflake, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.DeleteChannelAsync(Snowflake, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteChannelAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 474
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Deletes a channel by its ID.
  example: []
  syntax:
    content: public virtual Task<Result> DeleteChannelAsync(Snowflake channelID, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function DeleteChannelAsync(channelID As Snowflake, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteChannelAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.DeleteChannelAsync(Snowflake, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: DeleteChannelAsync(Snowflake, Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelMessagesAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelMessagesAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  id: GetChannelMessagesAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: GetChannelMessagesAsync(Snowflake, Optional<Snowflake>, Optional<Snowflake>, Optional<Snowflake>, Optional<int>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.GetChannelMessagesAsync(Snowflake, Optional<Snowflake>, Optional<Snowflake>, Optional<Snowflake>, Optional<int>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelMessagesAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<int>, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetChannelMessagesAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 490
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets the messages for a channel.
  example: []
  syntax:
    content: public virtual Task<Result<IReadOnlyList<IMessage>>> GetChannelMessagesAsync(Snowflake channelID, Optional<Snowflake> around = default, Optional<Snowflake> before = default, Optional<Snowflake> after = default, Optional<int> limit = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: around
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: >-
        The ID of the message to get messages around. This is a mutually exclusive option with <code class="paramref">before</code>

        and <code class="paramref">after</code>.
    - id: before
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: >-
        The ID of the message to get messages before. This is a mutually exclusive option with <code class="paramref">around</code>

        and <code class="paramref">after</code>.
    - id: after
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: >-
        The ID of the message to get messages after. This is a mutually exclusive option with <code class="paramref">before</code>

        and <code class="paramref">around</code>.
    - id: limit
      type: Remora.Rest.Core.Optional{System.Int32}
      description: The maximum number of messages to retrieve. Ranges between 1 and 100.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessage}}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function GetChannelMessagesAsync(channelID As Snowflake, around As [Optional](Of Snowflake) = Nothing, before As [Optional](Of Snowflake) = Nothing, after As [Optional](Of Snowflake) = Nothing, limit As [Optional](Of Integer) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of IMessage)))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelMessagesAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelMessagesAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.GetChannelMessagesAsync(Snowflake, Optional(Of Snowflake), Optional(Of Snowflake), Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelMessagesAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Integer), System.Threading.CancellationToken)
  name.vb: GetChannelMessagesAsync(Snowflake, Optional(Of Snowflake), Optional(Of Snowflake), Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: GetChannelMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: GetChannelMessageAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: DiscordRestChannelAPI.GetChannelMessageAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetChannelMessageAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 553
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets a message from a channel by its ID.
  example: []
  syntax:
    content: public virtual Task<Result<IMessage>> GetChannelMessageAsync(Snowflake channelID, Snowflake messageID, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The channel ID.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The message ID.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function GetChannelMessageAsync(channelID As Snowflake, messageID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IMessage))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelMessageAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IMessageReference},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IMessageReference},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
  id: CreateMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IMessageReference},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: CreateMessageAsync(Snowflake, Optional<string>, Optional<string>, Optional<bool>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<IMessageReference>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<Snowflake>>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>, Optional<MessageFlags>, Optional<bool>, Optional<IPollCreateRequest>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.CreateMessageAsync(Snowflake, Optional<string>, Optional<string>, Optional<bool>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<IMessageReference>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<Snowflake>>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>, Optional<MessageFlags>, Optional<bool>, Optional<IPollCreateRequest>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmbed>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IAllowedMentions>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IMessageReference>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessageComponent>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<OneOf.OneOf<Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment>>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.MessageFlags>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IPollCreateRequest>, System.Threading.CancellationToken)
  type: Method
  source:
    id: CreateMessageAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 569
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: >-
    Posts a message to the given channel.

    <remarks>

    At least one of <code class="paramref">content</code>, <code class="paramref">embeds</code>, <code class="paramref">stickerIDs</code>,

    <code class="paramref">components</code> or <code class="paramref">attachments</code> must be present.

    Any streams passed to this method will be disposed of at the end of the call. If you want to reuse the streams

    afterwards, ensure that what you pass is a copy that the method can take ownership of.

    </remarks>
  example: []
  syntax:
    content: public virtual Task<Result<IMessage>> CreateMessageAsync(Snowflake channelID, Optional<string> content = default, Optional<string> nonce = default, Optional<bool> isTTS = default, Optional<IReadOnlyList<IEmbed>> embeds = default, Optional<IAllowedMentions> allowedMentions = default, Optional<IMessageReference> messageReference = default, Optional<IReadOnlyList<IMessageComponent>> components = default, Optional<IReadOnlyList<Snowflake>> stickerIDs = default, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>> attachments = default, Optional<MessageFlags> flags = default, Optional<bool> enforceNonce = default, Optional<IPollCreateRequest> poll = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: content
      type: Remora.Rest.Core.Optional{System.String}
      description: The content of the message.
    - id: nonce
      type: Remora.Rest.Core.Optional{System.String}
      description: A nonce that can be used for optimistic message sending.
    - id: isTTS
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether the message is a TTS message.
    - id: embeds
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}}
      description: The rich embeds in the message.
    - id: allowedMentions
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions}
      description: An object describing the allowed mention types.
    - id: messageReference
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IMessageReference}
      description: A reference to another message.
    - id: components
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}}
      description: The components of the message.
    - id: stickerIDs
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
      description: The stickers to send with the message (max 3).
    - id: attachments
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}}
      description: >-
        The attachments to associate with the response. Each file may be a new file in the form of

        <xref href="Remora.Discord.API.Abstractions.Rest.FileData" data-throw-if-not-resolved="false"></xref>, or an existing one that should be retained in the form of a

        <xref href="Remora.Discord.API.Abstractions.Objects.IPartialAttachment" data-throw-if-not-resolved="false"></xref>. If this request edits the original message, then any attachments not

        mentioned in this parameter will be deleted.
    - id: flags
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags}
      description: The message flags.
    - id: enforceNonce
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Indicates whether messages should be deduplicated using the passed nonce.
    - id: poll
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest}
      description: The poll of the message.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
      description: A creation result which may or may not have succeeded.
    content.vb: Public Overridable Function CreateMessageAsync(channelID As Snowflake, content As [Optional](Of String) = Nothing, nonce As [Optional](Of String) = Nothing, isTTS As [Optional](Of Boolean) = Nothing, embeds As [Optional](Of IReadOnlyList(Of IEmbed)) = Nothing, allowedMentions As [Optional](Of IAllowedMentions) = Nothing, messageReference As [Optional](Of IMessageReference) = Nothing, components As [Optional](Of IReadOnlyList(Of IMessageComponent)) = Nothing, stickerIDs As [Optional](Of IReadOnlyList(Of Snowflake)) = Nothing, attachments As [Optional](Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))) = Nothing, flags As [Optional](Of MessageFlags) = Nothing, enforceNonce As [Optional](Of Boolean) = Nothing, poll As [Optional](Of IPollCreateRequest) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IMessage))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateMessageAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IMessageReference},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.CreateMessageAsync(Snowflake, Optional(Of String), Optional(Of String), Optional(Of Boolean), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IMessageReference), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), Optional(Of MessageFlags), Optional(Of Boolean), Optional(Of IPollCreateRequest), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmbed)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IAllowedMentions), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IMessageReference), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessageComponent)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of OneOf.OneOf(Of Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment))), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.MessageFlags), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IPollCreateRequest), System.Threading.CancellationToken)
  name.vb: CreateMessageAsync(Snowflake, Optional(Of String), Optional(Of String), Optional(Of Boolean), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IMessageReference), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), Optional(Of MessageFlags), Optional(Of Boolean), Optional(Of IPollCreateRequest), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.CrosspostMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.CrosspostMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: CrosspostMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: CrosspostMessageAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: DiscordRestChannelAPI.CrosspostMessageAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.CrosspostMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: CrosspostMessageAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 665
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: >-
    Crosspost a message otherwise known as "publishing" a message from a announcement channel that other guilds can

    follow.
  example: []
  syntax:
    content: public virtual Task<Result<IMessage>> CrosspostMessageAsync(Snowflake channelID, Snowflake messageID, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
      description: A result which may or may not have succeeded.
    content.vb: Public Overridable Function CrosspostMessageAsync(channelID As Snowflake, messageID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IMessage))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.CrosspostMessageAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CrosspostMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  id: CreateReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: CreateReactionAsync(Snowflake, Snowflake, string, CancellationToken)
  nameWithType: DiscordRestChannelAPI.CreateReactionAsync(Snowflake, Snowflake, string, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateReactionAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, string, System.Threading.CancellationToken)
  type: Method
  source:
    id: CreateReactionAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 681
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Adds a reaction to the given message.
  example: []
  syntax:
    content: public virtual Task<Result> CreateReactionAsync(Snowflake channelID, Snowflake messageID, string emoji, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel the message is in.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: emoji
      type: System.String
      description: The emoji to react with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A creation result which may or may not have succeeded.
    content.vb: Public Overridable Function CreateReactionAsync(channelID As Snowflake, messageID As Snowflake, emoji As String, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateReactionAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.CreateReactionAsync(Snowflake, Snowflake, String, CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateReactionAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, String, System.Threading.CancellationToken)
  name.vb: CreateReactionAsync(Snowflake, Snowflake, String, CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteOwnReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteOwnReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  id: DeleteOwnReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: DeleteOwnReactionAsync(Snowflake, Snowflake, string, CancellationToken)
  nameWithType: DiscordRestChannelAPI.DeleteOwnReactionAsync(Snowflake, Snowflake, string, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteOwnReactionAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, string, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteOwnReactionAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 698
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Deletes a reaction from the given message.
  example: []
  syntax:
    content: public virtual Task<Result> DeleteOwnReactionAsync(Snowflake channelID, Snowflake messageID, string emoji, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel the message is in.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: emoji
      type: System.String
      description: The emoji to remove.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A deletion result which may or may not have succeeded.
    content.vb: Public Overridable Function DeleteOwnReactionAsync(channelID As Snowflake, messageID As Snowflake, emoji As String, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteOwnReactionAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteOwnReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.DeleteOwnReactionAsync(Snowflake, Snowflake, String, CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteOwnReactionAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, String, System.Threading.CancellationToken)
  name.vb: DeleteOwnReactionAsync(Snowflake, Snowflake, String, CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteUserReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteUserReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: DeleteUserReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: DeleteUserReactionAsync(Snowflake, Snowflake, string, Snowflake, CancellationToken)
  nameWithType: DiscordRestChannelAPI.DeleteUserReactionAsync(Snowflake, Snowflake, string, Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteUserReactionAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteUserReactionAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 715
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Deletes a reaction from the given message.
  example: []
  syntax:
    content: public virtual Task<Result> DeleteUserReactionAsync(Snowflake channelID, Snowflake messageID, string emoji, Snowflake user, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel the message is in.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: emoji
      type: System.String
      description: The emoji to remove.
    - id: user
      type: Remora.Rest.Core.Snowflake
      description: The user that has reacted with the emoji.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A deletion result which may or may not have succeeded.
    content.vb: Public Overridable Function DeleteUserReactionAsync(channelID As Snowflake, messageID As Snowflake, emoji As String, user As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteUserReactionAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteUserReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.DeleteUserReactionAsync(Snowflake, Snowflake, String, Snowflake, CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteUserReactionAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  name.vb: DeleteUserReactionAsync(Snowflake, Snowflake, String, Snowflake, CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetReactionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.GetReactionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  id: GetReactionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: GetReactionsAsync(Snowflake, Snowflake, string, Optional<Snowflake>, Optional<int>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.GetReactionsAsync(Snowflake, Snowflake, string, Optional<Snowflake>, Optional<int>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetReactionsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<int>, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetReactionsAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 733
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets a list of users that have reacted with the given emoji.
  example: []
  syntax:
    content: public virtual Task<Result<IReadOnlyList<IUser>>> GetReactionsAsync(Snowflake channelID, Snowflake messageID, string emoji, Optional<Snowflake> after = default, Optional<int> limit = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel the message is in.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: emoji
      type: System.String
      description: The emoji to filter on.
    - id: after
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: The users to get after this user ID.
    - id: limit
      type: Remora.Rest.Core.Optional{System.Int32}
      description: The maximum page size.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IUser}}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function GetReactionsAsync(channelID As Snowflake, messageID As Snowflake, emoji As String, after As [Optional](Of Snowflake) = Nothing, limit As [Optional](Of Integer) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of IUser)))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetReactionsAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetReactionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.GetReactionsAsync(Snowflake, Snowflake, String, Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetReactionsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Integer), System.Threading.CancellationToken)
  name.vb: GetReactionsAsync(Snowflake, Snowflake, String, Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteAllReactionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteAllReactionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: DeleteAllReactionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: DeleteAllReactionsAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: DiscordRestChannelAPI.DeleteAllReactionsAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteAllReactionsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteAllReactionsAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 770
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Deletes all reactions from the given message.
  example: []
  syntax:
    content: public virtual Task<Result> DeleteAllReactionsAsync(Snowflake channelID, Snowflake messageID, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel the message is in.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A deletion result which may or may not have succeeded.
    content.vb: Public Overridable Function DeleteAllReactionsAsync(channelID As Snowflake, messageID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteAllReactionsAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteAllReactionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  id: DeleteAllReactionsForEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: DeleteAllReactionsForEmojiAsync(Snowflake, Snowflake, string, CancellationToken)
  nameWithType: DiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync(Snowflake, Snowflake, string, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, string, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteAllReactionsForEmojiAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 786
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Deletes all reactions from the given message.
  example: []
  syntax:
    content: public virtual Task<Result> DeleteAllReactionsForEmojiAsync(Snowflake channelID, Snowflake messageID, string emoji, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel the message is in.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: emoji
      type: System.String
      description: The emoji to delete.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A deletion result which may or may not have succeeded.
    content.vb: Public Overridable Function DeleteAllReactionsForEmojiAsync(channelID As Snowflake, messageID As Snowflake, emoji As String, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync(Snowflake, Snowflake, String, CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, String, System.Threading.CancellationToken)
  name.vb: DeleteAllReactionsForEmojiAsync(Snowflake, Snowflake, String, CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.EditMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.MessageFlags}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.EditMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.MessageFlags}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  id: EditMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.MessageFlags}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: EditMessageAsync(Snowflake, Snowflake, Optional<string?>, Optional<IReadOnlyList<IEmbed>?>, Optional<MessageFlags?>, Optional<IAllowedMentions?>, Optional<IReadOnlyList<IMessageComponent>?>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>?>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.EditMessageAsync(Snowflake, Snowflake, Optional<string?>, Optional<IReadOnlyList<IEmbed>?>, Optional<MessageFlags?>, Optional<IAllowedMentions?>, Optional<IReadOnlyList<IMessageComponent>?>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>?>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.EditMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmbed>?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.MessageFlags?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IAllowedMentions?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessageComponent>?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<OneOf.OneOf<Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment>>?>, System.Threading.CancellationToken)
  type: Method
  source:
    id: EditMessageAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 803
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Edits a previously sent message.
  remarks: >-
    At least one of <code class="paramref">content</code>, <code class="paramref">embeds</code>, <code class="paramref">components</code> or

    <code class="paramref">attachments</code> must be present.

    Any streams passed to this method will be disposed of at the end of the call. If you want to reuse the streams

    afterwards, ensure that what you pass is a copy that the method can take ownership of.
  example: []
  syntax:
    content: public virtual Task<Result<IMessage>> EditMessageAsync(Snowflake channelID, Snowflake messageID, Optional<string?> content = default, Optional<IReadOnlyList<IEmbed>?> embeds = default, Optional<MessageFlags?> flags = default, Optional<IAllowedMentions?> allowedMentions = default, Optional<IReadOnlyList<IMessageComponent>?> components = default, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>?> attachments = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel the message is in.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: content
      type: Remora.Rest.Core.Optional{System.String}
      description: The new content of the message.
    - id: embeds
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}}
      description: The new embeds associated with the message.
    - id: flags
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.MessageFlags}}
      description: The new message flags.
    - id: allowedMentions
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions}
      description: The allowed mentions for the message.
    - id: components
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}}
      description: The components of the message.
    - id: attachments
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}}
      description: >-
        The attachments to associate with the response. Each file may be a new file in the form of

        <xref href="Remora.Discord.API.Abstractions.Rest.FileData" data-throw-if-not-resolved="false"></xref>, or an existing one that should be retained in the form of a

        <xref href="Remora.Discord.API.Abstractions.Objects.IPartialAttachment" data-throw-if-not-resolved="false"></xref>. If this request edits the original message, then any attachments not

        mentioned in this parameter will be deleted.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
      description: A modification result which may or may not have succeeded.
    content.vb: Public Overridable Function EditMessageAsync(channelID As Snowflake, messageID As Snowflake, content As [Optional](Of String) = Nothing, embeds As [Optional](Of IReadOnlyList(Of IEmbed)) = Nothing, flags As [Optional](Of MessageFlags?) = Nothing, allowedMentions As [Optional](Of IAllowedMentions) = Nothing, components As [Optional](Of IReadOnlyList(Of IMessageComponent)) = Nothing, attachments As [Optional](Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IMessage))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.EditMessageAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.EditMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.MessageFlags}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.EditMessageAsync(Snowflake, Snowflake, Optional(Of String), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of MessageFlags?), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.EditMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmbed)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.MessageFlags?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IAllowedMentions), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessageComponent)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of OneOf.OneOf(Of Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment))), System.Threading.CancellationToken)
  name.vb: EditMessageAsync(Snowflake, Snowflake, Optional(Of String), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of MessageFlags?), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: DeleteMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: DeleteMessageAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.DeleteMessageAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteMessageAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 891
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Deletes the given message.
  example: []
  syntax:
    content: public virtual Task<Result> DeleteMessageAsync(Snowflake channelID, Snowflake messageID, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel the message is in.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A deletion result which may or may not have succeeded.
    content.vb: Public Overridable Function DeleteMessageAsync(channelID As Snowflake, messageID As Snowflake, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteMessageAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.DeleteMessageAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: DeleteMessageAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.BulkDeleteMessagesAsync(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.BulkDeleteMessagesAsync(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: BulkDeleteMessagesAsync(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: BulkDeleteMessagesAsync(Snowflake, IReadOnlyList<Snowflake>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.BulkDeleteMessagesAsync(Snowflake, IReadOnlyList<Snowflake>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.BulkDeleteMessagesAsync(Remora.Rest.Core.Snowflake, System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: BulkDeleteMessagesAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 908
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Bulk deletes a set of messages.
  example: []
  syntax:
    content: public virtual Task<Result> BulkDeleteMessagesAsync(Snowflake channelID, IReadOnlyList<Snowflake> messageIDs, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel to delete messages in.
    - id: messageIDs
      type: System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}
      description: >-
        The IDs of the messages to delete. Messages older than 2 weeks may not be deleted in this manner. Any

        invalid message IDs will count towards the minimum and maximum number of messages to deleted (currently 2

        and 100, respectively).
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A deletion result which may or may not have succeeded.
    content.vb: Public Overridable Function BulkDeleteMessagesAsync(channelID As Snowflake, messageIDs As IReadOnlyList(Of Snowflake), reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.BulkDeleteMessagesAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.BulkDeleteMessagesAsync(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.BulkDeleteMessagesAsync(Snowflake, IReadOnlyList(Of Snowflake), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.BulkDeleteMessagesAsync(Remora.Rest.Core.Snowflake, System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: BulkDeleteMessagesAsync(Snowflake, IReadOnlyList(Of Snowflake), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.EditChannelPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.EditChannelPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: EditChannelPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: EditChannelPermissionsAsync(Snowflake, Snowflake, Optional<IDiscordPermissionSet?>, Optional<IDiscordPermissionSet?>, Optional<PermissionOverwriteType>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.EditChannelPermissionsAsync(Snowflake, Snowflake, Optional<IDiscordPermissionSet?>, Optional<IDiscordPermissionSet?>, Optional<PermissionOverwriteType>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.EditChannelPermissionsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: EditChannelPermissionsAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 944
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Edits a permission overwrite on the given channel.
  example: []
  syntax:
    content: public virtual Task<Result> EditChannelPermissionsAsync(Snowflake channelID, Snowflake overwriteID, Optional<IDiscordPermissionSet?> allow = default, Optional<IDiscordPermissionSet?> deny = default, Optional<PermissionOverwriteType> type = default, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: overwriteID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the overwrite.
    - id: allow
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}
      description: The permissions to allow.
    - id: deny
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}
      description: The permissions to deny.
    - id: type
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType}
      description: The new type of the overwrite.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A modification result which may or may not have succeeded.
    content.vb: Public Overridable Function EditChannelPermissionsAsync(channelID As Snowflake, overwriteID As Snowflake, allow As [Optional](Of IDiscordPermissionSet) = Nothing, deny As [Optional](Of IDiscordPermissionSet) = Nothing, type As [Optional](Of PermissionOverwriteType) = Nothing, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.EditChannelPermissionsAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.EditChannelPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.EditChannelPermissionsAsync(Snowflake, Snowflake, Optional(Of IDiscordPermissionSet), Optional(Of IDiscordPermissionSet), Optional(Of PermissionOverwriteType), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.EditChannelPermissionsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: EditChannelPermissionsAsync(Snowflake, Snowflake, Optional(Of IDiscordPermissionSet), Optional(Of IDiscordPermissionSet), Optional(Of PermissionOverwriteType), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelInvitesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelInvitesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: GetChannelInvitesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: GetChannelInvitesAsync(Snowflake, CancellationToken)
  nameWithType: DiscordRestChannelAPI.GetChannelInvitesAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelInvitesAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetChannelInvitesAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 975
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets the invites for a given channel.
  example: []
  syntax:
    content: public virtual Task<Result<IReadOnlyList<IInvite>>> GetChannelInvitesAsync(Snowflake channelID, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IInvite}}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function GetChannelInvitesAsync(channelID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of IInvite)))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelInvitesAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelInvitesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateChannelInviteAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.TimeSpan},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.InviteTarget},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateChannelInviteAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.TimeSpan},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.InviteTarget},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: CreateChannelInviteAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.TimeSpan},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.InviteTarget},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: CreateChannelInviteAsync(Snowflake, Optional<TimeSpan>, Optional<int>, Optional<bool>, Optional<bool>, Optional<InviteTarget>, Optional<Snowflake>, Optional<Snowflake>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.CreateChannelInviteAsync(Snowflake, Optional<TimeSpan>, Optional<int>, Optional<bool>, Optional<bool>, Optional<InviteTarget>, Optional<Snowflake>, Optional<Snowflake>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateChannelInviteAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<System.TimeSpan>, Remora.Rest.Core.Optional<int>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.InviteTarget>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: CreateChannelInviteAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 990
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Creates an invite to the given channel.
  example: []
  syntax:
    content: public virtual Task<Result<IInvite>> CreateChannelInviteAsync(Snowflake channelID, Optional<TimeSpan> maxAge = default, Optional<int> maxUses = default, Optional<bool> isTemporary = default, Optional<bool> isUnique = default, Optional<InviteTarget> targetType = default, Optional<Snowflake> targetUserID = default, Optional<Snowflake> targetApplicationID = default, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: maxAge
      type: Remora.Rest.Core.Optional{System.TimeSpan}
      description: The duration of the invite before expiry, or 0 for never.
    - id: maxUses
      type: Remora.Rest.Core.Optional{System.Int32}
      description: The max number of uses, or 0 for unlimited.
    - id: isTemporary
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether this invite grants temporary membership.
    - id: isUnique
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: If true, don't try to reuse an existing invite with the same settings.
    - id: targetType
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.InviteTarget}
      description: The target type for this invite.
    - id: targetUserID
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: The target user ID for this invite.
    - id: targetApplicationID
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: >-
        The ID of the application to open for this invite. Required if <code class="paramref">targetType</code> is

        <xref href="Remora.Discord.API.Abstractions.Objects.InviteTarget.EmbeddedApplication" data-throw-if-not-resolved="false"></xref>.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IInvite}}
      description: A creation result which may or may not have succeeded.
    content.vb: Public Overridable Function CreateChannelInviteAsync(channelID As Snowflake, maxAge As [Optional](Of TimeSpan) = Nothing, maxUses As [Optional](Of Integer) = Nothing, isTemporary As [Optional](Of Boolean) = Nothing, isUnique As [Optional](Of Boolean) = Nothing, targetType As [Optional](Of InviteTarget) = Nothing, targetUserID As [Optional](Of Snowflake) = Nothing, targetApplicationID As [Optional](Of Snowflake) = Nothing, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IInvite))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateChannelInviteAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateChannelInviteAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.TimeSpan},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.InviteTarget},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.CreateChannelInviteAsync(Snowflake, Optional(Of TimeSpan), Optional(Of Integer), Optional(Of Boolean), Optional(Of Boolean), Optional(Of InviteTarget), Optional(Of Snowflake), Optional(Of Snowflake), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateChannelInviteAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of System.TimeSpan), Remora.Rest.Core.Optional(Of Integer), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.InviteTarget), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: CreateChannelInviteAsync(Snowflake, Optional(Of TimeSpan), Optional(Of Integer), Optional(Of Boolean), Optional(Of Boolean), Optional(Of InviteTarget), Optional(Of Snowflake), Optional(Of Snowflake), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteChannelPermissionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteChannelPermissionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: DeleteChannelPermissionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: DeleteChannelPermissionAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.DeleteChannelPermissionAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteChannelPermissionAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteChannelPermissionAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1050
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Deletes the given permission overwrite from the given channel.
  example: []
  syntax:
    content: public virtual Task<Result> DeleteChannelPermissionAsync(Snowflake channelID, Snowflake overwriteID, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: overwriteID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the permission overwrite.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A deletion result which may or may not have succeeded.
    content.vb: Public Overridable Function DeleteChannelPermissionAsync(channelID As Snowflake, overwriteID As Snowflake, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteChannelPermissionAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteChannelPermissionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.DeleteChannelPermissionAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteChannelPermissionAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: DeleteChannelPermissionAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.FollowAnnouncementChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.FollowAnnouncementChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: FollowAnnouncementChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: FollowAnnouncementChannelAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: DiscordRestChannelAPI.FollowAnnouncementChannelAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.FollowAnnouncementChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: FollowAnnouncementChannelAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1067
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Follows a announcement channel to send messages to a target channel.
  example: []
  syntax:
    content: public virtual Task<Result<IFollowedChannel>> FollowAnnouncementChannelAsync(Snowflake channelID, Snowflake webhookChannelID, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the announcement channel.
    - id: webhookChannelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel to send announcement to.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IFollowedChannel}}
      description: A creation result which may or may not have succeeded.
    content.vb: Public Overridable Function FollowAnnouncementChannelAsync(channelID As Snowflake, webhookChannelID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IFollowedChannel))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.FollowAnnouncementChannelAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.FollowAnnouncementChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.TriggerTypingIndicatorAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.TriggerTypingIndicatorAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: TriggerTypingIndicatorAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: TriggerTypingIndicatorAsync(Snowflake, CancellationToken)
  nameWithType: DiscordRestChannelAPI.TriggerTypingIndicatorAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.TriggerTypingIndicatorAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: TriggerTypingIndicatorAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1090
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Triggers the typing indicator for the current user in the given channel.
  example: []
  syntax:
    content: public virtual Task<Result> TriggerTypingIndicatorAsync(Snowflake channelID, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A result which may or may not have succeeded.
    content.vb: Public Overridable Function TriggerTypingIndicatorAsync(channelID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.TriggerTypingIndicatorAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.TriggerTypingIndicatorAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetPinnedMessagesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.GetPinnedMessagesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: GetPinnedMessagesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: GetPinnedMessagesAsync(Snowflake, CancellationToken)
  nameWithType: DiscordRestChannelAPI.GetPinnedMessagesAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetPinnedMessagesAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetPinnedMessagesAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1105
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets the pinned messages in the given channel.
  example: []
  syntax:
    content: public virtual Task<Result<IReadOnlyList<IMessage>>> GetPinnedMessagesAsync(Snowflake channelID, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessage}}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function GetPinnedMessagesAsync(channelID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of IMessage)))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetPinnedMessagesAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetPinnedMessagesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.PinMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.PinMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: PinMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: PinMessageAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.PinMessageAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.PinMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: PinMessageAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1120
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Pins the given message in the channel.
  example: []
  syntax:
    content: public virtual Task<Result> PinMessageAsync(Snowflake channelID, Snowflake messageID, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A result which may or may not have succeeded.
    content.vb: Public Overridable Function PinMessageAsync(channelID As Snowflake, messageID As Snowflake, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.PinMessageAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.PinMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.PinMessageAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.PinMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: PinMessageAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.UnpinMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.UnpinMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: UnpinMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: UnpinMessageAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.UnpinMessageAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.UnpinMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: UnpinMessageAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1137
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Unpins the given message in the channel.
  example: []
  syntax:
    content: public virtual Task<Result> UnpinMessageAsync(Snowflake channelID, Snowflake messageID, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A result which may or may not have succeeded.
    content.vb: Public Overridable Function UnpinMessageAsync(channelID As Snowflake, messageID As Snowflake, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.UnpinMessageAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.UnpinMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.UnpinMessageAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.UnpinMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: UnpinMessageAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.GroupDMAddRecipientAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.GroupDMAddRecipientAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: GroupDMAddRecipientAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: GroupDMAddRecipientAsync(Snowflake, Snowflake, string, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.GroupDMAddRecipientAsync(Snowflake, Snowflake, string, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.GroupDMAddRecipientAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: GroupDMAddRecipientAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1154
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Adds a recipient to a group DM using their access token.
  example: []
  syntax:
    content: public virtual Task<Result> GroupDMAddRecipientAsync(Snowflake channelID, Snowflake userID, string accessToken, Optional<string> nickname = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: userID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the user.
    - id: accessToken
      type: System.String
      description: The access token.
    - id: nickname
      type: Remora.Rest.Core.Optional{System.String}
      description: The nickname of the user to use in the group DM.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A result which may or may not have succeeded.
    content.vb: Public Overridable Function GroupDMAddRecipientAsync(channelID As Snowflake, userID As Snowflake, accessToken As String, nickname As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.GroupDMAddRecipientAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GroupDMAddRecipientAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.GroupDMAddRecipientAsync(Snowflake, Snowflake, String, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.GroupDMAddRecipientAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: GroupDMAddRecipientAsync(Snowflake, Snowflake, String, Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.GroupDMRemoveRecipientAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.GroupDMRemoveRecipientAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: GroupDMRemoveRecipientAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: GroupDMRemoveRecipientAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: DiscordRestChannelAPI.GroupDMRemoveRecipientAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.GroupDMRemoveRecipientAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: GroupDMRemoveRecipientAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1180
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Removes a recipient from a group DM.
  example: []
  syntax:
    content: public virtual Task<Result> GroupDMRemoveRecipientAsync(Snowflake channelID, Snowflake userID, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the channel.
    - id: userID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the user.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A deletion result which may or may not have succeeded.
    content.vb: Public Overridable Function GroupDMRemoveRecipientAsync(channelID As Snowflake, userID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.GroupDMRemoveRecipientAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GroupDMRemoveRecipientAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadFromMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadFromMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: StartThreadFromMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: StartThreadFromMessageAsync(Snowflake, Snowflake, string, Optional<AutoArchiveDuration>, Optional<int?>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.StartThreadFromMessageAsync(Snowflake, Snowflake, string, Optional<AutoArchiveDuration>, Optional<int?>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadFromMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: StartThreadFromMessageAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1196
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Starts a new public thread from an existing message.
  example: []
  syntax:
    content: public virtual Task<Result<IChannel>> StartThreadFromMessageAsync(Snowflake channelID, Snowflake messageID, string name, Optional<AutoArchiveDuration> autoArchiveDuration = default, Optional<int?> rateLimitPerUser = default, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The channel to start the thread in.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The message to start the thread from.
    - id: name
      type: System.String
      description: The name of the thread.
    - id: autoArchiveDuration
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}
      description: The time of inactivity after which to archive the thread.
    - id: rateLimitPerUser
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The message rate limit per user, that is, the number of seconds they have to wait between sending messages.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannel}}
      description: A result which may or may not have succeeded.
    content.vb: Public Overridable Function StartThreadFromMessageAsync(channelID As Snowflake, messageID As Snowflake, name As String, autoArchiveDuration As [Optional](Of AutoArchiveDuration) = Nothing, rateLimitPerUser As [Optional](Of Integer?) = Nothing, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IChannel))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadFromMessageAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadFromMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.StartThreadFromMessageAsync(Snowflake, Snowflake, String, Optional(Of AutoArchiveDuration), Optional(Of Integer?), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadFromMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: StartThreadFromMessageAsync(Snowflake, Snowflake, String, Optional(Of AutoArchiveDuration), Optional(Of Integer?), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadWithoutMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Discord.API.Abstractions.Objects.ChannelType,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadWithoutMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Discord.API.Abstractions.Objects.ChannelType,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: StartThreadWithoutMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Discord.API.Abstractions.Objects.ChannelType,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: StartThreadWithoutMessageAsync(Snowflake, string, ChannelType, Optional<AutoArchiveDuration>, Optional<bool>, Optional<int?>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.StartThreadWithoutMessageAsync(Snowflake, string, ChannelType, Optional<AutoArchiveDuration>, Optional<bool>, Optional<int?>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadWithoutMessageAsync(Remora.Rest.Core.Snowflake, string, Remora.Discord.API.Abstractions.Objects.ChannelType, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: StartThreadWithoutMessageAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1232
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Starts a new private thread.
  example: []
  syntax:
    content: public virtual Task<Result<IChannel>> StartThreadWithoutMessageAsync(Snowflake channelID, string name, ChannelType type, Optional<AutoArchiveDuration> autoArchiveDuration = default, Optional<bool> isInvitable = default, Optional<int?> rateLimitPerUser = default, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The channel to start the thread in.
    - id: name
      type: System.String
      description: The name of the thread.
    - id: type
      type: Remora.Discord.API.Abstractions.Objects.ChannelType
      description: >-
        The thread type to create. Discord defaults to creating a <xref href="Remora.Discord.API.Abstractions.Objects.ChannelType.PrivateThread" data-throw-if-not-resolved="false"></xref>,

        but this is likely to change in a future API version. Prefer always setting this explicitly.
    - id: autoArchiveDuration
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}
      description: The time of inactivity after which to archive the thread.
    - id: isInvitable
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether non-moderators can add other non-moderators to the private thread.
    - id: rateLimitPerUser
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The message rate limit per user, that is, the number of seconds they have to wait between sending messages.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannel}}
      description: A result which may or may not have succeeded.
    content.vb: Public Overridable Function StartThreadWithoutMessageAsync(channelID As Snowflake, name As String, type As ChannelType, autoArchiveDuration As [Optional](Of AutoArchiveDuration) = Nothing, isInvitable As [Optional](Of Boolean) = Nothing, rateLimitPerUser As [Optional](Of Integer?) = Nothing, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IChannel))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadWithoutMessageAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadWithoutMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Discord.API.Abstractions.Objects.ChannelType,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.StartThreadWithoutMessageAsync(Snowflake, String, ChannelType, Optional(Of AutoArchiveDuration), Optional(Of Boolean), Optional(Of Integer?), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadWithoutMessageAsync(Remora.Rest.Core.Snowflake, String, Remora.Discord.API.Abstractions.Objects.ChannelType, Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: StartThreadWithoutMessageAsync(Snowflake, String, ChannelType, Optional(Of AutoArchiveDuration), Optional(Of Boolean), Optional(Of Integer?), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Rest.FileData}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Rest.FileData}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Rest.FileData}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: StartThreadInForumChannelAsync(Snowflake, string, Optional<AutoArchiveDuration>, Optional<int?>, Optional<string>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<Snowflake>>, Optional<IReadOnlyList<FileData>>, Optional<MessageFlags>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.StartThreadInForumChannelAsync(Snowflake, string, Optional<AutoArchiveDuration>, Optional<int?>, Optional<string>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<Snowflake>>, Optional<IReadOnlyList<FileData>>, Optional<MessageFlags>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmbed>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IAllowedMentions>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessageComponent>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Rest.FileData>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.MessageFlags>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: StartThreadInForumChannelAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1271
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Creates a new thread in a forum channel, and sends a message within the created thread.
  example: []
  syntax:
    content: public Task<Result<IChannel>> StartThreadInForumChannelAsync(Snowflake channelID, string name, Optional<AutoArchiveDuration> autoArchiveDuration = default, Optional<int?> rateLimitPerUser = default, Optional<string> content = default, Optional<IReadOnlyList<IEmbed>> embeds = default, Optional<IAllowedMentions> allowedMentions = default, Optional<IReadOnlyList<IMessageComponent>> components = default, Optional<IReadOnlyList<Snowflake>> stickerIds = default, Optional<IReadOnlyList<FileData>> attachments = default, Optional<MessageFlags> flags = default, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The channel to start the thread in.
    - id: name
      type: System.String
      description: The name of the thread.
    - id: autoArchiveDuration
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}
      description: The time of inactivity after which to archive the thread.
    - id: rateLimitPerUser
      type: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
      description: The message rate limit per user, that is, the number of seconds they have to wait between sending messages.
    - id: content
      type: Remora.Rest.Core.Optional{System.String}
      description: The content of the message.
    - id: embeds
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}}
      description: The rich embeds in the message.
    - id: allowedMentions
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions}
      description: An object describing the allowed mention types.
    - id: components
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}}
      description: The components of the message.
    - id: stickerIds
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
      description: The stickers to send with the message (max 3).
    - id: attachments
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Rest.FileData}}
      description: The attachments to associate with the response.
    - id: flags
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags}
      description: The message flags.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannel}}
      description: A channel with a nested message object.
    content.vb: Public Function StartThreadInForumChannelAsync(channelID As Snowflake, name As String, autoArchiveDuration As [Optional](Of AutoArchiveDuration) = Nothing, rateLimitPerUser As [Optional](Of Integer?) = Nothing, content As [Optional](Of String) = Nothing, embeds As [Optional](Of IReadOnlyList(Of IEmbed)) = Nothing, allowedMentions As [Optional](Of IAllowedMentions) = Nothing, components As [Optional](Of IReadOnlyList(Of IMessageComponent)) = Nothing, stickerIds As [Optional](Of IReadOnlyList(Of Snowflake)) = Nothing, attachments As [Optional](Of IReadOnlyList(Of FileData)) = Nothing, flags As [Optional](Of MessageFlags) = Nothing, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IChannel))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadInForumChannelAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Rest.FileData}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.StartThreadInForumChannelAsync(Snowflake, String, Optional(Of AutoArchiveDuration), Optional(Of Integer?), Optional(Of String), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of IReadOnlyList(Of FileData)), Optional(Of MessageFlags), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmbed)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IAllowedMentions), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessageComponent)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Rest.FileData)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.MessageFlags), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: StartThreadInForumChannelAsync(Snowflake, String, Optional(Of AutoArchiveDuration), Optional(Of Integer?), Optional(Of String), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of IReadOnlyList(Of FileData)), Optional(Of MessageFlags), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.JoinThreadAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.JoinThreadAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: JoinThreadAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: JoinThreadAsync(Snowflake, CancellationToken)
  nameWithType: DiscordRestChannelAPI.JoinThreadAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.JoinThreadAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: JoinThreadAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1350
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Joins the given thread.
  example: []
  syntax:
    content: public virtual Task<Result> JoinThreadAsync(Snowflake channelID, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The thread to join.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A result which may or may not have succeeded.
    content.vb: Public Overridable Function JoinThreadAsync(channelID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.JoinThreadAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.JoinThreadAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.AddThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.AddThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: AddThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: AddThreadMemberAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: DiscordRestChannelAPI.AddThreadMemberAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.AddThreadMemberAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: AddThreadMemberAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1361
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Adds the given user to the given thread.
  example: []
  syntax:
    content: public virtual Task<Result> AddThreadMemberAsync(Snowflake channelID, Snowflake userID, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The thread to add the user to.
    - id: userID
      type: Remora.Rest.Core.Snowflake
      description: The user to add to the thread.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A result which may or may not have succeeded.
    content.vb: Public Overridable Function AddThreadMemberAsync(channelID As Snowflake, userID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.AddThreadMemberAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.AddThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.LeaveThreadAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.LeaveThreadAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: LeaveThreadAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: LeaveThreadAsync(Snowflake, CancellationToken)
  nameWithType: DiscordRestChannelAPI.LeaveThreadAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.LeaveThreadAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: LeaveThreadAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1377
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Leaves the given thread.
  example: []
  syntax:
    content: public virtual Task<Result> LeaveThreadAsync(Snowflake channelID, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The thread to leave.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A result which may or may not have succeeded.
    content.vb: Public Overridable Function LeaveThreadAsync(channelID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.LeaveThreadAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.LeaveThreadAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.RemoveThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.RemoveThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: RemoveThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: RemoveThreadMemberAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: DiscordRestChannelAPI.RemoveThreadMemberAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.RemoveThreadMemberAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: RemoveThreadMemberAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1388
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Removes the given user from the given thread.
  example: []
  syntax:
    content: public virtual Task<Result> RemoveThreadMemberAsync(Snowflake channelID, Snowflake userID, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The thread to remove the user from.
    - id: userID
      type: Remora.Rest.Core.Snowflake
      description: The user to remove from the thread.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A result which may or may not have succeeded.
    content.vb: Public Overridable Function RemoveThreadMemberAsync(channelID As Snowflake, userID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.RemoveThreadMemberAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.RemoveThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.GetThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},System.Threading.CancellationToken)
  id: GetThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: GetThreadMemberAsync(Snowflake, Snowflake, Optional<bool>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.GetThreadMemberAsync(Snowflake, Snowflake, Optional<bool>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetThreadMemberAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<bool>, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetThreadMemberAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1404
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets a thread member object for the specified user if they're a member of the thread.
  example: []
  syntax:
    content: public virtual Task<Result<IThreadMember>> GetThreadMemberAsync(Snowflake channelID, Snowflake userID, Optional<bool> withMember = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the thread.
    - id: userID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the user.
    - id: withMember
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether to include the <xref href="Remora.Discord.API.Abstractions.Objects.IThreadMember.Member" data-throw-if-not-resolved="false"></xref> field.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IThreadMember}}
      description: A result which may or may not have succeeded.
    content.vb: Public Overridable Function GetThreadMemberAsync(channelID As Snowflake, userID As Snowflake, withMember As [Optional](Of Boolean) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IThreadMember))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetThreadMemberAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.GetThreadMemberAsync(Snowflake, Snowflake, Optional(Of Boolean), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetThreadMemberAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Boolean), System.Threading.CancellationToken)
  name.vb: GetThreadMemberAsync(Snowflake, Snowflake, Optional(Of Boolean), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListThreadMembersAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.ListThreadMembersAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  id: ListThreadMembersAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: ListThreadMembersAsync(Snowflake, Optional<bool>, Optional<Snowflake>, Optional<int>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.ListThreadMembersAsync(Snowflake, Optional<bool>, Optional<Snowflake>, Optional<int>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListThreadMembersAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<int>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ListThreadMembersAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1429
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Lists the members of the given thread. Restricted to bots with with GuildMembers intent.
  example: []
  syntax:
    content: public virtual Task<Result<IReadOnlyList<IThreadMember>>> ListThreadMembersAsync(Snowflake channelID, Optional<bool> withMember = default, Optional<Snowflake> after = default, Optional<int> limit = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The thread to list the members of.
    - id: withMember
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether to include the <xref href="Remora.Discord.API.Abstractions.Objects.IThreadMember.Member" data-throw-if-not-resolved="false"></xref> field.
    - id: after
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: The ID of the member to get members after.
    - id: limit
      type: Remora.Rest.Core.Optional{System.Int32}
      description: The maximum number of messages to retrieve. Ranges between 1 and 100.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IThreadMember}}}
      description: A result which may or may not have succeeded.
    content.vb: Public Overridable Function ListThreadMembersAsync(channelID As Snowflake, withMember As [Optional](Of Boolean) = Nothing, after As [Optional](Of Snowflake) = Nothing, limit As [Optional](Of Integer) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of IThreadMember)))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListThreadMembersAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListThreadMembersAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.ListThreadMembersAsync(Snowflake, Optional(Of Boolean), Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListThreadMembersAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Integer), System.Threading.CancellationToken)
  name.vb: ListThreadMembersAsync(Snowflake, Optional(Of Boolean), Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListPublicArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.DateTimeOffset},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.ListPublicArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.DateTimeOffset},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  id: ListPublicArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.DateTimeOffset},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: ListPublicArchivedThreadsAsync(Snowflake, Optional<DateTimeOffset>, Optional<int>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.ListPublicArchivedThreadsAsync(Snowflake, Optional<DateTimeOffset>, Optional<int>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListPublicArchivedThreadsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<System.DateTimeOffset>, Remora.Rest.Core.Optional<int>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ListPublicArchivedThreadsAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1465
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets the public archived threads for a channel.
  example: []
  syntax:
    content: public virtual Task<Result<IChannelThreadQueryResponse>> ListPublicArchivedThreadsAsync(Snowflake channelID, Optional<DateTimeOffset> before = default, Optional<int> limit = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The channel to list the threads of.
    - id: before
      type: Remora.Rest.Core.Optional{System.DateTimeOffset}
      description: The timestamp to return threads before of.
    - id: limit
      type: Remora.Rest.Core.Optional{System.Int32}
      description: The maximum number of threads to retrieve.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannelThreadQueryResponse}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function ListPublicArchivedThreadsAsync(channelID As Snowflake, before As [Optional](Of DateTimeOffset) = Nothing, limit As [Optional](Of Integer) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IChannelThreadQueryResponse))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListPublicArchivedThreadsAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListPublicArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.DateTimeOffset},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.ListPublicArchivedThreadsAsync(Snowflake, Optional(Of DateTimeOffset), Optional(Of Integer), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListPublicArchivedThreadsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of System.DateTimeOffset), Remora.Rest.Core.Optional(Of Integer), System.Threading.CancellationToken)
  name.vb: ListPublicArchivedThreadsAsync(Snowflake, Optional(Of DateTimeOffset), Optional(Of Integer), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.DateTimeOffset},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.ListPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.DateTimeOffset},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  id: ListPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.DateTimeOffset},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: ListPrivateArchivedThreadsAsync(Snowflake, Optional<DateTimeOffset>, Optional<int>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.ListPrivateArchivedThreadsAsync(Snowflake, Optional<DateTimeOffset>, Optional<int>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<System.DateTimeOffset>, Remora.Rest.Core.Optional<int>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ListPrivateArchivedThreadsAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1495
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets the private archived threads for a channel.
  example: []
  syntax:
    content: public virtual Task<Result<IChannelThreadQueryResponse>> ListPrivateArchivedThreadsAsync(Snowflake channelID, Optional<DateTimeOffset> before = default, Optional<int> limit = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The channel to list the threads of.
    - id: before
      type: Remora.Rest.Core.Optional{System.DateTimeOffset}
      description: The timestamp to return threads before of.
    - id: limit
      type: Remora.Rest.Core.Optional{System.Int32}
      description: The maximum number of threads to retrieve.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannelThreadQueryResponse}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function ListPrivateArchivedThreadsAsync(channelID As Snowflake, before As [Optional](Of DateTimeOffset) = Nothing, limit As [Optional](Of Integer) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IChannelThreadQueryResponse))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListPrivateArchivedThreadsAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.DateTimeOffset},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.ListPrivateArchivedThreadsAsync(Snowflake, Optional(Of DateTimeOffset), Optional(Of Integer), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of System.DateTimeOffset), Remora.Rest.Core.Optional(Of Integer), System.Threading.CancellationToken)
  name.vb: ListPrivateArchivedThreadsAsync(Snowflake, Optional(Of DateTimeOffset), Optional(Of Integer), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  id: ListJoinedPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestChannelAPI
  langs:
  - csharp
  - vb
  name: ListJoinedPrivateArchivedThreadsAsync(Snowflake, Optional<Snowflake>, Optional<int>, CancellationToken)
  nameWithType: DiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync(Snowflake, Optional<Snowflake>, Optional<int>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<int>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ListJoinedPrivateArchivedThreadsAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Channels\DiscordRestChannelAPI.cs
    startLine: 1525
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets the private archived threads for a channel that the user has joined.
  example: []
  syntax:
    content: public virtual Task<Result<IChannelThreadQueryResponse>> ListJoinedPrivateArchivedThreadsAsync(Snowflake channelID, Optional<Snowflake> before = default, Optional<int> limit = default, CancellationToken ct = default)
    parameters:
    - id: channelID
      type: Remora.Rest.Core.Snowflake
      description: The channel to list the threads of.
    - id: before
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: The snowflake to return threads before of.
    - id: limit
      type: Remora.Rest.Core.Optional{System.Int32}
      description: The maximum number of threads to retrieve.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannelThreadQueryResponse}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function ListJoinedPrivateArchivedThreadsAsync(channelID As Snowflake, before As [Optional](Of Snowflake) = Nothing, limit As [Optional](Of Integer) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IChannelThreadQueryResponse))
  overload: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync(Snowflake, Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Integer), System.Threading.CancellationToken)
  name.vb: ListJoinedPrivateArchivedThreadsAsync(Snowflake, Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
references:
- uid: Remora.Discord.Rest.API
  commentId: N:Remora.Discord.Rest.API
  href: Remora.html
  name: Remora.Discord.Rest.API
  nameWithType: Remora.Discord.Rest.API
  fullName: Remora.Discord.Rest.API
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.API
    name: API
    href: Remora.Discord.Rest.API.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.API
    name: API
    href: Remora.Discord.Rest.API.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  commentId: T:Remora.Discord.Rest.API.AbstractDiscordRestAPI
  parent: Remora.Discord.Rest.API
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html
  name: AbstractDiscordRestAPI
  nameWithType: AbstractDiscordRestAPI
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI
- uid: Remora.Rest.IRestCustomizable
  commentId: T:Remora.Rest.IRestCustomizable
  parent: Remora.Rest
  isExternal: true
  name: IRestCustomizable
  nameWithType: IRestCustomizable
  fullName: Remora.Rest.IRestCustomizable
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  commentId: T:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  parent: Remora.Discord.API.Abstractions.Rest
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html
  name: IDiscordRestChannelAPI
  nameWithType: IDiscordRestChannelAPI
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
  commentId: P:Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_RestHttpClient
  name: RestHttpClient
  nameWithType: AbstractDiscordRestAPI.RestHttpClient
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
  commentId: P:Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_JsonOptions
  name: JsonOptions
  nameWithType: AbstractDiscordRestAPI.JsonOptions
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
  commentId: P:Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_RateLimitCache
  name: RateLimitCache
  nameWithType: AbstractDiscordRestAPI.RateLimitCache
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
  commentId: M:Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  isExternal: true
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_WithCustomization_System_Action_Remora_Rest_RestRequestBuilder__
  name: WithCustomization(Action<RestRequestBuilder>)
  nameWithType: AbstractDiscordRestAPI.WithCustomization(Action<RestRequestBuilder>)
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action<Remora.Rest.RestRequestBuilder>)
  nameWithType.vb: AbstractDiscordRestAPI.WithCustomization(Action(Of RestRequestBuilder))
  fullName.vb: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action(Of Remora.Rest.RestRequestBuilder))
  name.vb: WithCustomization(Action(Of RestRequestBuilder))
  spec.csharp:
  - uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
    name: WithCustomization
    href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_WithCustomization_System_Action_Remora_Rest_RestRequestBuilder__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Remora.Rest.RestRequestBuilder
    name: RestRequestBuilder
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
    name: WithCustomization
    href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_WithCustomization_System_Action_Remora_Rest_RestRequestBuilder__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.RestRequestBuilder
    name: RestRequestBuilder
    isExternal: true
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Rest
  commentId: N:Remora.Rest
  isExternal: true
  name: Remora.Rest
  nameWithType: Remora.Rest
  fullName: Remora.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
- uid: Remora.Discord.API.Abstractions.Rest
  commentId: N:Remora.Discord.API.Abstractions.Rest
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Rest
  nameWithType: Remora.Discord.API.Abstractions.Rest
  fullName: Remora.Discord.API.Abstractions.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI
  commentId: T:Remora.Discord.Rest.API.DiscordRestChannelAPI
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html
  name: DiscordRestChannelAPI
  nameWithType: DiscordRestChannelAPI
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.#ctor*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.#ctor
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI__ctor_Remora_Rest_IRestHttpClient_System_Text_Json_JsonSerializerOptions_Remora_Discord_Caching_Abstractions_Services_ICacheProvider_
  name: DiscordRestChannelAPI
  nameWithType: DiscordRestChannelAPI.DiscordRestChannelAPI
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.DiscordRestChannelAPI
  nameWithType.vb: DiscordRestChannelAPI.New
  fullName.vb: Remora.Discord.Rest.API.DiscordRestChannelAPI.New
  name.vb: New
- uid: Remora.Rest.IRestHttpClient
  commentId: T:Remora.Rest.IRestHttpClient
  parent: Remora.Rest
  isExternal: true
  name: IRestHttpClient
  nameWithType: IRestHttpClient
  fullName: Remora.Rest.IRestHttpClient
- uid: System.Text.Json.JsonSerializerOptions
  commentId: T:System.Text.Json.JsonSerializerOptions
  parent: System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions
  name: JsonSerializerOptions
  nameWithType: JsonSerializerOptions
  fullName: System.Text.Json.JsonSerializerOptions
- uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  commentId: T:Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  parent: Remora.Discord.Caching.Abstractions.Services
  href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html
  name: ICacheProvider
  nameWithType: ICacheProvider
  fullName: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
- uid: System.Text.Json
  commentId: N:System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.Json
  nameWithType: System.Text.Json
  fullName: System.Text.Json
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
- uid: Remora.Discord.Caching.Abstractions.Services
  commentId: N:Remora.Discord.Caching.Abstractions.Services
  href: Remora.html
  name: Remora.Discord.Caching.Abstractions.Services
  nameWithType: Remora.Discord.Caching.Abstractions.Services
  fullName: Remora.Discord.Caching.Abstractions.Services
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions
    name: Abstractions
    href: Remora.Discord.Caching.Abstractions.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions.Services
    name: Services
    href: Remora.Discord.Caching.Abstractions.Services.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions
    name: Abstractions
    href: Remora.Discord.Caching.Abstractions.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions.Services
    name: Services
    href: Remora.Discord.Caching.Abstractions.Services.html
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_GetChannelAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetChannelAsync
  nameWithType: DiscordRestChannelAPI.GetChannelAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetChannelAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetChannelAsync(Snowflake, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.GetChannelAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetChannelAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetChannelAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Snowflake
  commentId: T:Remora.Rest.Core.Snowflake
  parent: Remora.Rest.Core
  isExternal: true
  name: Snowflake
  nameWithType: Snowflake
  fullName: Remora.Rest.Core.Snowflake
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannel}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannel}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IChannel>>
  nameWithType: Task<Result<IChannel>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IChannel>>
  nameWithType.vb: Task(Of Result(Of IChannel))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IChannel))
  name.vb: Task(Of Result(Of IChannel))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IChannel
    name: IChannel
    href: Remora.Discord.API.Abstractions.Objects.IChannel.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IChannel
    name: IChannel
    href: Remora.Discord.API.Abstractions.Objects.IChannel.html
  - name: )
  - name: )
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.API.Abstractions.Objects.ChannelType.GuildText
  commentId: F:Remora.Discord.API.Abstractions.Objects.ChannelType.GuildText
  href: Remora.Discord.API.Abstractions.Objects.ChannelType.html#Remora_Discord_API_Abstractions_Objects_ChannelType_GuildText
  name: GuildText
  nameWithType: ChannelType.GuildText
  fullName: Remora.Discord.API.Abstractions.Objects.ChannelType.GuildText
- uid: Remora.Discord.API.Abstractions.Objects.ChannelType.GuildAnnouncement
  commentId: F:Remora.Discord.API.Abstractions.Objects.ChannelType.GuildAnnouncement
  href: Remora.Discord.API.Abstractions.Objects.ChannelType.html#Remora_Discord_API_Abstractions_Objects_ChannelType_GuildAnnouncement
  name: GuildAnnouncement
  nameWithType: ChannelType.GuildAnnouncement
  fullName: Remora.Discord.API.Abstractions.Objects.ChannelType.GuildAnnouncement
- uid: Remora.Discord.API.Abstractions.Objects.IChannel.RateLimitPerUser
  commentId: P:Remora.Discord.API.Abstractions.Objects.IChannel.RateLimitPerUser
  parent: Remora.Discord.API.Abstractions.Objects.IChannel
  href: Remora.Discord.API.Abstractions.Objects.IChannel.html#Remora_Discord_API_Abstractions_Objects_IChannel_RateLimitPerUser
  name: RateLimitPerUser
  nameWithType: IChannel.RateLimitPerUser
  fullName: Remora.Discord.API.Abstractions.Objects.IChannel.RateLimitPerUser
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyChannelAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyChannelAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_ModifyChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_IO_Stream__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelType__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_VideoQualityMode___Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelFlags__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialForumTag___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDefaultReaction__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_SortOrder__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ForumLayout__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyChannelAsync
  nameWithType: DiscordRestChannelAPI.ModifyChannelAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyChannelAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_IO_Stream__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelType__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_VideoQualityMode___Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelFlags__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialForumTag___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDefaultReaction__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_SortOrder__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ForumLayout__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyChannelAsync(Snowflake, Optional<string>, Optional<Stream>, Optional<ChannelType>, Optional<int?>, Optional<string>, Optional<bool?>, Optional<int?>, Optional<int?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>>, Optional<Snowflake?>, Optional<VideoQualityMode?>, Optional<bool>, Optional<AutoArchiveDuration>, Optional<bool>, Optional<bool>, Optional<AutoArchiveDuration?>, Optional<string>, Optional<ChannelFlags>, Optional<IReadOnlyList<IPartialForumTag>>, Optional<IDefaultReaction>, Optional<int>, Optional<IReadOnlyList<Snowflake>>, Optional<SortOrder>, Optional<ForumLayout>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.ModifyChannelAsync(Snowflake, Optional<string>, Optional<Stream>, Optional<ChannelType>, Optional<int?>, Optional<string>, Optional<bool?>, Optional<int?>, Optional<int?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>>, Optional<Snowflake?>, Optional<VideoQualityMode?>, Optional<bool>, Optional<AutoArchiveDuration>, Optional<bool>, Optional<bool>, Optional<AutoArchiveDuration?>, Optional<string>, Optional<ChannelFlags>, Optional<IReadOnlyList<IPartialForumTag>>, Optional<IDefaultReaction>, Optional<int>, Optional<IReadOnlyList<Snowflake>>, Optional<SortOrder>, Optional<ForumLayout>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.IO.Stream>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelType>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<bool?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite>>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.VideoQualityMode?>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelFlags>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialForumTag>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDefaultReaction>, Remora.Rest.Core.Optional<int>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.SortOrder>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ForumLayout>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.ModifyChannelAsync(Snowflake, Optional(Of String), Optional(Of Stream), Optional(Of ChannelType), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of VideoQualityMode?), Optional(Of Boolean), Optional(Of AutoArchiveDuration), Optional(Of Boolean), Optional(Of Boolean), Optional(Of AutoArchiveDuration?), Optional(Of String), Optional(Of ChannelFlags), Optional(Of IReadOnlyList(Of IPartialForumTag)), Optional(Of IDefaultReaction), Optional(Of Integer), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of SortOrder), Optional(Of ForumLayout), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.IO.Stream), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelType), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite)), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.VideoQualityMode?), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelFlags), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialForumTag)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDefaultReaction), Remora.Rest.Core.Optional(Of Integer), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.SortOrder), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ForumLayout), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyChannelAsync(Snowflake, Optional(Of String), Optional(Of Stream), Optional(Of ChannelType), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of VideoQualityMode?), Optional(Of Boolean), Optional(Of AutoArchiveDuration), Optional(Of Boolean), Optional(Of Boolean), Optional(Of AutoArchiveDuration?), Optional(Of String), Optional(Of ChannelFlags), Optional(Of IReadOnlyList(Of IPartialForumTag)), Optional(Of IDefaultReaction), Optional(Of Integer), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of SortOrder), Optional(Of ForumLayout), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_IO_Stream__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelType__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_VideoQualityMode___Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelFlags__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialForumTag___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDefaultReaction__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_SortOrder__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ForumLayout__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelType
    name: ChannelType
    href: Remora.Discord.API.Abstractions.Objects.ChannelType.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
    href: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.VideoQualityMode
    name: VideoQualityMode
    href: Remora.Discord.API.Abstractions.Objects.VideoQualityMode.html
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelFlags
    name: ChannelFlags
    href: Remora.Discord.API.Abstractions.Objects.ChannelFlags.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialForumTag
    name: IPartialForumTag
    href: Remora.Discord.API.Abstractions.Objects.IPartialForumTag.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IDefaultReaction
    name: IDefaultReaction
    href: Remora.Discord.API.Abstractions.Objects.IDefaultReaction.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.SortOrder
    name: SortOrder
    href: Remora.Discord.API.Abstractions.Objects.SortOrder.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ForumLayout
    name: ForumLayout
    href: Remora.Discord.API.Abstractions.Objects.ForumLayout.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_IO_Stream__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelType__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_VideoQualityMode___Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelFlags__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialForumTag___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDefaultReaction__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_SortOrder__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ForumLayout__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelType
    name: ChannelType
    href: Remora.Discord.API.Abstractions.Objects.ChannelType.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
    href: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.VideoQualityMode
    name: VideoQualityMode
    href: Remora.Discord.API.Abstractions.Objects.VideoQualityMode.html
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelFlags
    name: ChannelFlags
    href: Remora.Discord.API.Abstractions.Objects.ChannelFlags.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialForumTag
    name: IPartialForumTag
    href: Remora.Discord.API.Abstractions.Objects.IPartialForumTag.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IDefaultReaction
    name: IDefaultReaction
    href: Remora.Discord.API.Abstractions.Objects.IDefaultReaction.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.SortOrder
    name: SortOrder
    href: Remora.Discord.API.Abstractions.Objects.SortOrder.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ForumLayout
    name: ForumLayout
    href: Remora.Discord.API.Abstractions.Objects.ForumLayout.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Optional{System.String}
  commentId: T:Remora.Rest.Core.Optional{System.String}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Optional<string>
  nameWithType: Optional<string>
  fullName: Remora.Rest.Core.Optional<string>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Remora.Rest.Core.Optional(Of String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Remora.Rest.Core.Optional{System.IO.Stream}
  commentId: T:Remora.Rest.Core.Optional{System.IO.Stream}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Optional<Stream>
  nameWithType: Optional<Stream>
  fullName: Remora.Rest.Core.Optional<System.IO.Stream>
  nameWithType.vb: Optional(Of Stream)
  fullName.vb: Remora.Rest.Core.Optional(Of System.IO.Stream)
  name.vb: Optional(Of Stream)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.ChannelType.html
  name: Optional<ChannelType>
  nameWithType: Optional<ChannelType>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelType>
  nameWithType.vb: Optional(Of ChannelType)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelType)
  name.vb: Optional(Of ChannelType)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelType
    name: ChannelType
    href: Remora.Discord.API.Abstractions.Objects.ChannelType.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelType
    name: ChannelType
    href: Remora.Discord.API.Abstractions.Objects.ChannelType.html
  - name: )
- uid: Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
  commentId: T:Remora.Rest.Core.Optional{System.Nullable{System.Int32}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Optional<int?>
  nameWithType: Optional<int?>
  fullName: Remora.Rest.Core.Optional<int?>
  nameWithType.vb: Optional(Of Integer?)
  fullName.vb: Remora.Rest.Core.Optional(Of Integer?)
  name.vb: Optional(Of Integer?)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
- uid: Remora.Rest.Core.Optional{System.Nullable{System.Boolean}}
  commentId: T:Remora.Rest.Core.Optional{System.Nullable{System.Boolean}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Optional<bool?>
  nameWithType: Optional<bool?>
  fullName: Remora.Rest.Core.Optional<bool?>
  nameWithType.vb: Optional(Of Boolean?)
  fullName.vb: Remora.Rest.Core.Optional(Of Boolean?)
  name.vb: Optional(Of Boolean?)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<IPartialPermissionOverwrite>>
  nameWithType: Optional<IReadOnlyList<IPartialPermissionOverwrite>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite))
  name.vb: Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
    href: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
    href: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite.html
  - name: )
  - name: )
- uid: Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}}
  commentId: T:Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  name: Optional<Snowflake?>
  nameWithType: Optional<Snowflake?>
  fullName: Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>
  nameWithType.vb: Optional(Of Snowflake?)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?)
  name.vb: Optional(Of Snowflake?)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: )
- uid: Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}}
  commentId: T:Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.VideoQualityMode.html
  name: Optional<VideoQualityMode?>
  nameWithType: Optional<VideoQualityMode?>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.VideoQualityMode?>
  nameWithType.vb: Optional(Of VideoQualityMode?)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.VideoQualityMode?)
  name.vb: Optional(Of VideoQualityMode?)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.VideoQualityMode
    name: VideoQualityMode
    href: Remora.Discord.API.Abstractions.Objects.VideoQualityMode.html
  - name: '?'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.VideoQualityMode
    name: VideoQualityMode
    href: Remora.Discord.API.Abstractions.Objects.VideoQualityMode.html
  - name: '?'
  - name: )
- uid: Remora.Rest.Core.Optional{System.Boolean}
  commentId: T:Remora.Rest.Core.Optional{System.Boolean}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Optional<bool>
  nameWithType: Optional<bool>
  fullName: Remora.Rest.Core.Optional<bool>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: Remora.Rest.Core.Optional(Of Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  name: Optional<AutoArchiveDuration>
  nameWithType: Optional<AutoArchiveDuration>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration>
  nameWithType.vb: Optional(Of AutoArchiveDuration)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration)
  name.vb: Optional(Of AutoArchiveDuration)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: )
- uid: Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}}
  commentId: T:Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  name: Optional<AutoArchiveDuration?>
  nameWithType: Optional<AutoArchiveDuration?>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?>
  nameWithType.vb: Optional(Of AutoArchiveDuration?)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?)
  name.vb: Optional(Of AutoArchiveDuration?)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: '?'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: '?'
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.ChannelFlags.html
  name: Optional<ChannelFlags>
  nameWithType: Optional<ChannelFlags>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelFlags>
  nameWithType.vb: Optional(Of ChannelFlags)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelFlags)
  name.vb: Optional(Of ChannelFlags)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelFlags
    name: ChannelFlags
    href: Remora.Discord.API.Abstractions.Objects.ChannelFlags.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelFlags
    name: ChannelFlags
    href: Remora.Discord.API.Abstractions.Objects.ChannelFlags.html
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<IPartialForumTag>>
  nameWithType: Optional<IReadOnlyList<IPartialForumTag>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialForumTag>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of IPartialForumTag))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialForumTag))
  name.vb: Optional(Of IReadOnlyList(Of IPartialForumTag))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialForumTag
    name: IPartialForumTag
    href: Remora.Discord.API.Abstractions.Objects.IPartialForumTag.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialForumTag
    name: IPartialForumTag
    href: Remora.Discord.API.Abstractions.Objects.IPartialForumTag.html
  - name: )
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.IDefaultReaction.html
  name: Optional<IDefaultReaction>
  nameWithType: Optional<IDefaultReaction>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDefaultReaction>
  nameWithType.vb: Optional(Of IDefaultReaction)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDefaultReaction)
  name.vb: Optional(Of IDefaultReaction)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IDefaultReaction
    name: IDefaultReaction
    href: Remora.Discord.API.Abstractions.Objects.IDefaultReaction.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IDefaultReaction
    name: IDefaultReaction
    href: Remora.Discord.API.Abstractions.Objects.IDefaultReaction.html
  - name: )
- uid: Remora.Rest.Core.Optional{System.Int32}
  commentId: T:Remora.Rest.Core.Optional{System.Int32}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Optional<int>
  nameWithType: Optional<int>
  fullName: Remora.Rest.Core.Optional<int>
  nameWithType.vb: Optional(Of Integer)
  fullName.vb: Remora.Rest.Core.Optional(Of Integer)
  name.vb: Optional(Of Integer)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<Snowflake>>
  nameWithType: Optional<IReadOnlyList<Snowflake>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of Snowflake))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake))
  name.vb: Optional(Of IReadOnlyList(Of Snowflake))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.SortOrder.html
  name: Optional<SortOrder>
  nameWithType: Optional<SortOrder>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.SortOrder>
  nameWithType.vb: Optional(Of SortOrder)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.SortOrder)
  name.vb: Optional(Of SortOrder)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.SortOrder
    name: SortOrder
    href: Remora.Discord.API.Abstractions.Objects.SortOrder.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.SortOrder
    name: SortOrder
    href: Remora.Discord.API.Abstractions.Objects.SortOrder.html
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.ForumLayout.html
  name: Optional<ForumLayout>
  nameWithType: Optional<ForumLayout>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ForumLayout>
  nameWithType.vb: Optional(Of ForumLayout)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ForumLayout)
  name.vb: Optional(Of ForumLayout)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ForumLayout
    name: ForumLayout
    href: Remora.Discord.API.Abstractions.Objects.ForumLayout.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ForumLayout
    name: ForumLayout
    href: Remora.Discord.API.Abstractions.Objects.ForumLayout.html
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.IChannel
  commentId: T:Remora.Discord.API.Abstractions.Objects.IChannel
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IChannel.html
  name: IChannel
  nameWithType: IChannel
  fullName: Remora.Discord.API.Abstractions.Objects.IChannel
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects
  commentId: N:Remora.Discord.API.Abstractions.Objects
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Objects
  nameWithType: Remora.Discord.API.Abstractions.Objects
  fullName: Remora.Discord.API.Abstractions.Objects
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGroupDMChannelAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGroupDMChannelAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_ModifyGroupDMChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_IO_Stream__System_Threading_CancellationToken_
  name: ModifyGroupDMChannelAsync
  nameWithType: DiscordRestChannelAPI.ModifyGroupDMChannelAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGroupDMChannelAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGroupDMChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGroupDMChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyGroupDMChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_IO_Stream__System_Threading_CancellationToken_
  name: ModifyGroupDMChannelAsync(Snowflake, Optional<string>, Optional<Stream>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.ModifyGroupDMChannelAsync(Snowflake, Optional<string>, Optional<Stream>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGroupDMChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.IO.Stream>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.ModifyGroupDMChannelAsync(Snowflake, Optional(Of String), Optional(Of Stream), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGroupDMChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.IO.Stream), System.Threading.CancellationToken)
  name.vb: ModifyGroupDMChannelAsync(Snowflake, Optional(Of String), Optional(Of Stream), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGroupDMChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},System.Threading.CancellationToken)
    name: ModifyGroupDMChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyGroupDMChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_IO_Stream__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGroupDMChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.IO.Stream},System.Threading.CancellationToken)
    name: ModifyGroupDMChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyGroupDMChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_IO_Stream__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildTextChannelAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildTextChannelAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_ModifyGuildTextChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelType__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyGuildTextChannelAsync
  nameWithType: DiscordRestChannelAPI.ModifyGuildTextChannelAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildTextChannelAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildTextChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildTextChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyGuildTextChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelType__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyGuildTextChannelAsync(Snowflake, Optional<string>, Optional<ChannelType>, Optional<int?>, Optional<string>, Optional<bool?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>>, Optional<Snowflake?>, Optional<AutoArchiveDuration?>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.ModifyGuildTextChannelAsync(Snowflake, Optional<string>, Optional<ChannelType>, Optional<int?>, Optional<string>, Optional<bool?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>>, Optional<Snowflake?>, Optional<AutoArchiveDuration?>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildTextChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelType>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<bool?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite>>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.ModifyGuildTextChannelAsync(Snowflake, Optional(Of String), Optional(Of ChannelType), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of AutoArchiveDuration?), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildTextChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelType), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite)), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyGuildTextChannelAsync(Snowflake, Optional(Of String), Optional(Of ChannelType), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of AutoArchiveDuration?), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildTextChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyGuildTextChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyGuildTextChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelType__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelType
    name: ChannelType
    href: Remora.Discord.API.Abstractions.Objects.ChannelType.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
    href: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildTextChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyGuildTextChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyGuildTextChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelType__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelType
    name: ChannelType
    href: Remora.Discord.API.Abstractions.Objects.ChannelType.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
    href: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildVoiceChannelAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildVoiceChannelAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_ModifyGuildVoiceChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_VideoQualityMode___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyGuildVoiceChannelAsync
  nameWithType: DiscordRestChannelAPI.ModifyGuildVoiceChannelAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildVoiceChannelAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildVoiceChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildVoiceChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyGuildVoiceChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_VideoQualityMode___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyGuildVoiceChannelAsync(Snowflake, Optional<string>, Optional<int?>, Optional<bool?>, Optional<int?>, Optional<int?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>>, Optional<Snowflake?>, Optional<string>, Optional<VideoQualityMode?>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.ModifyGuildVoiceChannelAsync(Snowflake, Optional<string>, Optional<int?>, Optional<bool?>, Optional<int?>, Optional<int?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>>, Optional<Snowflake?>, Optional<string>, Optional<VideoQualityMode?>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildVoiceChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<bool?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite>>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.VideoQualityMode?>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.ModifyGuildVoiceChannelAsync(Snowflake, Optional(Of String), Optional(Of Integer?), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of String), Optional(Of VideoQualityMode?), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildVoiceChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Boolean?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite)), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.VideoQualityMode?), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyGuildVoiceChannelAsync(Snowflake, Optional(Of String), Optional(Of Integer?), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of String), Optional(Of VideoQualityMode?), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildVoiceChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyGuildVoiceChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyGuildVoiceChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_VideoQualityMode___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
    href: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.VideoQualityMode
    name: VideoQualityMode
    href: Remora.Discord.API.Abstractions.Objects.VideoQualityMode.html
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildVoiceChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyGuildVoiceChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyGuildVoiceChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_VideoQualityMode___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
    href: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.VideoQualityMode
    name: VideoQualityMode
    href: Remora.Discord.API.Abstractions.Objects.VideoQualityMode.html
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildStageChannelAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildStageChannelAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_ModifyGuildStageChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_VideoQualityMode___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyGuildStageChannelAsync
  nameWithType: DiscordRestChannelAPI.ModifyGuildStageChannelAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildStageChannelAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildStageChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildStageChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyGuildStageChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_VideoQualityMode___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyGuildStageChannelAsync(Snowflake, Optional<string>, Optional<int?>, Optional<bool?>, Optional<int?>, Optional<int?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>>, Optional<Snowflake?>, Optional<string>, Optional<VideoQualityMode?>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.ModifyGuildStageChannelAsync(Snowflake, Optional<string>, Optional<int?>, Optional<bool?>, Optional<int?>, Optional<int?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>>, Optional<Snowflake?>, Optional<string>, Optional<VideoQualityMode?>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildStageChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<bool?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite>>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.VideoQualityMode?>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.ModifyGuildStageChannelAsync(Snowflake, Optional(Of String), Optional(Of Integer?), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of String), Optional(Of VideoQualityMode?), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildStageChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Boolean?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite)), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.VideoQualityMode?), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyGuildStageChannelAsync(Snowflake, Optional(Of String), Optional(Of Integer?), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of String), Optional(Of VideoQualityMode?), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildStageChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyGuildStageChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyGuildStageChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_VideoQualityMode___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
    href: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.VideoQualityMode
    name: VideoQualityMode
    href: Remora.Discord.API.Abstractions.Objects.VideoQualityMode.html
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildStageChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.VideoQualityMode}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyGuildStageChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyGuildStageChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_VideoQualityMode___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
    href: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.VideoQualityMode
    name: VideoQualityMode
    href: Remora.Discord.API.Abstractions.Objects.VideoQualityMode.html
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_ModifyGuildAnnouncementChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelType__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyGuildAnnouncementChannelAsync
  nameWithType: DiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyGuildAnnouncementChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelType__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyGuildAnnouncementChannelAsync(Snowflake, Optional<string>, Optional<ChannelType>, Optional<int?>, Optional<string>, Optional<bool?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>>, Optional<Snowflake?>, Optional<AutoArchiveDuration?>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync(Snowflake, Optional<string>, Optional<ChannelType>, Optional<int?>, Optional<string>, Optional<bool?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>>, Optional<Snowflake?>, Optional<AutoArchiveDuration?>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelType>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<bool?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite>>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync(Snowflake, Optional(Of String), Optional(Of ChannelType), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of AutoArchiveDuration?), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelType), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean?), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite)), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyGuildAnnouncementChannelAsync(Snowflake, Optional(Of String), Optional(Of ChannelType), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of AutoArchiveDuration?), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyGuildAnnouncementChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyGuildAnnouncementChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelType__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelType
    name: ChannelType
    href: Remora.Discord.API.Abstractions.Objects.ChannelType.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
    href: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyGuildAnnouncementChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelType},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyGuildAnnouncementChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyGuildAnnouncementChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelType__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelType
    name: ChannelType
    href: Remora.Discord.API.Abstractions.Objects.ChannelType.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
    href: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyThreadChannelAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyThreadChannelAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_ModifyThreadChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelFlags__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyThreadChannelAsync
  nameWithType: DiscordRestChannelAPI.ModifyThreadChannelAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyThreadChannelAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyThreadChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyThreadChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyThreadChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelFlags__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyThreadChannelAsync(Snowflake, Optional<string>, Optional<bool>, Optional<AutoArchiveDuration>, Optional<bool>, Optional<bool>, Optional<int?>, Optional<ChannelFlags>, Optional<IReadOnlyList<Snowflake>>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.ModifyThreadChannelAsync(Snowflake, Optional<string>, Optional<bool>, Optional<AutoArchiveDuration>, Optional<bool>, Optional<bool>, Optional<int?>, Optional<ChannelFlags>, Optional<IReadOnlyList<Snowflake>>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyThreadChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelFlags>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.ModifyThreadChannelAsync(Snowflake, Optional(Of String), Optional(Of Boolean), Optional(Of AutoArchiveDuration), Optional(Of Boolean), Optional(Of Boolean), Optional(Of Integer?), Optional(Of ChannelFlags), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyThreadChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelFlags), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyThreadChannelAsync(Snowflake, Optional(Of String), Optional(Of Boolean), Optional(Of AutoArchiveDuration), Optional(Of Boolean), Optional(Of Boolean), Optional(Of Integer?), Optional(Of ChannelFlags), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyThreadChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyThreadChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyThreadChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelFlags__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelFlags
    name: ChannelFlags
    href: Remora.Discord.API.Abstractions.Objects.ChannelFlags.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyThreadChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyThreadChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyThreadChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelFlags__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelFlags
    name: ChannelFlags
    href: Remora.Discord.API.Abstractions.Objects.ChannelFlags.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyForumChannelAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyForumChannelAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_ModifyForumChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelFlags__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialForumTag___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDefaultReaction__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_SortOrder__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ForumLayout__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyForumChannelAsync
  nameWithType: DiscordRestChannelAPI.ModifyForumChannelAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyForumChannelAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyForumChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyForumChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyForumChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelFlags__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialForumTag___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDefaultReaction__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_SortOrder__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ForumLayout__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyForumChannelAsync(Snowflake, Optional<string>, Optional<int?>, Optional<string>, Optional<bool?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>>, Optional<Snowflake?>, Optional<AutoArchiveDuration?>, Optional<ChannelFlags>, Optional<IReadOnlyList<IPartialForumTag>>, Optional<IDefaultReaction>, Optional<int>, Optional<SortOrder>, Optional<ForumLayout>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.ModifyForumChannelAsync(Snowflake, Optional<string>, Optional<int?>, Optional<string>, Optional<bool?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>>, Optional<Snowflake?>, Optional<AutoArchiveDuration?>, Optional<ChannelFlags>, Optional<IReadOnlyList<IPartialForumTag>>, Optional<IDefaultReaction>, Optional<int>, Optional<SortOrder>, Optional<ForumLayout>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyForumChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<bool?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite>>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelFlags>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialForumTag>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDefaultReaction>, Remora.Rest.Core.Optional<int>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.SortOrder>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ForumLayout>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.ModifyForumChannelAsync(Snowflake, Optional(Of String), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of AutoArchiveDuration?), Optional(Of ChannelFlags), Optional(Of IReadOnlyList(Of IPartialForumTag)), Optional(Of IDefaultReaction), Optional(Of Integer), Optional(Of SortOrder), Optional(Of ForumLayout), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyForumChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite)), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelFlags), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialForumTag)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDefaultReaction), Remora.Rest.Core.Optional(Of Integer), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.SortOrder), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ForumLayout), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyForumChannelAsync(Snowflake, Optional(Of String), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of AutoArchiveDuration?), Optional(Of ChannelFlags), Optional(Of IReadOnlyList(Of IPartialForumTag)), Optional(Of IDefaultReaction), Optional(Of Integer), Optional(Of SortOrder), Optional(Of ForumLayout), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyForumChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyForumChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyForumChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelFlags__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialForumTag___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDefaultReaction__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_SortOrder__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ForumLayout__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
    href: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelFlags
    name: ChannelFlags
    href: Remora.Discord.API.Abstractions.Objects.ChannelFlags.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialForumTag
    name: IPartialForumTag
    href: Remora.Discord.API.Abstractions.Objects.IPartialForumTag.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IDefaultReaction
    name: IDefaultReaction
    href: Remora.Discord.API.Abstractions.Objects.IDefaultReaction.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.SortOrder
    name: SortOrder
    href: Remora.Discord.API.Abstractions.Objects.SortOrder.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ForumLayout
    name: ForumLayout
    href: Remora.Discord.API.Abstractions.Objects.ForumLayout.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyForumChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ForumLayout},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyForumChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyForumChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelFlags__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialForumTag___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDefaultReaction__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_SortOrder__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ForumLayout__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
    href: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelFlags
    name: ChannelFlags
    href: Remora.Discord.API.Abstractions.Objects.ChannelFlags.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialForumTag
    name: IPartialForumTag
    href: Remora.Discord.API.Abstractions.Objects.IPartialForumTag.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IDefaultReaction
    name: IDefaultReaction
    href: Remora.Discord.API.Abstractions.Objects.IDefaultReaction.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.SortOrder
    name: SortOrder
    href: Remora.Discord.API.Abstractions.Objects.SortOrder.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ForumLayout
    name: ForumLayout
    href: Remora.Discord.API.Abstractions.Objects.ForumLayout.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyMediaChannelAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyMediaChannelAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_ModifyMediaChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelFlags__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialForumTag___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDefaultReaction__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_SortOrder__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyMediaChannelAsync
  nameWithType: DiscordRestChannelAPI.ModifyMediaChannelAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ModifyMediaChannelAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyMediaChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyMediaChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyMediaChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelFlags__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialForumTag___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDefaultReaction__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_SortOrder__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyMediaChannelAsync(Snowflake, Optional<string>, Optional<int?>, Optional<string>, Optional<bool?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>>, Optional<Snowflake?>, Optional<AutoArchiveDuration?>, Optional<ChannelFlags>, Optional<IReadOnlyList<IPartialForumTag>>, Optional<IDefaultReaction>, Optional<int>, Optional<SortOrder>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.ModifyMediaChannelAsync(Snowflake, Optional<string>, Optional<int?>, Optional<string>, Optional<bool?>, Optional<int?>, Optional<IReadOnlyList<IPartialPermissionOverwrite>>, Optional<Snowflake?>, Optional<AutoArchiveDuration?>, Optional<ChannelFlags>, Optional<IReadOnlyList<IPartialForumTag>>, Optional<IDefaultReaction>, Optional<int>, Optional<SortOrder>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyMediaChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<bool?>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite>>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ChannelFlags>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IPartialForumTag>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDefaultReaction>, Remora.Rest.Core.Optional<int>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.SortOrder>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.ModifyMediaChannelAsync(Snowflake, Optional(Of String), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of AutoArchiveDuration?), Optional(Of ChannelFlags), Optional(Of IReadOnlyList(Of IPartialForumTag)), Optional(Of IDefaultReaction), Optional(Of Integer), Optional(Of SortOrder), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyMediaChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean?), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite)), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ChannelFlags), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IPartialForumTag)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDefaultReaction), Remora.Rest.Core.Optional(Of Integer), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.SortOrder), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyMediaChannelAsync(Snowflake, Optional(Of String), Optional(Of Integer?), Optional(Of String), Optional(Of Boolean?), Optional(Of Integer?), Optional(Of IReadOnlyList(Of IPartialPermissionOverwrite)), Optional(Of Snowflake?), Optional(Of AutoArchiveDuration?), Optional(Of ChannelFlags), Optional(Of IReadOnlyList(Of IPartialForumTag)), Optional(Of IDefaultReaction), Optional(Of Integer), Optional(Of SortOrder), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyMediaChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyMediaChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyMediaChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelFlags__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialForumTag___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDefaultReaction__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_SortOrder__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
    href: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelFlags
    name: ChannelFlags
    href: Remora.Discord.API.Abstractions.Objects.ChannelFlags.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialForumTag
    name: IPartialForumTag
    href: Remora.Discord.API.Abstractions.Objects.IPartialForumTag.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IDefaultReaction
    name: IDefaultReaction
    href: Remora.Discord.API.Abstractions.Objects.IDefaultReaction.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.SortOrder
    name: SortOrder
    href: Remora.Discord.API.Abstractions.Objects.SortOrder.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ModifyMediaChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite}},Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ChannelFlags},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IPartialForumTag}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDefaultReaction},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.SortOrder},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyMediaChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ModifyMediaChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialPermissionOverwrite___Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ChannelFlags__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IPartialForumTag___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDefaultReaction__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_SortOrder__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite
    name: IPartialPermissionOverwrite
    href: Remora.Discord.API.Abstractions.Objects.IPartialPermissionOverwrite.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelFlags
    name: ChannelFlags
    href: Remora.Discord.API.Abstractions.Objects.ChannelFlags.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialForumTag
    name: IPartialForumTag
    href: Remora.Discord.API.Abstractions.Objects.IPartialForumTag.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IDefaultReaction
    name: IDefaultReaction
    href: Remora.Discord.API.Abstractions.Objects.IDefaultReaction.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.SortOrder
    name: SortOrder
    href: Remora.Discord.API.Abstractions.Objects.SortOrder.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteChannelAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteChannelAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_DeleteChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: DeleteChannelAsync
  nameWithType: DiscordRestChannelAPI.DeleteChannelAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteChannelAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: DeleteChannelAsync(Snowflake, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.DeleteChannelAsync(Snowflake, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.DeleteChannelAsync(Snowflake, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: DeleteChannelAsync(Snowflake, Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: DeleteChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: DeleteChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result>
  nameWithType: Task<Result>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result>
  nameWithType.vb: Task(Of Result)
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result)
  name.vb: Task(Of Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelMessagesAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelMessagesAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_GetChannelMessagesAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  name: GetChannelMessagesAsync
  nameWithType: DiscordRestChannelAPI.GetChannelMessagesAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelMessagesAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelMessagesAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelMessagesAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetChannelMessagesAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  name: GetChannelMessagesAsync(Snowflake, Optional<Snowflake>, Optional<Snowflake>, Optional<Snowflake>, Optional<int>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.GetChannelMessagesAsync(Snowflake, Optional<Snowflake>, Optional<Snowflake>, Optional<Snowflake>, Optional<int>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelMessagesAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<int>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.GetChannelMessagesAsync(Snowflake, Optional(Of Snowflake), Optional(Of Snowflake), Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelMessagesAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Integer), System.Threading.CancellationToken)
  name.vb: GetChannelMessagesAsync(Snowflake, Optional(Of Snowflake), Optional(Of Snowflake), Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelMessagesAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
    name: GetChannelMessagesAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetChannelMessagesAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelMessagesAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
    name: GetChannelMessagesAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetChannelMessagesAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  commentId: T:Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  name: Optional<Snowflake>
  nameWithType: Optional<Snowflake>
  fullName: Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>
  nameWithType.vb: Optional(Of Snowflake)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake)
  name.vb: Optional(Of Snowflake)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessage}}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessage}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IReadOnlyList<IMessage>>>
  nameWithType: Task<Result<IReadOnlyList<IMessage>>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessage>>>
  nameWithType.vb: Task(Of Result(Of IReadOnlyList(Of IMessage)))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessage)))
  name.vb: Task(Of Result(Of IReadOnlyList(Of IMessage)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IMessage
    name: IMessage
    href: Remora.Discord.API.Abstractions.Objects.IMessage.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IMessage
    name: IMessage
    href: Remora.Discord.API.Abstractions.Objects.IMessage.html
  - name: )
  - name: )
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelMessageAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelMessageAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_GetChannelMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetChannelMessageAsync
  nameWithType: DiscordRestChannelAPI.GetChannelMessageAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelMessageAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetChannelMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetChannelMessageAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.GetChannelMessageAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetChannelMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetChannelMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetChannelMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetChannelMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IMessage>>
  nameWithType: Task<Result<IMessage>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IMessage>>
  nameWithType.vb: Task(Of Result(Of IMessage))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IMessage))
  name.vb: Task(Of Result(Of IMessage))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IMessage
    name: IMessage
    href: Remora.Discord.API.Abstractions.Objects.IMessage.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IMessage
    name: IMessage
    href: Remora.Discord.API.Abstractions.Objects.IMessage.html
  - name: )
  - name: )
- uid: Remora.Discord.API.Abstractions.Rest.FileData
  commentId: T:Remora.Discord.API.Abstractions.Rest.FileData
  parent: Remora.Discord.API.Abstractions.Rest
  href: Remora.Discord.API.Abstractions.Rest.FileData.html
  name: FileData
  nameWithType: FileData
  fullName: Remora.Discord.API.Abstractions.Rest.FileData
- uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
  commentId: T:Remora.Discord.API.Abstractions.Objects.IPartialAttachment
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IPartialAttachment.html
  name: IPartialAttachment
  nameWithType: IPartialAttachment
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateMessageAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateMessageAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_CreateMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IMessageReference__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_MessageFlags__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IPollCreateRequest__System_Threading_CancellationToken_
  name: CreateMessageAsync
  nameWithType: DiscordRestChannelAPI.CreateMessageAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateMessageAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IMessageReference},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IMessageReference},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_CreateMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IMessageReference__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_MessageFlags__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IPollCreateRequest__System_Threading_CancellationToken_
  name: CreateMessageAsync(Snowflake, Optional<string>, Optional<string>, Optional<bool>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<IMessageReference>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<Snowflake>>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>, Optional<MessageFlags>, Optional<bool>, Optional<IPollCreateRequest>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.CreateMessageAsync(Snowflake, Optional<string>, Optional<string>, Optional<bool>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<IMessageReference>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<Snowflake>>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>, Optional<MessageFlags>, Optional<bool>, Optional<IPollCreateRequest>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmbed>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IAllowedMentions>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IMessageReference>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessageComponent>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<OneOf.OneOf<Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment>>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.MessageFlags>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IPollCreateRequest>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.CreateMessageAsync(Snowflake, Optional(Of String), Optional(Of String), Optional(Of Boolean), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IMessageReference), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), Optional(Of MessageFlags), Optional(Of Boolean), Optional(Of IPollCreateRequest), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmbed)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IAllowedMentions), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IMessageReference), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessageComponent)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of OneOf.OneOf(Of Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment))), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.MessageFlags), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IPollCreateRequest), System.Threading.CancellationToken)
  name.vb: CreateMessageAsync(Snowflake, Optional(Of String), Optional(Of String), Optional(Of Boolean), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IMessageReference), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), Optional(Of MessageFlags), Optional(Of Boolean), Optional(Of IPollCreateRequest), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IMessageReference},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
    name: CreateMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_CreateMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IMessageReference__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_MessageFlags__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IPollCreateRequest__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
    href: Remora.Discord.API.Abstractions.Objects.IEmbed.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
    href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageReference
    name: IMessageReference
    href: Remora.Discord.API.Abstractions.Objects.IMessageReference.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
    href: Remora.Discord.API.Abstractions.Objects.IMessageComponent.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
    name: IPartialAttachment
    href: Remora.Discord.API.Abstractions.Objects.IPartialAttachment.html
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
    href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest
    name: IPollCreateRequest
    href: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IMessageReference},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest},System.Threading.CancellationToken)
    name: CreateMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_CreateMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IMessageReference__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_MessageFlags__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IPollCreateRequest__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
    href: Remora.Discord.API.Abstractions.Objects.IEmbed.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
    href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageReference
    name: IMessageReference
    href: Remora.Discord.API.Abstractions.Objects.IMessageReference.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
    href: Remora.Discord.API.Abstractions.Objects.IMessageComponent.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
    name: IPartialAttachment
    href: Remora.Discord.API.Abstractions.Objects.IPartialAttachment.html
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
    href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest
    name: IPollCreateRequest
    href: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<IEmbed>>
  nameWithType: Optional<IReadOnlyList<IEmbed>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmbed>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of IEmbed))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmbed))
  name.vb: Optional(Of IReadOnlyList(Of IEmbed))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
    href: Remora.Discord.API.Abstractions.Objects.IEmbed.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
    href: Remora.Discord.API.Abstractions.Objects.IEmbed.html
  - name: )
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  name: Optional<IAllowedMentions>
  nameWithType: Optional<IAllowedMentions>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IAllowedMentions>
  nameWithType.vb: Optional(Of IAllowedMentions)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IAllowedMentions)
  name.vb: Optional(Of IAllowedMentions)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
    href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
    href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IMessageReference}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IMessageReference}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.IMessageReference.html
  name: Optional<IMessageReference>
  nameWithType: Optional<IMessageReference>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IMessageReference>
  nameWithType.vb: Optional(Of IMessageReference)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IMessageReference)
  name.vb: Optional(Of IMessageReference)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageReference
    name: IMessageReference
    href: Remora.Discord.API.Abstractions.Objects.IMessageReference.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageReference
    name: IMessageReference
    href: Remora.Discord.API.Abstractions.Objects.IMessageReference.html
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<IMessageComponent>>
  nameWithType: Optional<IReadOnlyList<IMessageComponent>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessageComponent>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of IMessageComponent))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessageComponent))
  name.vb: Optional(Of IReadOnlyList(Of IMessageComponent))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
    href: Remora.Discord.API.Abstractions.Objects.IMessageComponent.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
    href: Remora.Discord.API.Abstractions.Objects.IMessageComponent.html
  - name: )
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>
  nameWithType: Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<OneOf.OneOf<Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment>>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment)))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of OneOf.OneOf(Of Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment)))
  name.vb: Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment)))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
    name: IPartialAttachment
    href: Remora.Discord.API.Abstractions.Objects.IPartialAttachment.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
    name: IPartialAttachment
    href: Remora.Discord.API.Abstractions.Objects.IPartialAttachment.html
  - name: )
  - name: )
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  name: Optional<MessageFlags>
  nameWithType: Optional<MessageFlags>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.MessageFlags>
  nameWithType.vb: Optional(Of MessageFlags)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.MessageFlags)
  name.vb: Optional(Of MessageFlags)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
    href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
    href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IPollCreateRequest}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest.html
  name: Optional<IPollCreateRequest>
  nameWithType: Optional<IPollCreateRequest>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IPollCreateRequest>
  nameWithType.vb: Optional(Of IPollCreateRequest)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IPollCreateRequest)
  name.vb: Optional(Of IPollCreateRequest)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest
    name: IPollCreateRequest
    href: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest
    name: IPollCreateRequest
    href: Remora.Discord.API.Abstractions.Objects.IPollCreateRequest.html
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.CrosspostMessageAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.CrosspostMessageAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_CrosspostMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: CrosspostMessageAsync
  nameWithType: DiscordRestChannelAPI.CrosspostMessageAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.CrosspostMessageAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CrosspostMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CrosspostMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_CrosspostMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: CrosspostMessageAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.CrosspostMessageAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CrosspostMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CrosspostMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: CrosspostMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_CrosspostMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CrosspostMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: CrosspostMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_CrosspostMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateReactionAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateReactionAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_CreateReactionAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  name: CreateReactionAsync
  nameWithType: DiscordRestChannelAPI.CreateReactionAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateReactionAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_CreateReactionAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  name: CreateReactionAsync(Snowflake, Snowflake, string, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.CreateReactionAsync(Snowflake, Snowflake, string, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateReactionAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, string, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.CreateReactionAsync(Snowflake, Snowflake, String, CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateReactionAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, String, System.Threading.CancellationToken)
  name.vb: CreateReactionAsync(Snowflake, Snowflake, String, CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
    name: CreateReactionAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_CreateReactionAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
    name: CreateReactionAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_CreateReactionAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteOwnReactionAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteOwnReactionAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_DeleteOwnReactionAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  name: DeleteOwnReactionAsync
  nameWithType: DiscordRestChannelAPI.DeleteOwnReactionAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteOwnReactionAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteOwnReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteOwnReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteOwnReactionAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  name: DeleteOwnReactionAsync(Snowflake, Snowflake, string, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.DeleteOwnReactionAsync(Snowflake, Snowflake, string, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteOwnReactionAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, string, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.DeleteOwnReactionAsync(Snowflake, Snowflake, String, CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteOwnReactionAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, String, System.Threading.CancellationToken)
  name.vb: DeleteOwnReactionAsync(Snowflake, Snowflake, String, CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteOwnReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
    name: DeleteOwnReactionAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteOwnReactionAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteOwnReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
    name: DeleteOwnReactionAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteOwnReactionAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteUserReactionAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteUserReactionAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_DeleteUserReactionAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: DeleteUserReactionAsync
  nameWithType: DiscordRestChannelAPI.DeleteUserReactionAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteUserReactionAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteUserReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteUserReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteUserReactionAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: DeleteUserReactionAsync(Snowflake, Snowflake, string, Snowflake, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.DeleteUserReactionAsync(Snowflake, Snowflake, string, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteUserReactionAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.DeleteUserReactionAsync(Snowflake, Snowflake, String, Snowflake, CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteUserReactionAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  name.vb: DeleteUserReactionAsync(Snowflake, Snowflake, String, Snowflake, CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteUserReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: DeleteUserReactionAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteUserReactionAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteUserReactionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: DeleteUserReactionAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteUserReactionAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetReactionsAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.GetReactionsAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_GetReactionsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  name: GetReactionsAsync
  nameWithType: DiscordRestChannelAPI.GetReactionsAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetReactionsAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetReactionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetReactionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetReactionsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  name: GetReactionsAsync(Snowflake, Snowflake, string, Optional<Snowflake>, Optional<int>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.GetReactionsAsync(Snowflake, Snowflake, string, Optional<Snowflake>, Optional<int>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetReactionsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<int>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.GetReactionsAsync(Snowflake, Snowflake, String, Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetReactionsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Integer), System.Threading.CancellationToken)
  name.vb: GetReactionsAsync(Snowflake, Snowflake, String, Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetReactionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
    name: GetReactionsAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetReactionsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetReactionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
    name: GetReactionsAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetReactionsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IUser}}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IUser}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IReadOnlyList<IUser>>>
  nameWithType: Task<Result<IReadOnlyList<IUser>>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IUser>>>
  nameWithType.vb: Task(Of Result(Of IReadOnlyList(Of IUser)))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IUser)))
  name.vb: Task(Of Result(Of IReadOnlyList(Of IUser)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IUser
    name: IUser
    href: Remora.Discord.API.Abstractions.Objects.IUser.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IUser
    name: IUser
    href: Remora.Discord.API.Abstractions.Objects.IUser.html
  - name: )
  - name: )
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteAllReactionsAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteAllReactionsAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_DeleteAllReactionsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: DeleteAllReactionsAsync
  nameWithType: DiscordRestChannelAPI.DeleteAllReactionsAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteAllReactionsAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteAllReactionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteAllReactionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteAllReactionsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: DeleteAllReactionsAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.DeleteAllReactionsAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteAllReactionsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteAllReactionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: DeleteAllReactionsAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteAllReactionsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteAllReactionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: DeleteAllReactionsAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteAllReactionsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_DeleteAllReactionsForEmojiAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  name: DeleteAllReactionsForEmojiAsync
  nameWithType: DiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteAllReactionsForEmojiAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  name: DeleteAllReactionsForEmojiAsync(Snowflake, Snowflake, string, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync(Snowflake, Snowflake, string, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, string, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync(Snowflake, Snowflake, String, CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, String, System.Threading.CancellationToken)
  name.vb: DeleteAllReactionsForEmojiAsync(Snowflake, Snowflake, String, CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
    name: DeleteAllReactionsForEmojiAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteAllReactionsForEmojiAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteAllReactionsForEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
    name: DeleteAllReactionsForEmojiAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteAllReactionsForEmojiAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.EditMessageAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.EditMessageAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_EditMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_MessageFlags___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____System_Threading_CancellationToken_
  name: EditMessageAsync
  nameWithType: DiscordRestChannelAPI.EditMessageAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.EditMessageAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.EditMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.MessageFlags}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.EditMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.MessageFlags}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_EditMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_MessageFlags___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____System_Threading_CancellationToken_
  name: EditMessageAsync(Snowflake, Snowflake, Optional<string>, Optional<IReadOnlyList<IEmbed>>, Optional<MessageFlags?>, Optional<IAllowedMentions>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.EditMessageAsync(Snowflake, Snowflake, Optional<string>, Optional<IReadOnlyList<IEmbed>>, Optional<MessageFlags?>, Optional<IAllowedMentions>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.EditMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmbed>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.MessageFlags?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IAllowedMentions>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessageComponent>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<OneOf.OneOf<Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment>>>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.EditMessageAsync(Snowflake, Snowflake, Optional(Of String), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of MessageFlags?), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.EditMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmbed)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.MessageFlags?), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IAllowedMentions), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessageComponent)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of OneOf.OneOf(Of Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment))), System.Threading.CancellationToken)
  name.vb: EditMessageAsync(Snowflake, Snowflake, Optional(Of String), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of MessageFlags?), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.EditMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.MessageFlags}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
    name: EditMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_EditMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_MessageFlags___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
    href: Remora.Discord.API.Abstractions.Objects.IEmbed.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
    href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
    href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
    href: Remora.Discord.API.Abstractions.Objects.IMessageComponent.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
    name: IPartialAttachment
    href: Remora.Discord.API.Abstractions.Objects.IPartialAttachment.html
  - name: '>'
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.EditMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.MessageFlags}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
    name: EditMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_EditMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_System_Nullable_Remora_Discord_API_Abstractions_Objects_MessageFlags___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
    href: Remora.Discord.API.Abstractions.Objects.IEmbed.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
    href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
    href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
    href: Remora.Discord.API.Abstractions.Objects.IMessageComponent.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
    name: IPartialAttachment
    href: Remora.Discord.API.Abstractions.Objects.IPartialAttachment.html
  - name: )
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.MessageFlags}}
  commentId: T:Remora.Rest.Core.Optional{System.Nullable{Remora.Discord.API.Abstractions.Objects.MessageFlags}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  name: Optional<MessageFlags?>
  nameWithType: Optional<MessageFlags?>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.MessageFlags?>
  nameWithType.vb: Optional(Of MessageFlags?)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.MessageFlags?)
  name.vb: Optional(Of MessageFlags?)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
    href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  - name: '?'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
    href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  - name: '?'
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteMessageAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteMessageAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_DeleteMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: DeleteMessageAsync
  nameWithType: DiscordRestChannelAPI.DeleteMessageAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteMessageAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: DeleteMessageAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.DeleteMessageAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.DeleteMessageAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: DeleteMessageAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: DeleteMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: DeleteMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.BulkDeleteMessagesAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.BulkDeleteMessagesAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_BulkDeleteMessagesAsync_Remora_Rest_Core_Snowflake_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: BulkDeleteMessagesAsync
  nameWithType: DiscordRestChannelAPI.BulkDeleteMessagesAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.BulkDeleteMessagesAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.BulkDeleteMessagesAsync(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.BulkDeleteMessagesAsync(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_BulkDeleteMessagesAsync_Remora_Rest_Core_Snowflake_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: BulkDeleteMessagesAsync(Snowflake, IReadOnlyList<Snowflake>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.BulkDeleteMessagesAsync(Snowflake, IReadOnlyList<Snowflake>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.BulkDeleteMessagesAsync(Remora.Rest.Core.Snowflake, System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.BulkDeleteMessagesAsync(Snowflake, IReadOnlyList(Of Snowflake), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.BulkDeleteMessagesAsync(Remora.Rest.Core.Snowflake, System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: BulkDeleteMessagesAsync(Snowflake, IReadOnlyList(Of Snowflake), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.BulkDeleteMessagesAsync(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: BulkDeleteMessagesAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_BulkDeleteMessagesAsync_Remora_Rest_Core_Snowflake_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.BulkDeleteMessagesAsync(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: BulkDeleteMessagesAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_BulkDeleteMessagesAsync_Remora_Rest_Core_Snowflake_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}
  commentId: T:System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<Snowflake>
  nameWithType: IReadOnlyList<Snowflake>
  fullName: System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>
  nameWithType.vb: IReadOnlyList(Of Snowflake)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)
  name.vb: IReadOnlyList(Of Snowflake)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.EditChannelPermissionsAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.EditChannelPermissionsAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_EditChannelPermissionsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDiscordPermissionSet__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDiscordPermissionSet__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_PermissionOverwriteType__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: EditChannelPermissionsAsync
  nameWithType: DiscordRestChannelAPI.EditChannelPermissionsAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.EditChannelPermissionsAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.EditChannelPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.EditChannelPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_EditChannelPermissionsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDiscordPermissionSet__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDiscordPermissionSet__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_PermissionOverwriteType__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: EditChannelPermissionsAsync(Snowflake, Snowflake, Optional<IDiscordPermissionSet>, Optional<IDiscordPermissionSet>, Optional<PermissionOverwriteType>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.EditChannelPermissionsAsync(Snowflake, Snowflake, Optional<IDiscordPermissionSet>, Optional<IDiscordPermissionSet>, Optional<PermissionOverwriteType>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.EditChannelPermissionsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.EditChannelPermissionsAsync(Snowflake, Snowflake, Optional(Of IDiscordPermissionSet), Optional(Of IDiscordPermissionSet), Optional(Of PermissionOverwriteType), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.EditChannelPermissionsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: EditChannelPermissionsAsync(Snowflake, Snowflake, Optional(Of IDiscordPermissionSet), Optional(Of IDiscordPermissionSet), Optional(Of PermissionOverwriteType), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.EditChannelPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: EditChannelPermissionsAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_EditChannelPermissionsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDiscordPermissionSet__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDiscordPermissionSet__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_PermissionOverwriteType__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
    name: IDiscordPermissionSet
    href: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
    name: IDiscordPermissionSet
    href: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType
    name: PermissionOverwriteType
    href: Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.EditChannelPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: EditChannelPermissionsAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_EditChannelPermissionsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDiscordPermissionSet__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDiscordPermissionSet__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_PermissionOverwriteType__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
    name: IDiscordPermissionSet
    href: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
    name: IDiscordPermissionSet
    href: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType
    name: PermissionOverwriteType
    href: Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet.html
  name: Optional<IDiscordPermissionSet>
  nameWithType: Optional<IDiscordPermissionSet>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet>
  nameWithType.vb: Optional(Of IDiscordPermissionSet)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet)
  name.vb: Optional(Of IDiscordPermissionSet)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
    name: IDiscordPermissionSet
    href: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
    name: IDiscordPermissionSet
    href: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet.html
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType.html
  name: Optional<PermissionOverwriteType>
  nameWithType: Optional<PermissionOverwriteType>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType>
  nameWithType.vb: Optional(Of PermissionOverwriteType)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType)
  name.vb: Optional(Of PermissionOverwriteType)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType
    name: PermissionOverwriteType
    href: Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType
    name: PermissionOverwriteType
    href: Remora.Discord.API.Abstractions.Objects.PermissionOverwriteType.html
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelInvitesAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelInvitesAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_GetChannelInvitesAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetChannelInvitesAsync
  nameWithType: DiscordRestChannelAPI.GetChannelInvitesAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetChannelInvitesAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelInvitesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelInvitesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetChannelInvitesAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetChannelInvitesAsync(Snowflake, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.GetChannelInvitesAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelInvitesAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelInvitesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetChannelInvitesAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetChannelInvitesAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetChannelInvitesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetChannelInvitesAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetChannelInvitesAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IInvite}}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IInvite}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IReadOnlyList<IInvite>>>
  nameWithType: Task<Result<IReadOnlyList<IInvite>>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IInvite>>>
  nameWithType.vb: Task(Of Result(Of IReadOnlyList(Of IInvite)))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IInvite)))
  name.vb: Task(Of Result(Of IReadOnlyList(Of IInvite)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IInvite
    name: IInvite
    href: Remora.Discord.API.Abstractions.Objects.IInvite.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IInvite
    name: IInvite
    href: Remora.Discord.API.Abstractions.Objects.IInvite.html
  - name: )
  - name: )
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.InviteTarget.EmbeddedApplication
  commentId: F:Remora.Discord.API.Abstractions.Objects.InviteTarget.EmbeddedApplication
  href: Remora.Discord.API.Abstractions.Objects.InviteTarget.html#Remora_Discord_API_Abstractions_Objects_InviteTarget_EmbeddedApplication
  name: EmbeddedApplication
  nameWithType: InviteTarget.EmbeddedApplication
  fullName: Remora.Discord.API.Abstractions.Objects.InviteTarget.EmbeddedApplication
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateChannelInviteAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateChannelInviteAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_CreateChannelInviteAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_TimeSpan__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_InviteTarget__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: CreateChannelInviteAsync
  nameWithType: DiscordRestChannelAPI.CreateChannelInviteAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.CreateChannelInviteAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateChannelInviteAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.TimeSpan},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.InviteTarget},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateChannelInviteAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.TimeSpan},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.InviteTarget},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_CreateChannelInviteAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_TimeSpan__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_InviteTarget__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: CreateChannelInviteAsync(Snowflake, Optional<TimeSpan>, Optional<int>, Optional<bool>, Optional<bool>, Optional<InviteTarget>, Optional<Snowflake>, Optional<Snowflake>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.CreateChannelInviteAsync(Snowflake, Optional<TimeSpan>, Optional<int>, Optional<bool>, Optional<bool>, Optional<InviteTarget>, Optional<Snowflake>, Optional<Snowflake>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateChannelInviteAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<System.TimeSpan>, Remora.Rest.Core.Optional<int>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.InviteTarget>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.CreateChannelInviteAsync(Snowflake, Optional(Of TimeSpan), Optional(Of Integer), Optional(Of Boolean), Optional(Of Boolean), Optional(Of InviteTarget), Optional(Of Snowflake), Optional(Of Snowflake), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateChannelInviteAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of System.TimeSpan), Remora.Rest.Core.Optional(Of Integer), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.InviteTarget), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: CreateChannelInviteAsync(Snowflake, Optional(Of TimeSpan), Optional(Of Integer), Optional(Of Boolean), Optional(Of Boolean), Optional(Of InviteTarget), Optional(Of Snowflake), Optional(Of Snowflake), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateChannelInviteAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.TimeSpan},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.InviteTarget},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: CreateChannelInviteAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_CreateChannelInviteAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_TimeSpan__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_InviteTarget__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.InviteTarget
    name: InviteTarget
    href: Remora.Discord.API.Abstractions.Objects.InviteTarget.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.CreateChannelInviteAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.TimeSpan},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.InviteTarget},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: CreateChannelInviteAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_CreateChannelInviteAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_TimeSpan__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_InviteTarget__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.InviteTarget
    name: InviteTarget
    href: Remora.Discord.API.Abstractions.Objects.InviteTarget.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Optional{System.TimeSpan}
  commentId: T:Remora.Rest.Core.Optional{System.TimeSpan}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: Optional<TimeSpan>
  nameWithType: Optional<TimeSpan>
  fullName: Remora.Rest.Core.Optional<System.TimeSpan>
  nameWithType.vb: Optional(Of TimeSpan)
  fullName.vb: Remora.Rest.Core.Optional(Of System.TimeSpan)
  name.vb: Optional(Of TimeSpan)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.InviteTarget}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.InviteTarget}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.InviteTarget.html
  name: Optional<InviteTarget>
  nameWithType: Optional<InviteTarget>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.InviteTarget>
  nameWithType.vb: Optional(Of InviteTarget)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.InviteTarget)
  name.vb: Optional(Of InviteTarget)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.InviteTarget
    name: InviteTarget
    href: Remora.Discord.API.Abstractions.Objects.InviteTarget.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.InviteTarget
    name: InviteTarget
    href: Remora.Discord.API.Abstractions.Objects.InviteTarget.html
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IInvite}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IInvite}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IInvite>>
  nameWithType: Task<Result<IInvite>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IInvite>>
  nameWithType.vb: Task(Of Result(Of IInvite))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IInvite))
  name.vb: Task(Of Result(Of IInvite))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IInvite
    name: IInvite
    href: Remora.Discord.API.Abstractions.Objects.IInvite.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IInvite
    name: IInvite
    href: Remora.Discord.API.Abstractions.Objects.IInvite.html
  - name: )
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteChannelPermissionAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteChannelPermissionAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_DeleteChannelPermissionAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: DeleteChannelPermissionAsync
  nameWithType: DiscordRestChannelAPI.DeleteChannelPermissionAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.DeleteChannelPermissionAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteChannelPermissionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteChannelPermissionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteChannelPermissionAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: DeleteChannelPermissionAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.DeleteChannelPermissionAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteChannelPermissionAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.DeleteChannelPermissionAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteChannelPermissionAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: DeleteChannelPermissionAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteChannelPermissionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: DeleteChannelPermissionAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteChannelPermissionAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.DeleteChannelPermissionAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: DeleteChannelPermissionAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_DeleteChannelPermissionAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.FollowAnnouncementChannelAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.FollowAnnouncementChannelAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_FollowAnnouncementChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: FollowAnnouncementChannelAsync
  nameWithType: DiscordRestChannelAPI.FollowAnnouncementChannelAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.FollowAnnouncementChannelAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.FollowAnnouncementChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.FollowAnnouncementChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_FollowAnnouncementChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: FollowAnnouncementChannelAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.FollowAnnouncementChannelAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.FollowAnnouncementChannelAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.FollowAnnouncementChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: FollowAnnouncementChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_FollowAnnouncementChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.FollowAnnouncementChannelAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: FollowAnnouncementChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_FollowAnnouncementChannelAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IFollowedChannel}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IFollowedChannel}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IFollowedChannel>>
  nameWithType: Task<Result<IFollowedChannel>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IFollowedChannel>>
  nameWithType.vb: Task(Of Result(Of IFollowedChannel))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IFollowedChannel))
  name.vb: Task(Of Result(Of IFollowedChannel))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IFollowedChannel
    name: IFollowedChannel
    href: Remora.Discord.API.Abstractions.Objects.IFollowedChannel.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IFollowedChannel
    name: IFollowedChannel
    href: Remora.Discord.API.Abstractions.Objects.IFollowedChannel.html
  - name: )
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.TriggerTypingIndicatorAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.TriggerTypingIndicatorAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_TriggerTypingIndicatorAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: TriggerTypingIndicatorAsync
  nameWithType: DiscordRestChannelAPI.TriggerTypingIndicatorAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.TriggerTypingIndicatorAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.TriggerTypingIndicatorAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.TriggerTypingIndicatorAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_TriggerTypingIndicatorAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: TriggerTypingIndicatorAsync(Snowflake, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.TriggerTypingIndicatorAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.TriggerTypingIndicatorAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.TriggerTypingIndicatorAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: TriggerTypingIndicatorAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_TriggerTypingIndicatorAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.TriggerTypingIndicatorAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: TriggerTypingIndicatorAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_TriggerTypingIndicatorAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetPinnedMessagesAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.GetPinnedMessagesAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_GetPinnedMessagesAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetPinnedMessagesAsync
  nameWithType: DiscordRestChannelAPI.GetPinnedMessagesAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetPinnedMessagesAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetPinnedMessagesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetPinnedMessagesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetPinnedMessagesAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetPinnedMessagesAsync(Snowflake, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.GetPinnedMessagesAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetPinnedMessagesAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetPinnedMessagesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetPinnedMessagesAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetPinnedMessagesAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetPinnedMessagesAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetPinnedMessagesAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetPinnedMessagesAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.PinMessageAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.PinMessageAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_PinMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: PinMessageAsync
  nameWithType: DiscordRestChannelAPI.PinMessageAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.PinMessageAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.PinMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.PinMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_PinMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: PinMessageAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.PinMessageAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.PinMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.PinMessageAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.PinMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: PinMessageAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.PinMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: PinMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_PinMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.PinMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: PinMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_PinMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.UnpinMessageAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.UnpinMessageAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_UnpinMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: UnpinMessageAsync
  nameWithType: DiscordRestChannelAPI.UnpinMessageAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.UnpinMessageAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.UnpinMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.UnpinMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_UnpinMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: UnpinMessageAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.UnpinMessageAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.UnpinMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.UnpinMessageAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.UnpinMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: UnpinMessageAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.UnpinMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: UnpinMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_UnpinMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.UnpinMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: UnpinMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_UnpinMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.GroupDMAddRecipientAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.GroupDMAddRecipientAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_GroupDMAddRecipientAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: GroupDMAddRecipientAsync
  nameWithType: DiscordRestChannelAPI.GroupDMAddRecipientAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.GroupDMAddRecipientAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GroupDMAddRecipientAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GroupDMAddRecipientAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GroupDMAddRecipientAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: GroupDMAddRecipientAsync(Snowflake, Snowflake, string, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.GroupDMAddRecipientAsync(Snowflake, Snowflake, string, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GroupDMAddRecipientAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.GroupDMAddRecipientAsync(Snowflake, Snowflake, String, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GroupDMAddRecipientAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: GroupDMAddRecipientAsync(Snowflake, Snowflake, String, Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GroupDMAddRecipientAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: GroupDMAddRecipientAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GroupDMAddRecipientAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GroupDMAddRecipientAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: GroupDMAddRecipientAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GroupDMAddRecipientAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.GroupDMRemoveRecipientAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.GroupDMRemoveRecipientAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_GroupDMRemoveRecipientAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GroupDMRemoveRecipientAsync
  nameWithType: DiscordRestChannelAPI.GroupDMRemoveRecipientAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.GroupDMRemoveRecipientAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GroupDMRemoveRecipientAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GroupDMRemoveRecipientAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GroupDMRemoveRecipientAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GroupDMRemoveRecipientAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.GroupDMRemoveRecipientAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GroupDMRemoveRecipientAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GroupDMRemoveRecipientAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GroupDMRemoveRecipientAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GroupDMRemoveRecipientAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GroupDMRemoveRecipientAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GroupDMRemoveRecipientAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GroupDMRemoveRecipientAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadFromMessageAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadFromMessageAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_StartThreadFromMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: StartThreadFromMessageAsync
  nameWithType: DiscordRestChannelAPI.StartThreadFromMessageAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadFromMessageAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadFromMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadFromMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_StartThreadFromMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: StartThreadFromMessageAsync(Snowflake, Snowflake, string, Optional<AutoArchiveDuration>, Optional<int?>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.StartThreadFromMessageAsync(Snowflake, Snowflake, string, Optional<AutoArchiveDuration>, Optional<int?>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadFromMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.StartThreadFromMessageAsync(Snowflake, Snowflake, String, Optional(Of AutoArchiveDuration), Optional(Of Integer?), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadFromMessageAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: StartThreadFromMessageAsync(Snowflake, Snowflake, String, Optional(Of AutoArchiveDuration), Optional(Of Integer?), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadFromMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: StartThreadFromMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_StartThreadFromMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadFromMessageAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: StartThreadFromMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_StartThreadFromMessageAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.ChannelType.PrivateThread
  commentId: F:Remora.Discord.API.Abstractions.Objects.ChannelType.PrivateThread
  href: Remora.Discord.API.Abstractions.Objects.ChannelType.html#Remora_Discord_API_Abstractions_Objects_ChannelType_PrivateThread
  name: PrivateThread
  nameWithType: ChannelType.PrivateThread
  fullName: Remora.Discord.API.Abstractions.Objects.ChannelType.PrivateThread
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadWithoutMessageAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadWithoutMessageAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_StartThreadWithoutMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Discord_API_Abstractions_Objects_ChannelType_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: StartThreadWithoutMessageAsync
  nameWithType: DiscordRestChannelAPI.StartThreadWithoutMessageAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadWithoutMessageAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadWithoutMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Discord.API.Abstractions.Objects.ChannelType,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadWithoutMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Discord.API.Abstractions.Objects.ChannelType,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_StartThreadWithoutMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Discord_API_Abstractions_Objects_ChannelType_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: StartThreadWithoutMessageAsync(Snowflake, string, ChannelType, Optional<AutoArchiveDuration>, Optional<bool>, Optional<int?>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.StartThreadWithoutMessageAsync(Snowflake, string, ChannelType, Optional<AutoArchiveDuration>, Optional<bool>, Optional<int?>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadWithoutMessageAsync(Remora.Rest.Core.Snowflake, string, Remora.Discord.API.Abstractions.Objects.ChannelType, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.StartThreadWithoutMessageAsync(Snowflake, String, ChannelType, Optional(Of AutoArchiveDuration), Optional(Of Boolean), Optional(Of Integer?), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadWithoutMessageAsync(Remora.Rest.Core.Snowflake, String, Remora.Discord.API.Abstractions.Objects.ChannelType, Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: StartThreadWithoutMessageAsync(Snowflake, String, ChannelType, Optional(Of AutoArchiveDuration), Optional(Of Boolean), Optional(Of Integer?), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadWithoutMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Discord.API.Abstractions.Objects.ChannelType,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: StartThreadWithoutMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_StartThreadWithoutMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Discord_API_Abstractions_Objects_ChannelType_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelType
    name: ChannelType
    href: Remora.Discord.API.Abstractions.Objects.ChannelType.html
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadWithoutMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Discord.API.Abstractions.Objects.ChannelType,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: StartThreadWithoutMessageAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_StartThreadWithoutMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Discord_API_Abstractions_Objects_ChannelType_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ChannelType
    name: ChannelType
    href: Remora.Discord.API.Abstractions.Objects.ChannelType.html
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.ChannelType
  commentId: T:Remora.Discord.API.Abstractions.Objects.ChannelType
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.ChannelType.html
  name: ChannelType
  nameWithType: ChannelType
  fullName: Remora.Discord.API.Abstractions.Objects.ChannelType
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadInForumChannelAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadInForumChannelAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_StartThreadInForumChannelAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Rest_FileData___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_MessageFlags__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: StartThreadInForumChannelAsync
  nameWithType: DiscordRestChannelAPI.StartThreadInForumChannelAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.StartThreadInForumChannelAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Rest.FileData}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Rest.FileData}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_StartThreadInForumChannelAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Rest_FileData___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_MessageFlags__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: StartThreadInForumChannelAsync(Snowflake, string, Optional<AutoArchiveDuration>, Optional<int?>, Optional<string>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<Snowflake>>, Optional<IReadOnlyList<FileData>>, Optional<MessageFlags>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.StartThreadInForumChannelAsync(Snowflake, string, Optional<AutoArchiveDuration>, Optional<int?>, Optional<string>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<Snowflake>>, Optional<IReadOnlyList<FileData>>, Optional<MessageFlags>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration>, Remora.Rest.Core.Optional<int?>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmbed>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IAllowedMentions>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessageComponent>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Rest.FileData>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.MessageFlags>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.StartThreadInForumChannelAsync(Snowflake, String, Optional(Of AutoArchiveDuration), Optional(Of Integer?), Optional(Of String), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of IReadOnlyList(Of FileData)), Optional(Of MessageFlags), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration), Remora.Rest.Core.Optional(Of Integer?), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmbed)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IAllowedMentions), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessageComponent)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Rest.FileData)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.MessageFlags), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: StartThreadInForumChannelAsync(Snowflake, String, Optional(Of AutoArchiveDuration), Optional(Of Integer?), Optional(Of String), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of IReadOnlyList(Of FileData)), Optional(Of MessageFlags), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Rest.FileData}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: StartThreadInForumChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_StartThreadInForumChannelAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Rest_FileData___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_MessageFlags__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
    href: Remora.Discord.API.Abstractions.Objects.IEmbed.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
    href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
    href: Remora.Discord.API.Abstractions.Objects.IMessageComponent.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
    href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.StartThreadInForumChannelAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration},Remora.Rest.Core.Optional{System.Nullable{System.Int32}},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Rest.FileData}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: StartThreadInForumChannelAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_StartThreadInForumChannelAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_AutoArchiveDuration__Remora_Rest_Core_Optional_System_Nullable_System_Int32___Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Rest_FileData___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_MessageFlags__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration
    name: AutoArchiveDuration
    href: Remora.Discord.API.Abstractions.Objects.AutoArchiveDuration.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
    href: Remora.Discord.API.Abstractions.Objects.IEmbed.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
    href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
    href: Remora.Discord.API.Abstractions.Objects.IMessageComponent.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
    href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Rest.FileData}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Rest.FileData}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<FileData>>
  nameWithType: Optional<IReadOnlyList<FileData>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Rest.FileData>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of FileData))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Rest.FileData))
  name.vb: Optional(Of IReadOnlyList(Of FileData))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: )
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.JoinThreadAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.JoinThreadAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_JoinThreadAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: JoinThreadAsync
  nameWithType: DiscordRestChannelAPI.JoinThreadAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.JoinThreadAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.JoinThreadAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.JoinThreadAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_JoinThreadAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: JoinThreadAsync(Snowflake, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.JoinThreadAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.JoinThreadAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.JoinThreadAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: JoinThreadAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_JoinThreadAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.JoinThreadAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: JoinThreadAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_JoinThreadAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.AddThreadMemberAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.AddThreadMemberAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_AddThreadMemberAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: AddThreadMemberAsync
  nameWithType: DiscordRestChannelAPI.AddThreadMemberAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.AddThreadMemberAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.AddThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.AddThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_AddThreadMemberAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: AddThreadMemberAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.AddThreadMemberAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.AddThreadMemberAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.AddThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: AddThreadMemberAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_AddThreadMemberAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.AddThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: AddThreadMemberAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_AddThreadMemberAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.LeaveThreadAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.LeaveThreadAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_LeaveThreadAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: LeaveThreadAsync
  nameWithType: DiscordRestChannelAPI.LeaveThreadAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.LeaveThreadAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.LeaveThreadAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.LeaveThreadAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_LeaveThreadAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: LeaveThreadAsync(Snowflake, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.LeaveThreadAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.LeaveThreadAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.LeaveThreadAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: LeaveThreadAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_LeaveThreadAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.LeaveThreadAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: LeaveThreadAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_LeaveThreadAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.RemoveThreadMemberAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.RemoveThreadMemberAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_RemoveThreadMemberAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: RemoveThreadMemberAsync
  nameWithType: DiscordRestChannelAPI.RemoveThreadMemberAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.RemoveThreadMemberAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.RemoveThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.RemoveThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_RemoveThreadMemberAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: RemoveThreadMemberAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.RemoveThreadMemberAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.RemoveThreadMemberAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.RemoveThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: RemoveThreadMemberAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_RemoveThreadMemberAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.RemoveThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: RemoveThreadMemberAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_RemoveThreadMemberAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.IThreadMember.Member
  commentId: P:Remora.Discord.API.Abstractions.Objects.IThreadMember.Member
  parent: Remora.Discord.API.Abstractions.Objects.IThreadMember
  href: Remora.Discord.API.Abstractions.Objects.IThreadMember.html#Remora_Discord_API_Abstractions_Objects_IThreadMember_Member
  name: Member
  nameWithType: IThreadMember.Member
  fullName: Remora.Discord.API.Abstractions.Objects.IThreadMember.Member
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetThreadMemberAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.GetThreadMemberAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_GetThreadMemberAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_Boolean__System_Threading_CancellationToken_
  name: GetThreadMemberAsync
  nameWithType: DiscordRestChannelAPI.GetThreadMemberAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.GetThreadMemberAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetThreadMemberAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_Boolean__System_Threading_CancellationToken_
  name: GetThreadMemberAsync(Snowflake, Snowflake, Optional<bool>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.GetThreadMemberAsync(Snowflake, Snowflake, Optional<bool>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetThreadMemberAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<bool>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.GetThreadMemberAsync(Snowflake, Snowflake, Optional(Of Boolean), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetThreadMemberAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Boolean), System.Threading.CancellationToken)
  name.vb: GetThreadMemberAsync(Snowflake, Snowflake, Optional(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},System.Threading.CancellationToken)
    name: GetThreadMemberAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetThreadMemberAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_Boolean__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.GetThreadMemberAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},System.Threading.CancellationToken)
    name: GetThreadMemberAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_GetThreadMemberAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_Boolean__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IThreadMember}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IThreadMember}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IThreadMember>>
  nameWithType: Task<Result<IThreadMember>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IThreadMember>>
  nameWithType.vb: Task(Of Result(Of IThreadMember))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IThreadMember))
  name.vb: Task(Of Result(Of IThreadMember))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IThreadMember
    name: IThreadMember
    href: Remora.Discord.API.Abstractions.Objects.IThreadMember.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IThreadMember
    name: IThreadMember
    href: Remora.Discord.API.Abstractions.Objects.IThreadMember.html
  - name: )
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.IThreadMember
  commentId: T:Remora.Discord.API.Abstractions.Objects.IThreadMember
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IThreadMember.html
  name: IThreadMember
  nameWithType: IThreadMember
  fullName: Remora.Discord.API.Abstractions.Objects.IThreadMember
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListThreadMembersAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.ListThreadMembersAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_ListThreadMembersAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  name: ListThreadMembersAsync
  nameWithType: DiscordRestChannelAPI.ListThreadMembersAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListThreadMembersAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListThreadMembersAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListThreadMembersAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ListThreadMembersAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  name: ListThreadMembersAsync(Snowflake, Optional<bool>, Optional<Snowflake>, Optional<int>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.ListThreadMembersAsync(Snowflake, Optional<bool>, Optional<Snowflake>, Optional<int>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListThreadMembersAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<int>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.ListThreadMembersAsync(Snowflake, Optional(Of Boolean), Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListThreadMembersAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Integer), System.Threading.CancellationToken)
  name.vb: ListThreadMembersAsync(Snowflake, Optional(Of Boolean), Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListThreadMembersAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
    name: ListThreadMembersAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ListThreadMembersAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListThreadMembersAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
    name: ListThreadMembersAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ListThreadMembersAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IThreadMember}}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IThreadMember}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IReadOnlyList<IThreadMember>>>
  nameWithType: Task<Result<IReadOnlyList<IThreadMember>>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IThreadMember>>>
  nameWithType.vb: Task(Of Result(Of IReadOnlyList(Of IThreadMember)))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IThreadMember)))
  name.vb: Task(Of Result(Of IReadOnlyList(Of IThreadMember)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IThreadMember
    name: IThreadMember
    href: Remora.Discord.API.Abstractions.Objects.IThreadMember.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IThreadMember
    name: IThreadMember
    href: Remora.Discord.API.Abstractions.Objects.IThreadMember.html
  - name: )
  - name: )
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListPublicArchivedThreadsAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.ListPublicArchivedThreadsAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_ListPublicArchivedThreadsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_DateTimeOffset__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  name: ListPublicArchivedThreadsAsync
  nameWithType: DiscordRestChannelAPI.ListPublicArchivedThreadsAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListPublicArchivedThreadsAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListPublicArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.DateTimeOffset},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListPublicArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.DateTimeOffset},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ListPublicArchivedThreadsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_DateTimeOffset__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  name: ListPublicArchivedThreadsAsync(Snowflake, Optional<DateTimeOffset>, Optional<int>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.ListPublicArchivedThreadsAsync(Snowflake, Optional<DateTimeOffset>, Optional<int>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListPublicArchivedThreadsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<System.DateTimeOffset>, Remora.Rest.Core.Optional<int>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.ListPublicArchivedThreadsAsync(Snowflake, Optional(Of DateTimeOffset), Optional(Of Integer), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListPublicArchivedThreadsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of System.DateTimeOffset), Remora.Rest.Core.Optional(Of Integer), System.Threading.CancellationToken)
  name.vb: ListPublicArchivedThreadsAsync(Snowflake, Optional(Of DateTimeOffset), Optional(Of Integer), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListPublicArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.DateTimeOffset},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
    name: ListPublicArchivedThreadsAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ListPublicArchivedThreadsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_DateTimeOffset__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListPublicArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.DateTimeOffset},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
    name: ListPublicArchivedThreadsAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ListPublicArchivedThreadsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_DateTimeOffset__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Optional{System.DateTimeOffset}
  commentId: T:Remora.Rest.Core.Optional{System.DateTimeOffset}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: Optional<DateTimeOffset>
  nameWithType: Optional<DateTimeOffset>
  fullName: Remora.Rest.Core.Optional<System.DateTimeOffset>
  nameWithType.vb: Optional(Of DateTimeOffset)
  fullName.vb: Remora.Rest.Core.Optional(Of System.DateTimeOffset)
  name.vb: Optional(Of DateTimeOffset)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannelThreadQueryResponse}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannelThreadQueryResponse}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IChannelThreadQueryResponse>>
  nameWithType: Task<Result<IChannelThreadQueryResponse>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IChannelThreadQueryResponse>>
  nameWithType.vb: Task(Of Result(Of IChannelThreadQueryResponse))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IChannelThreadQueryResponse))
  name.vb: Task(Of Result(Of IChannelThreadQueryResponse))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IChannelThreadQueryResponse
    name: IChannelThreadQueryResponse
    href: Remora.Discord.API.Abstractions.Objects.IChannelThreadQueryResponse.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IChannelThreadQueryResponse
    name: IChannelThreadQueryResponse
    href: Remora.Discord.API.Abstractions.Objects.IChannelThreadQueryResponse.html
  - name: )
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListPrivateArchivedThreadsAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.ListPrivateArchivedThreadsAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_ListPrivateArchivedThreadsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_DateTimeOffset__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  name: ListPrivateArchivedThreadsAsync
  nameWithType: DiscordRestChannelAPI.ListPrivateArchivedThreadsAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListPrivateArchivedThreadsAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.DateTimeOffset},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.DateTimeOffset},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ListPrivateArchivedThreadsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_DateTimeOffset__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  name: ListPrivateArchivedThreadsAsync(Snowflake, Optional<DateTimeOffset>, Optional<int>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.ListPrivateArchivedThreadsAsync(Snowflake, Optional<DateTimeOffset>, Optional<int>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<System.DateTimeOffset>, Remora.Rest.Core.Optional<int>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.ListPrivateArchivedThreadsAsync(Snowflake, Optional(Of DateTimeOffset), Optional(Of Integer), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of System.DateTimeOffset), Remora.Rest.Core.Optional(Of Integer), System.Threading.CancellationToken)
  name.vb: ListPrivateArchivedThreadsAsync(Snowflake, Optional(Of DateTimeOffset), Optional(Of Integer), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.DateTimeOffset},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
    name: ListPrivateArchivedThreadsAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ListPrivateArchivedThreadsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_DateTimeOffset__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.DateTimeOffset},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
    name: ListPrivateArchivedThreadsAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ListPrivateArchivedThreadsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_DateTimeOffset__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync
  href: Remora.Discord.Rest.API.DiscordRestChannelAPI.html#Remora_Discord_Rest_API_DiscordRestChannelAPI_ListJoinedPrivateArchivedThreadsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  name: ListJoinedPrivateArchivedThreadsAsync
  nameWithType: DiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync
  fullName: Remora.Discord.Rest.API.DiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ListJoinedPrivateArchivedThreadsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  name: ListJoinedPrivateArchivedThreadsAsync(Snowflake, Optional<Snowflake>, Optional<int>, CancellationToken)
  nameWithType: IDiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync(Snowflake, Optional<Snowflake>, Optional<int>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<int>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync(Snowflake, Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Integer), System.Threading.CancellationToken)
  name.vb: ListJoinedPrivateArchivedThreadsAsync(Snowflake, Optional(Of Snowflake), Optional(Of Integer), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
    name: ListJoinedPrivateArchivedThreadsAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ListJoinedPrivateArchivedThreadsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.ListJoinedPrivateArchivedThreadsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},System.Threading.CancellationToken)
    name: ListJoinedPrivateArchivedThreadsAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_ListJoinedPrivateArchivedThreadsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
