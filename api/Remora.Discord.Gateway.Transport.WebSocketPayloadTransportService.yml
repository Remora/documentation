### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService
  commentId: T:Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService
  id: WebSocketPayloadTransportService
  parent: Remora.Discord.Gateway.Transport
  children:
  - Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.#ctor(System.IServiceProvider,System.Text.Json.JsonSerializerOptions,Microsoft.Extensions.Logging.ILogger{Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService})
  - Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  - Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.DisconnectAsync(System.Boolean,System.Threading.CancellationToken)
  - Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.DisposeAsync
  - Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.IsConnected
  - Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
  - Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: WebSocketPayloadTransportService
  nameWithType: WebSocketPayloadTransportService
  fullName: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService
  type: Class
  source:
    id: WebSocketPayloadTransportService
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Gateway\Transport\WebSocketPayloadTransportService.cs
    startLine: 51
  assemblies:
  - Remora.Discord.Gateway
  namespace: Remora.Discord.Gateway.Transport
  summary: Represents a websocket-based transport service.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public class WebSocketPayloadTransportService : IPayloadTransportService, IAsyncDisposable
    content.vb: >-
      <PublicAPI>

      Public Class WebSocketPayloadTransportService Implements IPayloadTransportService, IAsyncDisposable
  inheritance:
  - System.Object
  implements:
  - Remora.Discord.Gateway.Transport.IPayloadTransportService
  - System.IAsyncDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.IsConnected
  commentId: P:Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.IsConnected
  id: IsConnected
  parent: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService
  langs:
  - csharp
  - vb
  name: IsConnected
  nameWithType: WebSocketPayloadTransportService.IsConnected
  fullName: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.IsConnected
  type: Property
  source:
    id: IsConnected
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Gateway\Transport\WebSocketPayloadTransportService.cs
    startLine: 67
  assemblies:
  - Remora.Discord.Gateway
  namespace: Remora.Discord.Gateway.Transport
  summary: Gets a value indicating whether the service has successfully connected.
  example: []
  syntax:
    content: public bool IsConnected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsConnected As Boolean
  overload: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.IsConnected*
  implements:
  - Remora.Discord.Gateway.Transport.IPayloadTransportService.IsConnected
- uid: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.#ctor(System.IServiceProvider,System.Text.Json.JsonSerializerOptions,Microsoft.Extensions.Logging.ILogger{Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService})
  commentId: M:Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.#ctor(System.IServiceProvider,System.Text.Json.JsonSerializerOptions,Microsoft.Extensions.Logging.ILogger{Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService})
  id: '#ctor(System.IServiceProvider,System.Text.Json.JsonSerializerOptions,Microsoft.Extensions.Logging.ILogger{Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService})'
  parent: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService
  langs:
  - csharp
  - vb
  name: WebSocketPayloadTransportService(IServiceProvider, JsonSerializerOptions, ILogger<WebSocketPayloadTransportService>)
  nameWithType: WebSocketPayloadTransportService.WebSocketPayloadTransportService(IServiceProvider, JsonSerializerOptions, ILogger<WebSocketPayloadTransportService>)
  fullName: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.WebSocketPayloadTransportService(System.IServiceProvider, System.Text.Json.JsonSerializerOptions, Microsoft.Extensions.Logging.ILogger<Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService>)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Gateway\Transport\WebSocketPayloadTransportService.cs
    startLine: 75
  assemblies:
  - Remora.Discord.Gateway
  namespace: Remora.Discord.Gateway.Transport
  summary: Initializes a new instance of the <xref href="Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public WebSocketPayloadTransportService(IServiceProvider services, JsonSerializerOptions jsonOptions, ILogger<WebSocketPayloadTransportService> log)
    parameters:
    - id: services
      type: System.IServiceProvider
      description: The services available to the application.
    - id: jsonOptions
      type: System.Text.Json.JsonSerializerOptions
      description: The JSON options.
    - id: log
      type: Microsoft.Extensions.Logging.ILogger{Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService}
      description: The logging instance for this class.
    content.vb: Public Sub New(services As IServiceProvider, jsonOptions As JsonSerializerOptions, log As ILogger(Of WebSocketPayloadTransportService))
  overload: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.#ctor*
  nameWithType.vb: WebSocketPayloadTransportService.New(IServiceProvider, JsonSerializerOptions, ILogger(Of WebSocketPayloadTransportService))
  fullName.vb: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.New(System.IServiceProvider, System.Text.Json.JsonSerializerOptions, Microsoft.Extensions.Logging.ILogger(Of Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService))
  name.vb: New(IServiceProvider, JsonSerializerOptions, ILogger(Of WebSocketPayloadTransportService))
- uid: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  id: ConnectAsync(System.Uri,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService
  langs:
  - csharp
  - vb
  name: ConnectAsync(Uri, CancellationToken)
  nameWithType: WebSocketPayloadTransportService.ConnectAsync(Uri, CancellationToken)
  fullName: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.ConnectAsync(System.Uri, System.Threading.CancellationToken)
  type: Method
  source:
    id: ConnectAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Gateway\Transport\WebSocketPayloadTransportService.cs
    startLine: 94
  assemblies:
  - Remora.Discord.Gateway
  namespace: Remora.Discord.Gateway.Transport
  summary: Connects to the transport endpoint, enabling I/O operations.
  example: []
  syntax:
    content: public Task<Result> ConnectAsync(Uri endpoint, CancellationToken ct = default)
    parameters:
    - id: endpoint
      type: System.Uri
      description: The endpoint to connect to.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A connection result which may or may not have succeeded.
    content.vb: Public Function ConnectAsync(endpoint As Uri, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.ConnectAsync*
  implements:
  - Remora.Discord.Gateway.Transport.IPayloadTransportService.ConnectAsync(System.Uri,System.Threading.CancellationToken)
- uid: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload,System.Threading.CancellationToken)
  id: SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService
  langs:
  - csharp
  - vb
  name: SendPayloadAsync(IPayload, CancellationToken)
  nameWithType: WebSocketPayloadTransportService.SendPayloadAsync(IPayload, CancellationToken)
  fullName: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload, System.Threading.CancellationToken)
  type: Method
  source:
    id: SendPayloadAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Gateway\Transport\WebSocketPayloadTransportService.cs
    startLine: 156
  assemblies:
  - Remora.Discord.Gateway
  namespace: Remora.Discord.Gateway.Transport
  summary: Asynchronously sends a payload.
  remarks: This method should be thread-safe in conjunction with <xref href="Remora.Discord.Gateway.Transport.IPayloadTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ValueTask<Result> SendPayloadAsync(IPayload payload, CancellationToken ct = default)
    parameters:
    - id: payload
      type: Remora.Discord.API.Abstractions.Gateway.IPayload
      description: The payload.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.ValueTask{Remora.Results.Result}
      description: A send result which may or may not have succeeded.
    content.vb: Public Function SendPayloadAsync(payload As IPayload, ct As CancellationToken = Nothing) As ValueTask(Of Result)
  overload: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.SendPayloadAsync*
  implements:
  - Remora.Discord.Gateway.Transport.IPayloadTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload,System.Threading.CancellationToken)
- uid: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
  id: ReceivePayloadAsync(System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService
  langs:
  - csharp
  - vb
  name: ReceivePayloadAsync(CancellationToken)
  nameWithType: WebSocketPayloadTransportService.ReceivePayloadAsync(CancellationToken)
  fullName: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
  type: Method
  source:
    id: ReceivePayloadAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Gateway\Transport\WebSocketPayloadTransportService.cs
    startLine: 207
  assemblies:
  - Remora.Discord.Gateway
  namespace: Remora.Discord.Gateway.Transport
  summary: Asynchronously receives a payload.
  remarks: This method should be thread-safe in conjunction with <xref href="Remora.Discord.Gateway.Transport.IPayloadTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public ValueTask<Result<IPayload>> ReceivePayloadAsync(CancellationToken ct = default)
    parameters:
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.ValueTask{Remora.Results.Result{Remora.Discord.API.Abstractions.Gateway.IPayload}}
      description: A receive result which may or may not have succeeded.
    content.vb: Public Function ReceivePayloadAsync(ct As CancellationToken = Nothing) As ValueTask(Of Result(Of IPayload))
  overload: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.ReceivePayloadAsync*
  implements:
  - Remora.Discord.Gateway.Transport.IPayloadTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
- uid: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.DisconnectAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.DisconnectAsync(System.Boolean,System.Threading.CancellationToken)
  id: DisconnectAsync(System.Boolean,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService
  langs:
  - csharp
  - vb
  name: DisconnectAsync(bool, CancellationToken)
  nameWithType: WebSocketPayloadTransportService.DisconnectAsync(bool, CancellationToken)
  fullName: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.DisconnectAsync(bool, System.Threading.CancellationToken)
  type: Method
  source:
    id: DisconnectAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Gateway\Transport\WebSocketPayloadTransportService.cs
    startLine: 255
  assemblies:
  - Remora.Discord.Gateway
  namespace: Remora.Discord.Gateway.Transport
  summary: Disconnects from the transport endpoint.
  example: []
  syntax:
    content: public Task<Result> DisconnectAsync(bool reconnectionIntended, CancellationToken ct = default)
    parameters:
    - id: reconnectionIntended
      type: System.Boolean
      description: Whether reconnection is intended.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A connection result which may or may not have succeeded.
    content.vb: Public Function DisconnectAsync(reconnectionIntended As Boolean, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.DisconnectAsync*
  implements:
  - Remora.Discord.Gateway.Transport.IPayloadTransportService.DisconnectAsync(System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: WebSocketPayloadTransportService.DisconnectAsync(Boolean, CancellationToken)
  fullName.vb: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.DisconnectAsync(Boolean, System.Threading.CancellationToken)
  name.vb: DisconnectAsync(Boolean, CancellationToken)
- uid: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.DisposeAsync
  commentId: M:Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.DisposeAsync
  id: DisposeAsync
  parent: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService
  langs:
  - csharp
  - vb
  name: DisposeAsync()
  nameWithType: WebSocketPayloadTransportService.DisposeAsync()
  fullName: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.DisposeAsync()
  type: Method
  source:
    id: DisposeAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Gateway\Transport\WebSocketPayloadTransportService.cs
    startLine: 349
  assemblies:
  - Remora.Discord.Gateway
  namespace: Remora.Discord.Gateway.Transport
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously.
  example: []
  syntax:
    content: public ValueTask DisposeAsync()
    return:
      type: System.Threading.Tasks.ValueTask
      description: A task that represents the asynchronous dispose operation.
    content.vb: Public Function DisposeAsync() As ValueTask
  overload: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.DisposeAsync*
  implements:
  - System.IAsyncDisposable.DisposeAsync
references:
- uid: Remora.Discord.Gateway.Transport
  commentId: N:Remora.Discord.Gateway.Transport
  href: Remora.html
  name: Remora.Discord.Gateway.Transport
  nameWithType: Remora.Discord.Gateway.Transport
  fullName: Remora.Discord.Gateway.Transport
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Transport
    name: Transport
    href: Remora.Discord.Gateway.Transport.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Transport
    name: Transport
    href: Remora.Discord.Gateway.Transport.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Gateway.Transport.IPayloadTransportService
  commentId: T:Remora.Discord.Gateway.Transport.IPayloadTransportService
  parent: Remora.Discord.Gateway.Transport
  href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html
  name: IPayloadTransportService
  nameWithType: IPayloadTransportService
  fullName: Remora.Discord.Gateway.Transport.IPayloadTransportService
- uid: System.IAsyncDisposable
  commentId: T:System.IAsyncDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable
  name: IAsyncDisposable
  nameWithType: IAsyncDisposable
  fullName: System.IAsyncDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.IsConnected*
  commentId: Overload:Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.IsConnected
  href: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.html#Remora_Discord_Gateway_Transport_WebSocketPayloadTransportService_IsConnected
  name: IsConnected
  nameWithType: WebSocketPayloadTransportService.IsConnected
  fullName: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.IsConnected
- uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.IsConnected
  commentId: P:Remora.Discord.Gateway.Transport.IPayloadTransportService.IsConnected
  parent: Remora.Discord.Gateway.Transport.IPayloadTransportService
  href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_IsConnected
  name: IsConnected
  nameWithType: IPayloadTransportService.IsConnected
  fullName: Remora.Discord.Gateway.Transport.IPayloadTransportService.IsConnected
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService
  commentId: T:Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService
  href: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.html
  name: WebSocketPayloadTransportService
  nameWithType: WebSocketPayloadTransportService
  fullName: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService
- uid: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.#ctor*
  commentId: Overload:Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.#ctor
  href: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.html#Remora_Discord_Gateway_Transport_WebSocketPayloadTransportService__ctor_System_IServiceProvider_System_Text_Json_JsonSerializerOptions_Microsoft_Extensions_Logging_ILogger_Remora_Discord_Gateway_Transport_WebSocketPayloadTransportService__
  name: WebSocketPayloadTransportService
  nameWithType: WebSocketPayloadTransportService.WebSocketPayloadTransportService
  fullName: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.WebSocketPayloadTransportService
  nameWithType.vb: WebSocketPayloadTransportService.New
  fullName.vb: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.New
  name.vb: New
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Text.Json.JsonSerializerOptions
  commentId: T:System.Text.Json.JsonSerializerOptions
  parent: System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions
  name: JsonSerializerOptions
  nameWithType: JsonSerializerOptions
  fullName: System.Text.Json.JsonSerializerOptions
- uid: Microsoft.Extensions.Logging.ILogger{Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService}
  commentId: T:Microsoft.Extensions.Logging.ILogger{Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<WebSocketPayloadTransportService>
  nameWithType: ILogger<WebSocketPayloadTransportService>
  fullName: Microsoft.Extensions.Logging.ILogger<Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService>
  nameWithType.vb: ILogger(Of WebSocketPayloadTransportService)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService)
  name.vb: ILogger(Of WebSocketPayloadTransportService)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService
    name: WebSocketPayloadTransportService
    href: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService
    name: WebSocketPayloadTransportService
    href: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.html
  - name: )
- uid: System.Text.Json
  commentId: N:System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.Json
  nameWithType: System.Text.Json
  fullName: System.Text.Json
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.ConnectAsync*
  commentId: Overload:Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.ConnectAsync
  href: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.html#Remora_Discord_Gateway_Transport_WebSocketPayloadTransportService_ConnectAsync_System_Uri_System_Threading_CancellationToken_
  name: ConnectAsync
  nameWithType: WebSocketPayloadTransportService.ConnectAsync
  fullName: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.ConnectAsync
- uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Transport.IPayloadTransportService.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Transport.IPayloadTransportService
  isExternal: true
  href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_ConnectAsync_System_Uri_System_Threading_CancellationToken_
  name: ConnectAsync(Uri, CancellationToken)
  nameWithType: IPayloadTransportService.ConnectAsync(Uri, CancellationToken)
  fullName: Remora.Discord.Gateway.Transport.IPayloadTransportService.ConnectAsync(System.Uri, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.ConnectAsync(System.Uri,System.Threading.CancellationToken)
    name: ConnectAsync
    href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_ConnectAsync_System_Uri_System_Threading_CancellationToken_
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.ConnectAsync(System.Uri,System.Threading.CancellationToken)
    name: ConnectAsync
    href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_ConnectAsync_System_Uri_System_Threading_CancellationToken_
  - name: (
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Remora.Results.Result}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result>
  nameWithType: Task<Result>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result>
  nameWithType.vb: Task(Of Result)
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result)
  name.vb: Task(Of Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Transport.IPayloadTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Transport.IPayloadTransportService
  isExternal: true
  href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_ReceivePayloadAsync_System_Threading_CancellationToken_
  name: ReceivePayloadAsync(CancellationToken)
  nameWithType: IPayloadTransportService.ReceivePayloadAsync(CancellationToken)
  fullName: Remora.Discord.Gateway.Transport.IPayloadTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
    name: ReceivePayloadAsync
    href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_ReceivePayloadAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.ReceivePayloadAsync(System.Threading.CancellationToken)
    name: ReceivePayloadAsync
    href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_ReceivePayloadAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.SendPayloadAsync*
  commentId: Overload:Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.SendPayloadAsync
  href: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.html#Remora_Discord_Gateway_Transport_WebSocketPayloadTransportService_SendPayloadAsync_Remora_Discord_API_Abstractions_Gateway_IPayload_System_Threading_CancellationToken_
  name: SendPayloadAsync
  nameWithType: WebSocketPayloadTransportService.SendPayloadAsync
  fullName: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.SendPayloadAsync
- uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Transport.IPayloadTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Transport.IPayloadTransportService
  isExternal: true
  href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_SendPayloadAsync_Remora_Discord_API_Abstractions_Gateway_IPayload_System_Threading_CancellationToken_
  name: SendPayloadAsync(IPayload, CancellationToken)
  nameWithType: IPayloadTransportService.SendPayloadAsync(IPayload, CancellationToken)
  fullName: Remora.Discord.Gateway.Transport.IPayloadTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload,System.Threading.CancellationToken)
    name: SendPayloadAsync
    href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_SendPayloadAsync_Remora_Discord_API_Abstractions_Gateway_IPayload_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.IPayload
    name: IPayload
    href: Remora.Discord.API.Abstractions.Gateway.IPayload.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.SendPayloadAsync(Remora.Discord.API.Abstractions.Gateway.IPayload,System.Threading.CancellationToken)
    name: SendPayloadAsync
    href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_SendPayloadAsync_Remora_Discord_API_Abstractions_Gateway_IPayload_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.IPayload
    name: IPayload
    href: Remora.Discord.API.Abstractions.Gateway.IPayload.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Gateway.IPayload
  commentId: T:Remora.Discord.API.Abstractions.Gateway.IPayload
  parent: Remora.Discord.API.Abstractions.Gateway
  href: Remora.Discord.API.Abstractions.Gateway.IPayload.html
  name: IPayload
  nameWithType: IPayload
  fullName: Remora.Discord.API.Abstractions.Gateway.IPayload
- uid: System.Threading.Tasks.ValueTask{Remora.Results.Result}
  commentId: T:System.Threading.Tasks.ValueTask{Remora.Results.Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<Result>
  nameWithType: ValueTask<Result>
  fullName: System.Threading.Tasks.ValueTask<Remora.Results.Result>
  nameWithType.vb: ValueTask(Of Result)
  fullName.vb: System.Threading.Tasks.ValueTask(Of Remora.Results.Result)
  name.vb: ValueTask(Of Result)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: )
- uid: Remora.Discord.API.Abstractions.Gateway
  commentId: N:Remora.Discord.API.Abstractions.Gateway
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Gateway
  nameWithType: Remora.Discord.API.Abstractions.Gateway
  fullName: Remora.Discord.API.Abstractions.Gateway
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway
    name: Gateway
    href: Remora.Discord.API.Abstractions.Gateway.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway
    name: Gateway
    href: Remora.Discord.API.Abstractions.Gateway.html
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.ReceivePayloadAsync*
  commentId: Overload:Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.ReceivePayloadAsync
  href: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.html#Remora_Discord_Gateway_Transport_WebSocketPayloadTransportService_ReceivePayloadAsync_System_Threading_CancellationToken_
  name: ReceivePayloadAsync
  nameWithType: WebSocketPayloadTransportService.ReceivePayloadAsync
  fullName: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.ReceivePayloadAsync
- uid: System.Threading.Tasks.ValueTask{Remora.Results.Result{Remora.Discord.API.Abstractions.Gateway.IPayload}}
  commentId: T:System.Threading.Tasks.ValueTask{Remora.Results.Result{Remora.Discord.API.Abstractions.Gateway.IPayload}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<Result<IPayload>>
  nameWithType: ValueTask<Result<IPayload>>
  fullName: System.Threading.Tasks.ValueTask<Remora.Results.Result<Remora.Discord.API.Abstractions.Gateway.IPayload>>
  nameWithType.vb: ValueTask(Of Result(Of IPayload))
  fullName.vb: System.Threading.Tasks.ValueTask(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Gateway.IPayload))
  name.vb: ValueTask(Of Result(Of IPayload))
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Gateway.IPayload
    name: IPayload
    href: Remora.Discord.API.Abstractions.Gateway.IPayload.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Gateway.IPayload
    name: IPayload
    href: Remora.Discord.API.Abstractions.Gateway.IPayload.html
  - name: )
  - name: )
- uid: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.DisconnectAsync*
  commentId: Overload:Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.DisconnectAsync
  href: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.html#Remora_Discord_Gateway_Transport_WebSocketPayloadTransportService_DisconnectAsync_System_Boolean_System_Threading_CancellationToken_
  name: DisconnectAsync
  nameWithType: WebSocketPayloadTransportService.DisconnectAsync
  fullName: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.DisconnectAsync
- uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.DisconnectAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Transport.IPayloadTransportService.DisconnectAsync(System.Boolean,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Transport.IPayloadTransportService
  isExternal: true
  href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_DisconnectAsync_System_Boolean_System_Threading_CancellationToken_
  name: DisconnectAsync(bool, CancellationToken)
  nameWithType: IPayloadTransportService.DisconnectAsync(bool, CancellationToken)
  fullName: Remora.Discord.Gateway.Transport.IPayloadTransportService.DisconnectAsync(bool, System.Threading.CancellationToken)
  nameWithType.vb: IPayloadTransportService.DisconnectAsync(Boolean, CancellationToken)
  fullName.vb: Remora.Discord.Gateway.Transport.IPayloadTransportService.DisconnectAsync(Boolean, System.Threading.CancellationToken)
  name.vb: DisconnectAsync(Boolean, CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.DisconnectAsync(System.Boolean,System.Threading.CancellationToken)
    name: DisconnectAsync
    href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_DisconnectAsync_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Transport.IPayloadTransportService.DisconnectAsync(System.Boolean,System.Threading.CancellationToken)
    name: DisconnectAsync
    href: Remora.Discord.Gateway.Transport.IPayloadTransportService.html#Remora_Discord_Gateway_Transport_IPayloadTransportService_DisconnectAsync_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.DisposeAsync*
  commentId: Overload:Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.DisposeAsync
  href: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.html#Remora_Discord_Gateway_Transport_WebSocketPayloadTransportService_DisposeAsync
  name: DisposeAsync
  nameWithType: WebSocketPayloadTransportService.DisposeAsync
  fullName: Remora.Discord.Gateway.Transport.WebSocketPayloadTransportService.DisposeAsync
- uid: System.IAsyncDisposable.DisposeAsync
  commentId: M:System.IAsyncDisposable.DisposeAsync
  parent: System.IAsyncDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable.disposeasync
  name: DisposeAsync()
  nameWithType: IAsyncDisposable.DisposeAsync()
  fullName: System.IAsyncDisposable.DisposeAsync()
  spec.csharp:
  - uid: System.IAsyncDisposable.DisposeAsync
    name: DisposeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable.disposeasync
  - name: (
  - name: )
  spec.vb:
  - uid: System.IAsyncDisposable.DisposeAsync
    name: DisposeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable.disposeasync
  - name: (
  - name: )
- uid: System.Threading.Tasks.ValueTask
  commentId: T:System.Threading.Tasks.ValueTask
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask
  name: ValueTask
  nameWithType: ValueTask
  fullName: System.Threading.Tasks.ValueTask
