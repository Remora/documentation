### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions
  commentId: T:Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions
  id: RestRequestBuilderExtensions
  parent: Remora.Discord.Rest.Extensions
  children:
  - Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.AddAuditLogReason(Remora.Rest.RestRequestBuilder,Remora.Rest.Core.Optional{System.String})
  - Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.AddQueryParameter``1(Remora.Rest.RestRequestBuilder,System.String,Remora.Rest.Core.Optional{``0})
  - Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.SkipAuthorization(Remora.Rest.RestRequestBuilder)
  - Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.WithRateLimitContext(Remora.Rest.RestRequestBuilder,Remora.Discord.Caching.Abstractions.Services.ICacheProvider,System.Boolean)
  langs:
  - csharp
  - vb
  name: RestRequestBuilderExtensions
  nameWithType: RestRequestBuilderExtensions
  fullName: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions
  type: Class
  source:
    id: RestRequestBuilderExtensions
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\Extensions\RestRequestBuilderExtensions.cs
    startLine: 34
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.Extensions
  summary: Defines extensions to the <xref href="Remora.Rest.RestRequestBuilder" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static class RestRequestBuilderExtensions
    content.vb: >-
      <PublicAPI>

      Public Module RestRequestBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.AddAuditLogReason(Remora.Rest.RestRequestBuilder,Remora.Rest.Core.Optional{System.String})
  commentId: M:Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.AddAuditLogReason(Remora.Rest.RestRequestBuilder,Remora.Rest.Core.Optional{System.String})
  id: AddAuditLogReason(Remora.Rest.RestRequestBuilder,Remora.Rest.Core.Optional{System.String})
  isExtensionMethod: true
  parent: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddAuditLogReason(RestRequestBuilder, Optional<string>)
  nameWithType: RestRequestBuilderExtensions.AddAuditLogReason(RestRequestBuilder, Optional<string>)
  fullName: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.AddAuditLogReason(Remora.Rest.RestRequestBuilder, Remora.Rest.Core.Optional<string>)
  type: Method
  source:
    id: AddAuditLogReason
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\Extensions\RestRequestBuilderExtensions.cs
    startLine: 43
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.Extensions
  summary: Adds an audit log reason header to the request, provided the value is defined.
  example: []
  syntax:
    content: public static RestRequestBuilder AddAuditLogReason(this RestRequestBuilder builder, Optional<string> value)
    parameters:
    - id: builder
      type: Remora.Rest.RestRequestBuilder
      description: The request builder.
    - id: value
      type: Remora.Rest.Core.Optional{System.String}
      description: The value of the header.
    return:
      type: Remora.Rest.RestRequestBuilder
      description: The builder, potentially with the header.
    content.vb: Public Shared Function AddAuditLogReason(builder As RestRequestBuilder, value As [Optional](Of String)) As RestRequestBuilder
  overload: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.AddAuditLogReason*
  nameWithType.vb: RestRequestBuilderExtensions.AddAuditLogReason(RestRequestBuilder, Optional(Of String))
  fullName.vb: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.AddAuditLogReason(Remora.Rest.RestRequestBuilder, Remora.Rest.Core.Optional(Of String))
  name.vb: AddAuditLogReason(RestRequestBuilder, Optional(Of String))
- uid: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.WithRateLimitContext(Remora.Rest.RestRequestBuilder,Remora.Discord.Caching.Abstractions.Services.ICacheProvider,System.Boolean)
  commentId: M:Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.WithRateLimitContext(Remora.Rest.RestRequestBuilder,Remora.Discord.Caching.Abstractions.Services.ICacheProvider,System.Boolean)
  id: WithRateLimitContext(Remora.Rest.RestRequestBuilder,Remora.Discord.Caching.Abstractions.Services.ICacheProvider,System.Boolean)
  isExtensionMethod: true
  parent: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions
  langs:
  - csharp
  - vb
  name: WithRateLimitContext(RestRequestBuilder, ICacheProvider, bool)
  nameWithType: RestRequestBuilderExtensions.WithRateLimitContext(RestRequestBuilder, ICacheProvider, bool)
  fullName: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.WithRateLimitContext(Remora.Rest.RestRequestBuilder, Remora.Discord.Caching.Abstractions.Services.ICacheProvider, bool)
  type: Method
  source:
    id: WithRateLimitContext
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\Extensions\RestRequestBuilderExtensions.cs
    startLine: 57
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.Extensions
  summary: Sets up a Polly context with an endpoint for rate limiting purposes.
  example: []
  syntax:
    content: public static RestRequestBuilder WithRateLimitContext(this RestRequestBuilder builder, ICacheProvider cache, bool isExemptFromGlobalLimits = false)
    parameters:
    - id: builder
      type: Remora.Rest.RestRequestBuilder
      description: The request builder.
    - id: cache
      type: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
      description: The memory cache in use.
    - id: isExemptFromGlobalLimits
      type: System.Boolean
      description: Whether this request is exempt from global rate limits, and doesn't need to consider them.
    return:
      type: Remora.Rest.RestRequestBuilder
      description: The builder, with the context.
    content.vb: Public Shared Function WithRateLimitContext(builder As RestRequestBuilder, cache As ICacheProvider, isExemptFromGlobalLimits As Boolean = False) As RestRequestBuilder
  overload: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.WithRateLimitContext*
  nameWithType.vb: RestRequestBuilderExtensions.WithRateLimitContext(RestRequestBuilder, ICacheProvider, Boolean)
  fullName.vb: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.WithRateLimitContext(Remora.Rest.RestRequestBuilder, Remora.Discord.Caching.Abstractions.Services.ICacheProvider, Boolean)
  name.vb: WithRateLimitContext(RestRequestBuilder, ICacheProvider, Boolean)
- uid: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.SkipAuthorization(Remora.Rest.RestRequestBuilder)
  commentId: M:Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.SkipAuthorization(Remora.Rest.RestRequestBuilder)
  id: SkipAuthorization(Remora.Rest.RestRequestBuilder)
  isExtensionMethod: true
  parent: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions
  langs:
  - csharp
  - vb
  name: SkipAuthorization(RestRequestBuilder)
  nameWithType: RestRequestBuilderExtensions.SkipAuthorization(RestRequestBuilder)
  fullName: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.SkipAuthorization(Remora.Rest.RestRequestBuilder)
  type: Method
  source:
    id: SkipAuthorization
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\Extensions\RestRequestBuilderExtensions.cs
    startLine: 81
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.Extensions
  summary: Adds an property to the request, used for skipping the addition of the Authorization header.
  example: []
  syntax:
    content: public static RestRequestBuilder SkipAuthorization(this RestRequestBuilder builder)
    parameters:
    - id: builder
      type: Remora.Rest.RestRequestBuilder
      description: The request builder.
    return:
      type: Remora.Rest.RestRequestBuilder
      description: The builder, with the property.
    content.vb: Public Shared Function SkipAuthorization(builder As RestRequestBuilder) As RestRequestBuilder
  overload: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.SkipAuthorization*
- uid: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.AddQueryParameter``1(Remora.Rest.RestRequestBuilder,System.String,Remora.Rest.Core.Optional{``0})
  commentId: M:Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.AddQueryParameter``1(Remora.Rest.RestRequestBuilder,System.String,Remora.Rest.Core.Optional{``0})
  id: AddQueryParameter``1(Remora.Rest.RestRequestBuilder,System.String,Remora.Rest.Core.Optional{``0})
  isExtensionMethod: true
  parent: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddQueryParameter<T>(RestRequestBuilder, string, Optional<T>)
  nameWithType: RestRequestBuilderExtensions.AddQueryParameter<T>(RestRequestBuilder, string, Optional<T>)
  fullName: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.AddQueryParameter<T>(Remora.Rest.RestRequestBuilder, string, Remora.Rest.Core.Optional<T>)
  type: Method
  source:
    id: AddQueryParameter
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\Extensions\RestRequestBuilderExtensions.cs
    startLine: 106
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.Extensions
  summary: Adds the given optional value as a query string parameter if the optional contains a value.
  remarks: The value will be added as its string representation as returned by <xref href="System.Object.ToString" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static RestRequestBuilder AddQueryParameter<T>(this RestRequestBuilder builder, string name, Optional<T> value)
    parameters:
    - id: builder
      type: Remora.Rest.RestRequestBuilder
      description: The request builder.
    - id: name
      type: System.String
      description: The name of the parameter.
    - id: value
      type: Remora.Rest.Core.Optional{{T}}
      description: The value.
    typeParameters:
    - id: T
      description: The type of the underlying value.
    return:
      type: Remora.Rest.RestRequestBuilder
      description: The builder.
    content.vb: Public Shared Function AddQueryParameter(Of T)(builder As RestRequestBuilder, name As String, value As [Optional](Of T)) As RestRequestBuilder
  overload: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.AddQueryParameter*
  nameWithType.vb: RestRequestBuilderExtensions.AddQueryParameter(Of T)(RestRequestBuilder, String, Optional(Of T))
  fullName.vb: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.AddQueryParameter(Of T)(Remora.Rest.RestRequestBuilder, String, Remora.Rest.Core.Optional(Of T))
  name.vb: AddQueryParameter(Of T)(RestRequestBuilder, String, Optional(Of T))
references:
- uid: Remora.Rest.RestRequestBuilder
  commentId: T:Remora.Rest.RestRequestBuilder
  parent: Remora.Rest
  isExternal: true
  name: RestRequestBuilder
  nameWithType: RestRequestBuilder
  fullName: Remora.Rest.RestRequestBuilder
- uid: Remora.Discord.Rest.Extensions
  commentId: N:Remora.Discord.Rest.Extensions
  href: Remora.html
  name: Remora.Discord.Rest.Extensions
  nameWithType: Remora.Discord.Rest.Extensions
  fullName: Remora.Discord.Rest.Extensions
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Extensions
    name: Extensions
    href: Remora.Discord.Rest.Extensions.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Extensions
    name: Extensions
    href: Remora.Discord.Rest.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Remora.Rest
  commentId: N:Remora.Rest
  isExternal: true
  name: Remora.Rest
  nameWithType: Remora.Rest
  fullName: Remora.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.AddAuditLogReason*
  commentId: Overload:Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.AddAuditLogReason
  href: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.html#Remora_Discord_Rest_Extensions_RestRequestBuilderExtensions_AddAuditLogReason_Remora_Rest_RestRequestBuilder_Remora_Rest_Core_Optional_System_String__
  name: AddAuditLogReason
  nameWithType: RestRequestBuilderExtensions.AddAuditLogReason
  fullName: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.AddAuditLogReason
- uid: Remora.Rest.Core.Optional{System.String}
  commentId: T:Remora.Rest.Core.Optional{System.String}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Optional<string>
  nameWithType: Optional<string>
  fullName: Remora.Rest.Core.Optional<string>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Remora.Rest.Core.Optional(Of String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.WithRateLimitContext*
  commentId: Overload:Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.WithRateLimitContext
  href: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.html#Remora_Discord_Rest_Extensions_RestRequestBuilderExtensions_WithRateLimitContext_Remora_Rest_RestRequestBuilder_Remora_Discord_Caching_Abstractions_Services_ICacheProvider_System_Boolean_
  name: WithRateLimitContext
  nameWithType: RestRequestBuilderExtensions.WithRateLimitContext
  fullName: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.WithRateLimitContext
- uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  commentId: T:Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  parent: Remora.Discord.Caching.Abstractions.Services
  href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html
  name: ICacheProvider
  nameWithType: ICacheProvider
  fullName: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Remora.Discord.Caching.Abstractions.Services
  commentId: N:Remora.Discord.Caching.Abstractions.Services
  href: Remora.html
  name: Remora.Discord.Caching.Abstractions.Services
  nameWithType: Remora.Discord.Caching.Abstractions.Services
  fullName: Remora.Discord.Caching.Abstractions.Services
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions
    name: Abstractions
    href: Remora.Discord.Caching.Abstractions.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions.Services
    name: Services
    href: Remora.Discord.Caching.Abstractions.Services.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions
    name: Abstractions
    href: Remora.Discord.Caching.Abstractions.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions.Services
    name: Services
    href: Remora.Discord.Caching.Abstractions.Services.html
- uid: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.SkipAuthorization*
  commentId: Overload:Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.SkipAuthorization
  href: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.html#Remora_Discord_Rest_Extensions_RestRequestBuilderExtensions_SkipAuthorization_Remora_Rest_RestRequestBuilder_
  name: SkipAuthorization
  nameWithType: RestRequestBuilderExtensions.SkipAuthorization
  fullName: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.SkipAuthorization
- uid: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.AddQueryParameter*
  commentId: Overload:Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.AddQueryParameter
  href: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.html#Remora_Discord_Rest_Extensions_RestRequestBuilderExtensions_AddQueryParameter__1_Remora_Rest_RestRequestBuilder_System_String_Remora_Rest_Core_Optional___0__
  name: AddQueryParameter
  nameWithType: RestRequestBuilderExtensions.AddQueryParameter
  fullName: Remora.Discord.Rest.Extensions.RestRequestBuilderExtensions.AddQueryParameter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Remora.Rest.Core.Optional{{T}}
  commentId: T:Remora.Rest.Core.Optional{``0}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  name: Optional<T>
  nameWithType: Optional<T>
  fullName: Remora.Rest.Core.Optional<T>
  nameWithType.vb: Optional(Of T)
  fullName.vb: Remora.Rest.Core.Optional(Of T)
  name.vb: Optional(Of T)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
