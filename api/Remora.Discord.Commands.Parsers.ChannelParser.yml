### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Commands.Parsers.ChannelParser
  commentId: T:Remora.Discord.Commands.Parsers.ChannelParser
  id: ChannelParser
  parent: Remora.Discord.Commands.Parsers
  children:
  - Remora.Discord.Commands.Parsers.ChannelParser.#ctor(Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI,Remora.Discord.Commands.Services.ContextInjectionService)
  - Remora.Discord.Commands.Parsers.ChannelParser.TryParseAsync(System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ChannelParser
  nameWithType: ChannelParser
  fullName: Remora.Discord.Commands.Parsers.ChannelParser
  type: Class
  source:
    id: ChannelParser
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Remora.Discord.Commands\Parsers\ChannelParser.cs
    startLine: 42
  assemblies:
  - Remora.Discord.Commands
  namespace: Remora.Discord.Commands.Parsers
  summary: Parses instances of <xref href="Remora.Discord.API.Abstractions.Objects.IChannel" data-throw-if-not-resolved="false"></xref> and <xref href="Remora.Discord.API.Abstractions.Objects.IPartialChannel" data-throw-if-not-resolved="false"></xref> from command-line inputs.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public class ChannelParser : AbstractTypeParser<IChannel>, ITypeParser<IChannel>, ITypeParser<IPartialChannel>, ITypeParser
    content.vb: >-
      <PublicAPI>

      Public Class ChannelParser Inherits AbstractTypeParser(Of IChannel) Implements ITypeParser(Of IChannel), ITypeParser(Of IPartialChannel), ITypeParser
  inheritance:
  - System.Object
  - Remora.Commands.Parsers.AbstractTypeParser{Remora.Discord.API.Abstractions.Objects.IChannel}
  implements:
  - Remora.Commands.Parsers.ITypeParser{Remora.Discord.API.Abstractions.Objects.IChannel}
  - Remora.Commands.Parsers.ITypeParser{Remora.Discord.API.Abstractions.Objects.IPartialChannel}
  - Remora.Commands.Parsers.ITypeParser
  inheritedMembers:
  - Remora.Commands.Parsers.AbstractTypeParser{Remora.Discord.API.Abstractions.Objects.IChannel}.TryParseAsync(System.Collections.Generic.IReadOnlyList{System.String},System.Threading.CancellationToken)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Parsers.ChannelParser.#ctor(Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI,Remora.Discord.Commands.Services.ContextInjectionService)
  commentId: M:Remora.Discord.Commands.Parsers.ChannelParser.#ctor(Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI,Remora.Discord.Commands.Services.ContextInjectionService)
  id: '#ctor(Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI,Remora.Discord.Commands.Services.ContextInjectionService)'
  parent: Remora.Discord.Commands.Parsers.ChannelParser
  langs:
  - csharp
  - vb
  name: ChannelParser(IDiscordRestChannelAPI, ContextInjectionService)
  nameWithType: ChannelParser.ChannelParser(IDiscordRestChannelAPI, ContextInjectionService)
  fullName: Remora.Discord.Commands.Parsers.ChannelParser.ChannelParser(Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI, Remora.Discord.Commands.Services.ContextInjectionService)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Remora.Discord.Commands\Parsers\ChannelParser.cs
    startLine: 53
  assemblies:
  - Remora.Discord.Commands
  namespace: Remora.Discord.Commands.Parsers
  summary: Initializes a new instance of the <xref href="Remora.Discord.Commands.Parsers.ChannelParser" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public ChannelParser(IDiscordRestChannelAPI channelAPI, ContextInjectionService contextInjection)
    parameters:
    - id: channelAPI
      type: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
      description: The channel API.
    - id: contextInjection
      type: Remora.Discord.Commands.Services.ContextInjectionService
      description: The context injection service.
    content.vb: Public Sub New(channelAPI As IDiscordRestChannelAPI, contextInjection As ContextInjectionService)
  overload: Remora.Discord.Commands.Parsers.ChannelParser.#ctor*
  nameWithType.vb: ChannelParser.New(IDiscordRestChannelAPI, ContextInjectionService)
  fullName.vb: Remora.Discord.Commands.Parsers.ChannelParser.New(Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI, Remora.Discord.Commands.Services.ContextInjectionService)
  name.vb: New(IDiscordRestChannelAPI, ContextInjectionService)
- uid: Remora.Discord.Commands.Parsers.ChannelParser.TryParseAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Commands.Parsers.ChannelParser.TryParseAsync(System.String,System.Threading.CancellationToken)
  id: TryParseAsync(System.String,System.Threading.CancellationToken)
  parent: Remora.Discord.Commands.Parsers.ChannelParser
  langs:
  - csharp
  - vb
  name: TryParseAsync(string, CancellationToken)
  nameWithType: ChannelParser.TryParseAsync(string, CancellationToken)
  fullName: Remora.Discord.Commands.Parsers.ChannelParser.TryParseAsync(string, System.Threading.CancellationToken)
  type: Method
  source:
    id: TryParseAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Remora.Discord.Commands\Parsers\ChannelParser.cs
    startLine: 60
  assemblies:
  - Remora.Discord.Commands
  namespace: Remora.Discord.Commands.Parsers
  summary: Attempts to parse the given string into an instance of <xref href="Remora.Discord.API.Abstractions.Objects.IChannel" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override ValueTask<Result<IChannel>> TryParseAsync(string value, CancellationToken ct = default)
    parameters:
    - id: value
      type: System.String
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.ValueTask{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannel}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overrides Function TryParseAsync(value As String, ct As CancellationToken = Nothing) As ValueTask(Of Result(Of IChannel))
  overridden: Remora.Commands.Parsers.AbstractTypeParser{Remora.Discord.API.Abstractions.Objects.IChannel}.TryParseAsync(System.String,System.Threading.CancellationToken)
  overload: Remora.Discord.Commands.Parsers.ChannelParser.TryParseAsync*
  nameWithType.vb: ChannelParser.TryParseAsync(String, CancellationToken)
  fullName.vb: Remora.Discord.Commands.Parsers.ChannelParser.TryParseAsync(String, System.Threading.CancellationToken)
  name.vb: TryParseAsync(String, CancellationToken)
references:
- uid: Remora.Discord.API.Abstractions.Objects.IChannel
  commentId: T:Remora.Discord.API.Abstractions.Objects.IChannel
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IChannel.html
  name: IChannel
  nameWithType: IChannel
  fullName: Remora.Discord.API.Abstractions.Objects.IChannel
- uid: Remora.Discord.API.Abstractions.Objects.IPartialChannel
  commentId: T:Remora.Discord.API.Abstractions.Objects.IPartialChannel
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IPartialChannel.html
  name: IPartialChannel
  nameWithType: IPartialChannel
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialChannel
- uid: Remora.Discord.Commands.Parsers
  commentId: N:Remora.Discord.Commands.Parsers
  href: Remora.html
  name: Remora.Discord.Commands.Parsers
  nameWithType: Remora.Discord.Commands.Parsers
  fullName: Remora.Discord.Commands.Parsers
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Parsers
    name: Parsers
    href: Remora.Discord.Commands.Parsers.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Parsers
    name: Parsers
    href: Remora.Discord.Commands.Parsers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Commands.Parsers.AbstractTypeParser{Remora.Discord.API.Abstractions.Objects.IChannel}
  commentId: T:Remora.Commands.Parsers.AbstractTypeParser{Remora.Discord.API.Abstractions.Objects.IChannel}
  parent: Remora.Commands.Parsers
  definition: Remora.Commands.Parsers.AbstractTypeParser`1
  href: Remora.Discord.API.Abstractions.Objects.IChannel.html
  name: AbstractTypeParser<IChannel>
  nameWithType: AbstractTypeParser<IChannel>
  fullName: Remora.Commands.Parsers.AbstractTypeParser<Remora.Discord.API.Abstractions.Objects.IChannel>
  nameWithType.vb: AbstractTypeParser(Of IChannel)
  fullName.vb: Remora.Commands.Parsers.AbstractTypeParser(Of Remora.Discord.API.Abstractions.Objects.IChannel)
  name.vb: AbstractTypeParser(Of IChannel)
  spec.csharp:
  - uid: Remora.Commands.Parsers.AbstractTypeParser`1
    name: AbstractTypeParser
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IChannel
    name: IChannel
    href: Remora.Discord.API.Abstractions.Objects.IChannel.html
  - name: '>'
  spec.vb:
  - uid: Remora.Commands.Parsers.AbstractTypeParser`1
    name: AbstractTypeParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IChannel
    name: IChannel
    href: Remora.Discord.API.Abstractions.Objects.IChannel.html
  - name: )
- uid: Remora.Commands.Parsers.ITypeParser{Remora.Discord.API.Abstractions.Objects.IChannel}
  commentId: T:Remora.Commands.Parsers.ITypeParser{Remora.Discord.API.Abstractions.Objects.IChannel}
  parent: Remora.Commands.Parsers
  definition: Remora.Commands.Parsers.ITypeParser`1
  href: Remora.Discord.API.Abstractions.Objects.IChannel.html
  name: ITypeParser<IChannel>
  nameWithType: ITypeParser<IChannel>
  fullName: Remora.Commands.Parsers.ITypeParser<Remora.Discord.API.Abstractions.Objects.IChannel>
  nameWithType.vb: ITypeParser(Of IChannel)
  fullName.vb: Remora.Commands.Parsers.ITypeParser(Of Remora.Discord.API.Abstractions.Objects.IChannel)
  name.vb: ITypeParser(Of IChannel)
  spec.csharp:
  - uid: Remora.Commands.Parsers.ITypeParser`1
    name: ITypeParser
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IChannel
    name: IChannel
    href: Remora.Discord.API.Abstractions.Objects.IChannel.html
  - name: '>'
  spec.vb:
  - uid: Remora.Commands.Parsers.ITypeParser`1
    name: ITypeParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IChannel
    name: IChannel
    href: Remora.Discord.API.Abstractions.Objects.IChannel.html
  - name: )
- uid: Remora.Commands.Parsers.ITypeParser{Remora.Discord.API.Abstractions.Objects.IPartialChannel}
  commentId: T:Remora.Commands.Parsers.ITypeParser{Remora.Discord.API.Abstractions.Objects.IPartialChannel}
  parent: Remora.Commands.Parsers
  definition: Remora.Commands.Parsers.ITypeParser`1
  href: Remora.Discord.API.Abstractions.Objects.IPartialChannel.html
  name: ITypeParser<IPartialChannel>
  nameWithType: ITypeParser<IPartialChannel>
  fullName: Remora.Commands.Parsers.ITypeParser<Remora.Discord.API.Abstractions.Objects.IPartialChannel>
  nameWithType.vb: ITypeParser(Of IPartialChannel)
  fullName.vb: Remora.Commands.Parsers.ITypeParser(Of Remora.Discord.API.Abstractions.Objects.IPartialChannel)
  name.vb: ITypeParser(Of IPartialChannel)
  spec.csharp:
  - uid: Remora.Commands.Parsers.ITypeParser`1
    name: ITypeParser
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialChannel
    name: IPartialChannel
    href: Remora.Discord.API.Abstractions.Objects.IPartialChannel.html
  - name: '>'
  spec.vb:
  - uid: Remora.Commands.Parsers.ITypeParser`1
    name: ITypeParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialChannel
    name: IPartialChannel
    href: Remora.Discord.API.Abstractions.Objects.IPartialChannel.html
  - name: )
- uid: Remora.Commands.Parsers.ITypeParser
  commentId: T:Remora.Commands.Parsers.ITypeParser
  parent: Remora.Commands.Parsers
  isExternal: true
  name: ITypeParser
  nameWithType: ITypeParser
  fullName: Remora.Commands.Parsers.ITypeParser
- uid: Remora.Commands.Parsers.AbstractTypeParser{Remora.Discord.API.Abstractions.Objects.IChannel}.TryParseAsync(System.Collections.Generic.IReadOnlyList{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Commands.Parsers.AbstractTypeParser{Remora.Discord.API.Abstractions.Objects.IChannel}.TryParseAsync(System.Collections.Generic.IReadOnlyList{System.String},System.Threading.CancellationToken)
  parent: Remora.Commands.Parsers.AbstractTypeParser{Remora.Discord.API.Abstractions.Objects.IChannel}
  definition: Remora.Commands.Parsers.AbstractTypeParser`1.TryParseAsync(System.Collections.Generic.IReadOnlyList{System.String},System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: TryParseAsync(IReadOnlyList<string>, CancellationToken)
  nameWithType: AbstractTypeParser<IChannel>.TryParseAsync(IReadOnlyList<string>, CancellationToken)
  fullName: Remora.Commands.Parsers.AbstractTypeParser<Remora.Discord.API.Abstractions.Objects.IChannel>.TryParseAsync(System.Collections.Generic.IReadOnlyList<string>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractTypeParser(Of IChannel).TryParseAsync(IReadOnlyList(Of String), CancellationToken)
  fullName.vb: Remora.Commands.Parsers.AbstractTypeParser(Of Remora.Discord.API.Abstractions.Objects.IChannel).TryParseAsync(System.Collections.Generic.IReadOnlyList(Of String), System.Threading.CancellationToken)
  name.vb: TryParseAsync(IReadOnlyList(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Commands.Parsers.AbstractTypeParser{Remora.Discord.API.Abstractions.Objects.IChannel}.TryParseAsync(System.Collections.Generic.IReadOnlyList{System.String},System.Threading.CancellationToken)
    name: TryParseAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Commands.Parsers.AbstractTypeParser{Remora.Discord.API.Abstractions.Objects.IChannel}.TryParseAsync(System.Collections.Generic.IReadOnlyList{System.String},System.Threading.CancellationToken)
    name: TryParseAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects
  commentId: N:Remora.Discord.API.Abstractions.Objects
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Objects
  nameWithType: Remora.Discord.API.Abstractions.Objects
  fullName: Remora.Discord.API.Abstractions.Objects
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Commands.Parsers.AbstractTypeParser`1
  commentId: T:Remora.Commands.Parsers.AbstractTypeParser`1
  isExternal: true
  name: AbstractTypeParser<TType>
  nameWithType: AbstractTypeParser<TType>
  fullName: Remora.Commands.Parsers.AbstractTypeParser<TType>
  nameWithType.vb: AbstractTypeParser(Of TType)
  fullName.vb: Remora.Commands.Parsers.AbstractTypeParser(Of TType)
  name.vb: AbstractTypeParser(Of TType)
  spec.csharp:
  - uid: Remora.Commands.Parsers.AbstractTypeParser`1
    name: AbstractTypeParser
    isExternal: true
  - name: <
  - name: TType
  - name: '>'
  spec.vb:
  - uid: Remora.Commands.Parsers.AbstractTypeParser`1
    name: AbstractTypeParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TType
  - name: )
- uid: Remora.Commands.Parsers
  commentId: N:Remora.Commands.Parsers
  isExternal: true
  name: Remora.Commands.Parsers
  nameWithType: Remora.Commands.Parsers
  fullName: Remora.Commands.Parsers
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Commands
    name: Commands
    isExternal: true
  - name: .
  - uid: Remora.Commands.Parsers
    name: Parsers
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Commands
    name: Commands
    isExternal: true
  - name: .
  - uid: Remora.Commands.Parsers
    name: Parsers
    isExternal: true
- uid: Remora.Commands.Parsers.ITypeParser`1
  commentId: T:Remora.Commands.Parsers.ITypeParser`1
  isExternal: true
  name: ITypeParser<TType>
  nameWithType: ITypeParser<TType>
  fullName: Remora.Commands.Parsers.ITypeParser<TType>
  nameWithType.vb: ITypeParser(Of TType)
  fullName.vb: Remora.Commands.Parsers.ITypeParser(Of TType)
  name.vb: ITypeParser(Of TType)
  spec.csharp:
  - uid: Remora.Commands.Parsers.ITypeParser`1
    name: ITypeParser
    isExternal: true
  - name: <
  - name: TType
  - name: '>'
  spec.vb:
  - uid: Remora.Commands.Parsers.ITypeParser`1
    name: ITypeParser
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TType
  - name: )
- uid: Remora.Commands.Parsers.AbstractTypeParser`1.TryParseAsync(System.Collections.Generic.IReadOnlyList{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Commands.Parsers.AbstractTypeParser`1.TryParseAsync(System.Collections.Generic.IReadOnlyList{System.String},System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: TryParseAsync(IReadOnlyList<string>, CancellationToken)
  nameWithType: AbstractTypeParser<TType>.TryParseAsync(IReadOnlyList<string>, CancellationToken)
  fullName: Remora.Commands.Parsers.AbstractTypeParser<TType>.TryParseAsync(System.Collections.Generic.IReadOnlyList<string>, System.Threading.CancellationToken)
  nameWithType.vb: AbstractTypeParser(Of TType).TryParseAsync(IReadOnlyList(Of String), CancellationToken)
  fullName.vb: Remora.Commands.Parsers.AbstractTypeParser(Of TType).TryParseAsync(System.Collections.Generic.IReadOnlyList(Of String), System.Threading.CancellationToken)
  name.vb: TryParseAsync(IReadOnlyList(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Commands.Parsers.AbstractTypeParser`1.TryParseAsync(System.Collections.Generic.IReadOnlyList{System.String},System.Threading.CancellationToken)
    name: TryParseAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Commands.Parsers.AbstractTypeParser`1.TryParseAsync(System.Collections.Generic.IReadOnlyList{System.String},System.Threading.CancellationToken)
    name: TryParseAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Commands.Parsers.ChannelParser
  commentId: T:Remora.Discord.Commands.Parsers.ChannelParser
  href: Remora.Discord.Commands.Parsers.ChannelParser.html
  name: ChannelParser
  nameWithType: ChannelParser
  fullName: Remora.Discord.Commands.Parsers.ChannelParser
- uid: Remora.Discord.Commands.Parsers.ChannelParser.#ctor*
  commentId: Overload:Remora.Discord.Commands.Parsers.ChannelParser.#ctor
  href: Remora.Discord.Commands.Parsers.ChannelParser.html#Remora_Discord_Commands_Parsers_ChannelParser__ctor_Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_Remora_Discord_Commands_Services_ContextInjectionService_
  name: ChannelParser
  nameWithType: ChannelParser.ChannelParser
  fullName: Remora.Discord.Commands.Parsers.ChannelParser.ChannelParser
  nameWithType.vb: ChannelParser.New
  fullName.vb: Remora.Discord.Commands.Parsers.ChannelParser.New
  name.vb: New
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  commentId: T:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  parent: Remora.Discord.API.Abstractions.Rest
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html
  name: IDiscordRestChannelAPI
  nameWithType: IDiscordRestChannelAPI
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
- uid: Remora.Discord.Commands.Services.ContextInjectionService
  commentId: T:Remora.Discord.Commands.Services.ContextInjectionService
  parent: Remora.Discord.Commands.Services
  href: Remora.Discord.Commands.Services.ContextInjectionService.html
  name: ContextInjectionService
  nameWithType: ContextInjectionService
  fullName: Remora.Discord.Commands.Services.ContextInjectionService
- uid: Remora.Discord.API.Abstractions.Rest
  commentId: N:Remora.Discord.API.Abstractions.Rest
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Rest
  nameWithType: Remora.Discord.API.Abstractions.Rest
  fullName: Remora.Discord.API.Abstractions.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
- uid: Remora.Discord.Commands.Services
  commentId: N:Remora.Discord.Commands.Services
  href: Remora.html
  name: Remora.Discord.Commands.Services
  nameWithType: Remora.Discord.Commands.Services
  fullName: Remora.Discord.Commands.Services
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Services
    name: Services
    href: Remora.Discord.Commands.Services.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Services
    name: Services
    href: Remora.Discord.Commands.Services.html
- uid: Remora.Commands.Parsers.AbstractTypeParser{Remora.Discord.API.Abstractions.Objects.IChannel}.TryParseAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Commands.Parsers.AbstractTypeParser{Remora.Discord.API.Abstractions.Objects.IChannel}.TryParseAsync(System.String,System.Threading.CancellationToken)
  parent: Remora.Commands.Parsers.AbstractTypeParser{Remora.Discord.API.Abstractions.Objects.IChannel}
  definition: Remora.Commands.Parsers.AbstractTypeParser`1.TryParseAsync(System.String,System.Threading.CancellationToken)
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: TryParseAsync(string, CancellationToken)
  nameWithType: AbstractTypeParser<IChannel>.TryParseAsync(string, CancellationToken)
  fullName: Remora.Commands.Parsers.AbstractTypeParser<Remora.Discord.API.Abstractions.Objects.IChannel>.TryParseAsync(string, System.Threading.CancellationToken)
  nameWithType.vb: AbstractTypeParser(Of IChannel).TryParseAsync(String, CancellationToken)
  fullName.vb: Remora.Commands.Parsers.AbstractTypeParser(Of Remora.Discord.API.Abstractions.Objects.IChannel).TryParseAsync(String, System.Threading.CancellationToken)
  name.vb: TryParseAsync(String, CancellationToken)
  spec.csharp:
  - uid: Remora.Commands.Parsers.AbstractTypeParser{Remora.Discord.API.Abstractions.Objects.IChannel}.TryParseAsync(System.String,System.Threading.CancellationToken)
    name: TryParseAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Commands.Parsers.AbstractTypeParser{Remora.Discord.API.Abstractions.Objects.IChannel}.TryParseAsync(System.String,System.Threading.CancellationToken)
    name: TryParseAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Commands.Parsers.ChannelParser.TryParseAsync*
  commentId: Overload:Remora.Discord.Commands.Parsers.ChannelParser.TryParseAsync
  href: Remora.Discord.Commands.Parsers.ChannelParser.html#Remora_Discord_Commands_Parsers_ChannelParser_TryParseAsync_System_String_System_Threading_CancellationToken_
  name: TryParseAsync
  nameWithType: ChannelParser.TryParseAsync
  fullName: Remora.Discord.Commands.Parsers.ChannelParser.TryParseAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.ValueTask{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannel}}
  commentId: T:System.Threading.Tasks.ValueTask{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IChannel}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<Result<IChannel>>
  nameWithType: ValueTask<Result<IChannel>>
  fullName: System.Threading.Tasks.ValueTask<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IChannel>>
  nameWithType.vb: ValueTask(Of Result(Of IChannel))
  fullName.vb: System.Threading.Tasks.ValueTask(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IChannel))
  name.vb: ValueTask(Of Result(Of IChannel))
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IChannel
    name: IChannel
    href: Remora.Discord.API.Abstractions.Objects.IChannel.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IChannel
    name: IChannel
    href: Remora.Discord.API.Abstractions.Objects.IChannel.html
  - name: )
  - name: )
- uid: Remora.Commands.Parsers.AbstractTypeParser`1.TryParseAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Commands.Parsers.AbstractTypeParser`1.TryParseAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: TryParseAsync(string, CancellationToken)
  nameWithType: AbstractTypeParser<TType>.TryParseAsync(string, CancellationToken)
  fullName: Remora.Commands.Parsers.AbstractTypeParser<TType>.TryParseAsync(string, System.Threading.CancellationToken)
  nameWithType.vb: AbstractTypeParser(Of TType).TryParseAsync(String, CancellationToken)
  fullName.vb: Remora.Commands.Parsers.AbstractTypeParser(Of TType).TryParseAsync(String, System.Threading.CancellationToken)
  name.vb: TryParseAsync(String, CancellationToken)
  spec.csharp:
  - uid: Remora.Commands.Parsers.AbstractTypeParser`1.TryParseAsync(System.String,System.Threading.CancellationToken)
    name: TryParseAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Commands.Parsers.AbstractTypeParser`1.TryParseAsync(System.String,System.Threading.CancellationToken)
    name: TryParseAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
