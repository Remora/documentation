### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Rest.Caching.MemoryCacheProvider
  commentId: T:Remora.Discord.Rest.Caching.MemoryCacheProvider
  id: MemoryCacheProvider
  parent: Remora.Discord.Rest.Caching
  children:
  - Remora.Discord.Rest.Caching.MemoryCacheProvider.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)
  - Remora.Discord.Rest.Caching.MemoryCacheProvider.CacheAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,``0,Remora.Discord.Caching.Abstractions.CacheEntryOptions,System.Threading.CancellationToken)
  - Remora.Discord.Rest.Caching.MemoryCacheProvider.EvictAsync(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  - Remora.Discord.Rest.Caching.MemoryCacheProvider.EvictAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  - Remora.Discord.Rest.Caching.MemoryCacheProvider.RetrieveAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: MemoryCacheProvider
  nameWithType: MemoryCacheProvider
  fullName: Remora.Discord.Rest.Caching.MemoryCacheProvider
  type: Class
  source:
    id: MemoryCacheProvider
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\Caching\MemoryCacheProvider.cs
    startLine: 35
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.Caching
  summary: An <xref href="Microsoft.Extensions.Caching.Memory.IMemoryCache" data-throw-if-not-resolved="false"></xref>-backed cache provider.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public class MemoryCacheProvider : ICacheProvider
    content.vb: >-
      <PublicAPI>

      Public Class MemoryCacheProvider Implements ICacheProvider
  inheritance:
  - System.Object
  implements:
  - Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.Caching.MemoryCacheProvider.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)
  commentId: M:Remora.Discord.Rest.Caching.MemoryCacheProvider.#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)
  id: '#ctor(Microsoft.Extensions.Caching.Memory.IMemoryCache)'
  parent: Remora.Discord.Rest.Caching.MemoryCacheProvider
  langs:
  - csharp
  - vb
  name: MemoryCacheProvider(IMemoryCache)
  nameWithType: MemoryCacheProvider.MemoryCacheProvider(IMemoryCache)
  fullName: Remora.Discord.Rest.Caching.MemoryCacheProvider.MemoryCacheProvider(Microsoft.Extensions.Caching.Memory.IMemoryCache)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\Caching\MemoryCacheProvider.cs
    startLine: 44
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.Caching
  summary: Initializes a new instance of the <xref href="Remora.Discord.Rest.Caching.MemoryCacheProvider" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public MemoryCacheProvider(IMemoryCache memoryCache)
    parameters:
    - id: memoryCache
      type: Microsoft.Extensions.Caching.Memory.IMemoryCache
      description: The memory cache.
    content.vb: Public Sub New(memoryCache As IMemoryCache)
  overload: Remora.Discord.Rest.Caching.MemoryCacheProvider.#ctor*
  nameWithType.vb: MemoryCacheProvider.New(IMemoryCache)
  fullName.vb: Remora.Discord.Rest.Caching.MemoryCacheProvider.New(Microsoft.Extensions.Caching.Memory.IMemoryCache)
  name.vb: New(IMemoryCache)
- uid: Remora.Discord.Rest.Caching.MemoryCacheProvider.CacheAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,``0,Remora.Discord.Caching.Abstractions.CacheEntryOptions,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.Caching.MemoryCacheProvider.CacheAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,``0,Remora.Discord.Caching.Abstractions.CacheEntryOptions,System.Threading.CancellationToken)
  id: CacheAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,``0,Remora.Discord.Caching.Abstractions.CacheEntryOptions,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.Caching.MemoryCacheProvider
  langs:
  - csharp
  - vb
  name: CacheAsync<TInstance>(CacheKey, TInstance, CacheEntryOptions, CancellationToken)
  nameWithType: MemoryCacheProvider.CacheAsync<TInstance>(CacheKey, TInstance, CacheEntryOptions, CancellationToken)
  fullName: Remora.Discord.Rest.Caching.MemoryCacheProvider.CacheAsync<TInstance>(Remora.Discord.Caching.Abstractions.CacheKey, TInstance, Remora.Discord.Caching.Abstractions.CacheEntryOptions, System.Threading.CancellationToken)
  type: Method
  source:
    id: CacheAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\Caching\MemoryCacheProvider.cs
    startLine: 50
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.Caching
  summary: Caches a value in the backing store.
  remarks: >-
    Absolute and sliding expirations may be handled differently (or not at all)
        depending on the implementation, and are simply a hint to the implementation that the
        value should have a pre-determined lifetime in it's backing-store.
  example: []
  syntax:
    content: 'public ValueTask CacheAsync<TInstance>(CacheKey key, TInstance instance, CacheEntryOptions options, CancellationToken ct = default) where TInstance : class'
    parameters:
    - id: key
      type: Remora.Discord.Caching.Abstractions.CacheKey
      description: The key to cache the value with.
    - id: instance
      type: '{TInstance}'
      description: The instance of the object to cache.
    - id: options
      type: Remora.Discord.Caching.Abstractions.CacheEntryOptions
      description: The options of the value to cache.
    - id: ct
      type: System.Threading.CancellationToken
      description: A cancellation token to cancel the operation.
    typeParameters:
    - id: TInstance
      description: The type to cache.
    return:
      type: System.Threading.Tasks.ValueTask
      description: A <xref href="System.Threading.Tasks.ValueTask" data-throw-if-not-resolved="false"></xref> representing the result of the potentially asynchronous operation.
    content.vb: Public Function CacheAsync(Of TInstance As Class)(key As CacheKey, instance As TInstance, options As CacheEntryOptions, ct As CancellationToken = Nothing) As ValueTask
  overload: Remora.Discord.Rest.Caching.MemoryCacheProvider.CacheAsync*
  implements:
  - Remora.Discord.Caching.Abstractions.Services.ICacheProvider.CacheAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,{TInstance},Remora.Discord.Caching.Abstractions.CacheEntryOptions,System.Threading.CancellationToken)
  nameWithType.vb: MemoryCacheProvider.CacheAsync(Of TInstance)(CacheKey, TInstance, CacheEntryOptions, CancellationToken)
  fullName.vb: Remora.Discord.Rest.Caching.MemoryCacheProvider.CacheAsync(Of TInstance)(Remora.Discord.Caching.Abstractions.CacheKey, TInstance, Remora.Discord.Caching.Abstractions.CacheEntryOptions, System.Threading.CancellationToken)
  name.vb: CacheAsync(Of TInstance)(CacheKey, TInstance, CacheEntryOptions, CancellationToken)
- uid: Remora.Discord.Rest.Caching.MemoryCacheProvider.RetrieveAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.Caching.MemoryCacheProvider.RetrieveAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  id: RetrieveAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.Caching.MemoryCacheProvider
  langs:
  - csharp
  - vb
  name: RetrieveAsync<TInstance>(CacheKey, CancellationToken)
  nameWithType: MemoryCacheProvider.RetrieveAsync<TInstance>(CacheKey, CancellationToken)
  fullName: Remora.Discord.Rest.Caching.MemoryCacheProvider.RetrieveAsync<TInstance>(Remora.Discord.Caching.Abstractions.CacheKey, System.Threading.CancellationToken)
  type: Method
  source:
    id: RetrieveAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\Caching\MemoryCacheProvider.cs
    startLine: 65
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.Caching
  summary: Retrieves a value from the backing store.
  example: []
  syntax:
    content: 'public ValueTask<Result<TInstance>> RetrieveAsync<TInstance>(CacheKey key, CancellationToken ct = default) where TInstance : class'
    parameters:
    - id: key
      type: Remora.Discord.Caching.Abstractions.CacheKey
      description: The key to retrieve a potential value from the backing store.
    - id: ct
      type: System.Threading.CancellationToken
      description: A cancellation token to cancel the operation.
    typeParameters:
    - id: TInstance
      description: The type to return from the backing store, if it exists.
    return:
      type: System.Threading.Tasks.ValueTask{Remora.Results.Result{{TInstance}}}
      description: A <xref href="System.Threading.Tasks.ValueTask" data-throw-if-not-resolved="false"></xref> representing the result of the potentially asynchronous action.
    content.vb: Public Function RetrieveAsync(Of TInstance As Class)(key As CacheKey, ct As CancellationToken = Nothing) As ValueTask(Of Result(Of TInstance))
  overload: Remora.Discord.Rest.Caching.MemoryCacheProvider.RetrieveAsync*
  implements:
  - Remora.Discord.Caching.Abstractions.Services.ICacheProvider.RetrieveAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  nameWithType.vb: MemoryCacheProvider.RetrieveAsync(Of TInstance)(CacheKey, CancellationToken)
  fullName.vb: Remora.Discord.Rest.Caching.MemoryCacheProvider.RetrieveAsync(Of TInstance)(Remora.Discord.Caching.Abstractions.CacheKey, System.Threading.CancellationToken)
  name.vb: RetrieveAsync(Of TInstance)(CacheKey, CancellationToken)
- uid: Remora.Discord.Rest.Caching.MemoryCacheProvider.EvictAsync(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.Caching.MemoryCacheProvider.EvictAsync(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  id: EvictAsync(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.Caching.MemoryCacheProvider
  langs:
  - csharp
  - vb
  name: EvictAsync(CacheKey, CancellationToken)
  nameWithType: MemoryCacheProvider.EvictAsync(CacheKey, CancellationToken)
  fullName: Remora.Discord.Rest.Caching.MemoryCacheProvider.EvictAsync(Remora.Discord.Caching.Abstractions.CacheKey, System.Threading.CancellationToken)
  type: Method
  source:
    id: EvictAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\Caching\MemoryCacheProvider.cs
    startLine: 77
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.Caching
  summary: Evicts a key from the backing store.
  example: []
  syntax:
    content: public ValueTask<Result> EvictAsync(CacheKey key, CancellationToken ct = default)
    parameters:
    - id: key
      type: Remora.Discord.Caching.Abstractions.CacheKey
      description: The key to evict from the backing store.
    - id: ct
      type: System.Threading.CancellationToken
      description: A cancellation token to cancel the operation.
    return:
      type: System.Threading.Tasks.ValueTask{Remora.Results.Result}
      description: A <xref href="System.Threading.Tasks.ValueTask" data-throw-if-not-resolved="false"></xref> representing the result of the potentially asynchronous action.
    content.vb: Public Function EvictAsync(key As CacheKey, ct As CancellationToken = Nothing) As ValueTask(Of Result)
  overload: Remora.Discord.Rest.Caching.MemoryCacheProvider.EvictAsync*
  implements:
  - Remora.Discord.Caching.Abstractions.Services.ICacheProvider.EvictAsync(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.Caching.MemoryCacheProvider.EvictAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.Caching.MemoryCacheProvider.EvictAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  id: EvictAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.Caching.MemoryCacheProvider
  langs:
  - csharp
  - vb
  name: EvictAsync<TInstance>(CacheKey, CancellationToken)
  nameWithType: MemoryCacheProvider.EvictAsync<TInstance>(CacheKey, CancellationToken)
  fullName: Remora.Discord.Rest.Caching.MemoryCacheProvider.EvictAsync<TInstance>(Remora.Discord.Caching.Abstractions.CacheKey, System.Threading.CancellationToken)
  type: Method
  source:
    id: EvictAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\Caching\MemoryCacheProvider.cs
    startLine: 89
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.Caching
  summary: Evicts a key from the backing store, returning its current value if it exists.
  example: []
  syntax:
    content: 'public ValueTask<Result<TInstance>> EvictAsync<TInstance>(CacheKey key, CancellationToken ct = default) where TInstance : class'
    parameters:
    - id: key
      type: Remora.Discord.Caching.Abstractions.CacheKey
      description: The key to evict from the backing store.
    - id: ct
      type: System.Threading.CancellationToken
      description: A cancellation token to cancel the operation.
    typeParameters:
    - id: TInstance
      description: The type to return from the backing store, if it exists.
    return:
      type: System.Threading.Tasks.ValueTask{Remora.Results.Result{{TInstance}}}
      description: A <xref href="System.Threading.Tasks.ValueTask" data-throw-if-not-resolved="false"></xref> representing the result of the potentially asynchronous action.
    content.vb: Public Function EvictAsync(Of TInstance As Class)(key As CacheKey, ct As CancellationToken = Nothing) As ValueTask(Of Result(Of TInstance))
  overload: Remora.Discord.Rest.Caching.MemoryCacheProvider.EvictAsync*
  implements:
  - Remora.Discord.Caching.Abstractions.Services.ICacheProvider.EvictAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  nameWithType.vb: MemoryCacheProvider.EvictAsync(Of TInstance)(CacheKey, CancellationToken)
  fullName.vb: Remora.Discord.Rest.Caching.MemoryCacheProvider.EvictAsync(Of TInstance)(Remora.Discord.Caching.Abstractions.CacheKey, System.Threading.CancellationToken)
  name.vb: EvictAsync(Of TInstance)(CacheKey, CancellationToken)
references:
- uid: Microsoft.Extensions.Caching.Memory.IMemoryCache
  commentId: T:Microsoft.Extensions.Caching.Memory.IMemoryCache
  parent: Microsoft.Extensions.Caching.Memory
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.caching.memory.imemorycache
  name: IMemoryCache
  nameWithType: IMemoryCache
  fullName: Microsoft.Extensions.Caching.Memory.IMemoryCache
- uid: Remora.Discord.Rest.Caching
  commentId: N:Remora.Discord.Rest.Caching
  href: Remora.html
  name: Remora.Discord.Rest.Caching
  nameWithType: Remora.Discord.Rest.Caching
  fullName: Remora.Discord.Rest.Caching
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Caching
    name: Caching
    href: Remora.Discord.Rest.Caching.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.Caching
    name: Caching
    href: Remora.Discord.Rest.Caching.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  commentId: T:Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  parent: Remora.Discord.Caching.Abstractions.Services
  href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html
  name: ICacheProvider
  nameWithType: ICacheProvider
  fullName: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Microsoft.Extensions.Caching.Memory
  commentId: N:Microsoft.Extensions.Caching.Memory
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Caching.Memory
  nameWithType: Microsoft.Extensions.Caching.Memory
  fullName: Microsoft.Extensions.Caching.Memory
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Caching
    name: Caching
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.caching
  - name: .
  - uid: Microsoft.Extensions.Caching.Memory
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.caching.memory
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Caching
    name: Caching
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.caching
  - name: .
  - uid: Microsoft.Extensions.Caching.Memory
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.caching.memory
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Caching.Abstractions.Services
  commentId: N:Remora.Discord.Caching.Abstractions.Services
  href: Remora.html
  name: Remora.Discord.Caching.Abstractions.Services
  nameWithType: Remora.Discord.Caching.Abstractions.Services
  fullName: Remora.Discord.Caching.Abstractions.Services
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions
    name: Abstractions
    href: Remora.Discord.Caching.Abstractions.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions.Services
    name: Services
    href: Remora.Discord.Caching.Abstractions.Services.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions
    name: Abstractions
    href: Remora.Discord.Caching.Abstractions.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions.Services
    name: Services
    href: Remora.Discord.Caching.Abstractions.Services.html
- uid: Remora.Discord.Rest.Caching.MemoryCacheProvider
  commentId: T:Remora.Discord.Rest.Caching.MemoryCacheProvider
  href: Remora.Discord.Rest.Caching.MemoryCacheProvider.html
  name: MemoryCacheProvider
  nameWithType: MemoryCacheProvider
  fullName: Remora.Discord.Rest.Caching.MemoryCacheProvider
- uid: Remora.Discord.Rest.Caching.MemoryCacheProvider.#ctor*
  commentId: Overload:Remora.Discord.Rest.Caching.MemoryCacheProvider.#ctor
  href: Remora.Discord.Rest.Caching.MemoryCacheProvider.html#Remora_Discord_Rest_Caching_MemoryCacheProvider__ctor_Microsoft_Extensions_Caching_Memory_IMemoryCache_
  name: MemoryCacheProvider
  nameWithType: MemoryCacheProvider.MemoryCacheProvider
  fullName: Remora.Discord.Rest.Caching.MemoryCacheProvider.MemoryCacheProvider
  nameWithType.vb: MemoryCacheProvider.New
  fullName.vb: Remora.Discord.Rest.Caching.MemoryCacheProvider.New
  name.vb: New
- uid: System.Threading.Tasks.ValueTask
  commentId: T:System.Threading.Tasks.ValueTask
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask
  name: ValueTask
  nameWithType: ValueTask
  fullName: System.Threading.Tasks.ValueTask
- uid: Remora.Discord.Rest.Caching.MemoryCacheProvider.CacheAsync*
  commentId: Overload:Remora.Discord.Rest.Caching.MemoryCacheProvider.CacheAsync
  href: Remora.Discord.Rest.Caching.MemoryCacheProvider.html#Remora_Discord_Rest_Caching_MemoryCacheProvider_CacheAsync__1_Remora_Discord_Caching_Abstractions_CacheKey___0_Remora_Discord_Caching_Abstractions_CacheEntryOptions_System_Threading_CancellationToken_
  name: CacheAsync
  nameWithType: MemoryCacheProvider.CacheAsync
  fullName: Remora.Discord.Rest.Caching.MemoryCacheProvider.CacheAsync
- uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.CacheAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,{TInstance},Remora.Discord.Caching.Abstractions.CacheEntryOptions,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Caching.Abstractions.Services.ICacheProvider.CacheAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,``0,Remora.Discord.Caching.Abstractions.CacheEntryOptions,System.Threading.CancellationToken)
  parent: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  definition: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.CacheAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,``0,Remora.Discord.Caching.Abstractions.CacheEntryOptions,System.Threading.CancellationToken)
  href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html#Remora_Discord_Caching_Abstractions_Services_ICacheProvider_CacheAsync__1_Remora_Discord_Caching_Abstractions_CacheKey___0_Remora_Discord_Caching_Abstractions_CacheEntryOptions_System_Threading_CancellationToken_
  name: CacheAsync<TInstance>(CacheKey, TInstance, CacheEntryOptions, CancellationToken)
  nameWithType: ICacheProvider.CacheAsync<TInstance>(CacheKey, TInstance, CacheEntryOptions, CancellationToken)
  fullName: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.CacheAsync<TInstance>(Remora.Discord.Caching.Abstractions.CacheKey, TInstance, Remora.Discord.Caching.Abstractions.CacheEntryOptions, System.Threading.CancellationToken)
  nameWithType.vb: ICacheProvider.CacheAsync(Of TInstance)(CacheKey, TInstance, CacheEntryOptions, CancellationToken)
  fullName.vb: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.CacheAsync(Of TInstance)(Remora.Discord.Caching.Abstractions.CacheKey, TInstance, Remora.Discord.Caching.Abstractions.CacheEntryOptions, System.Threading.CancellationToken)
  name.vb: CacheAsync(Of TInstance)(CacheKey, TInstance, CacheEntryOptions, CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.CacheAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,``0,Remora.Discord.Caching.Abstractions.CacheEntryOptions,System.Threading.CancellationToken)
    name: CacheAsync
    href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html#Remora_Discord_Caching_Abstractions_Services_ICacheProvider_CacheAsync__1_Remora_Discord_Caching_Abstractions_CacheKey___0_Remora_Discord_Caching_Abstractions_CacheEntryOptions_System_Threading_CancellationToken_
  - name: <
  - name: TInstance
  - name: '>'
  - name: (
  - uid: Remora.Discord.Caching.Abstractions.CacheKey
    name: CacheKey
    href: Remora.Discord.Caching.Abstractions.CacheKey.html
  - name: ','
  - name: " "
  - name: TInstance
  - name: ','
  - name: " "
  - uid: Remora.Discord.Caching.Abstractions.CacheEntryOptions
    name: CacheEntryOptions
    href: Remora.Discord.Caching.Abstractions.CacheEntryOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.CacheAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,``0,Remora.Discord.Caching.Abstractions.CacheEntryOptions,System.Threading.CancellationToken)
    name: CacheAsync
    href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html#Remora_Discord_Caching_Abstractions_Services_ICacheProvider_CacheAsync__1_Remora_Discord_Caching_Abstractions_CacheKey___0_Remora_Discord_Caching_Abstractions_CacheEntryOptions_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TInstance
  - name: )
  - name: (
  - uid: Remora.Discord.Caching.Abstractions.CacheKey
    name: CacheKey
    href: Remora.Discord.Caching.Abstractions.CacheKey.html
  - name: ','
  - name: " "
  - name: TInstance
  - name: ','
  - name: " "
  - uid: Remora.Discord.Caching.Abstractions.CacheEntryOptions
    name: CacheEntryOptions
    href: Remora.Discord.Caching.Abstractions.CacheEntryOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Caching.Abstractions.CacheKey
  commentId: T:Remora.Discord.Caching.Abstractions.CacheKey
  parent: Remora.Discord.Caching.Abstractions
  href: Remora.Discord.Caching.Abstractions.CacheKey.html
  name: CacheKey
  nameWithType: CacheKey
  fullName: Remora.Discord.Caching.Abstractions.CacheKey
- uid: '{TInstance}'
  commentId: '!:TInstance'
  definition: TInstance
  name: TInstance
  nameWithType: TInstance
  fullName: TInstance
- uid: Remora.Discord.Caching.Abstractions.CacheEntryOptions
  commentId: T:Remora.Discord.Caching.Abstractions.CacheEntryOptions
  parent: Remora.Discord.Caching.Abstractions
  href: Remora.Discord.Caching.Abstractions.CacheEntryOptions.html
  name: CacheEntryOptions
  nameWithType: CacheEntryOptions
  fullName: Remora.Discord.Caching.Abstractions.CacheEntryOptions
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.CacheAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,``0,Remora.Discord.Caching.Abstractions.CacheEntryOptions,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Caching.Abstractions.Services.ICacheProvider.CacheAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,``0,Remora.Discord.Caching.Abstractions.CacheEntryOptions,System.Threading.CancellationToken)
  isExternal: true
  href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html#Remora_Discord_Caching_Abstractions_Services_ICacheProvider_CacheAsync__1_Remora_Discord_Caching_Abstractions_CacheKey___0_Remora_Discord_Caching_Abstractions_CacheEntryOptions_System_Threading_CancellationToken_
  name: CacheAsync<TInstance>(CacheKey, TInstance, CacheEntryOptions, CancellationToken)
  nameWithType: ICacheProvider.CacheAsync<TInstance>(CacheKey, TInstance, CacheEntryOptions, CancellationToken)
  fullName: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.CacheAsync<TInstance>(Remora.Discord.Caching.Abstractions.CacheKey, TInstance, Remora.Discord.Caching.Abstractions.CacheEntryOptions, System.Threading.CancellationToken)
  nameWithType.vb: ICacheProvider.CacheAsync(Of TInstance)(CacheKey, TInstance, CacheEntryOptions, CancellationToken)
  fullName.vb: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.CacheAsync(Of TInstance)(Remora.Discord.Caching.Abstractions.CacheKey, TInstance, Remora.Discord.Caching.Abstractions.CacheEntryOptions, System.Threading.CancellationToken)
  name.vb: CacheAsync(Of TInstance)(CacheKey, TInstance, CacheEntryOptions, CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.CacheAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,``0,Remora.Discord.Caching.Abstractions.CacheEntryOptions,System.Threading.CancellationToken)
    name: CacheAsync
    href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html#Remora_Discord_Caching_Abstractions_Services_ICacheProvider_CacheAsync__1_Remora_Discord_Caching_Abstractions_CacheKey___0_Remora_Discord_Caching_Abstractions_CacheEntryOptions_System_Threading_CancellationToken_
  - name: <
  - name: TInstance
  - name: '>'
  - name: (
  - uid: Remora.Discord.Caching.Abstractions.CacheKey
    name: CacheKey
    href: Remora.Discord.Caching.Abstractions.CacheKey.html
  - name: ','
  - name: " "
  - name: TInstance
  - name: ','
  - name: " "
  - uid: Remora.Discord.Caching.Abstractions.CacheEntryOptions
    name: CacheEntryOptions
    href: Remora.Discord.Caching.Abstractions.CacheEntryOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.CacheAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,``0,Remora.Discord.Caching.Abstractions.CacheEntryOptions,System.Threading.CancellationToken)
    name: CacheAsync
    href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html#Remora_Discord_Caching_Abstractions_Services_ICacheProvider_CacheAsync__1_Remora_Discord_Caching_Abstractions_CacheKey___0_Remora_Discord_Caching_Abstractions_CacheEntryOptions_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TInstance
  - name: )
  - name: (
  - uid: Remora.Discord.Caching.Abstractions.CacheKey
    name: CacheKey
    href: Remora.Discord.Caching.Abstractions.CacheKey.html
  - name: ','
  - name: " "
  - name: TInstance
  - name: ','
  - name: " "
  - uid: Remora.Discord.Caching.Abstractions.CacheEntryOptions
    name: CacheEntryOptions
    href: Remora.Discord.Caching.Abstractions.CacheEntryOptions.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Caching.Abstractions
  commentId: N:Remora.Discord.Caching.Abstractions
  href: Remora.html
  name: Remora.Discord.Caching.Abstractions
  nameWithType: Remora.Discord.Caching.Abstractions
  fullName: Remora.Discord.Caching.Abstractions
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions
    name: Abstractions
    href: Remora.Discord.Caching.Abstractions.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions
    name: Abstractions
    href: Remora.Discord.Caching.Abstractions.html
- uid: TInstance
  name: TInstance
  nameWithType: TInstance
  fullName: TInstance
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: Remora.Discord.Rest.Caching.MemoryCacheProvider.RetrieveAsync*
  commentId: Overload:Remora.Discord.Rest.Caching.MemoryCacheProvider.RetrieveAsync
  href: Remora.Discord.Rest.Caching.MemoryCacheProvider.html#Remora_Discord_Rest_Caching_MemoryCacheProvider_RetrieveAsync__1_Remora_Discord_Caching_Abstractions_CacheKey_System_Threading_CancellationToken_
  name: RetrieveAsync
  nameWithType: MemoryCacheProvider.RetrieveAsync
  fullName: Remora.Discord.Rest.Caching.MemoryCacheProvider.RetrieveAsync
- uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.RetrieveAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Caching.Abstractions.Services.ICacheProvider.RetrieveAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  parent: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  isExternal: true
  href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html#Remora_Discord_Caching_Abstractions_Services_ICacheProvider_RetrieveAsync__1_Remora_Discord_Caching_Abstractions_CacheKey_System_Threading_CancellationToken_
  name: RetrieveAsync<TInstance>(CacheKey, CancellationToken)
  nameWithType: ICacheProvider.RetrieveAsync<TInstance>(CacheKey, CancellationToken)
  fullName: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.RetrieveAsync<TInstance>(Remora.Discord.Caching.Abstractions.CacheKey, System.Threading.CancellationToken)
  nameWithType.vb: ICacheProvider.RetrieveAsync(Of TInstance)(CacheKey, CancellationToken)
  fullName.vb: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.RetrieveAsync(Of TInstance)(Remora.Discord.Caching.Abstractions.CacheKey, System.Threading.CancellationToken)
  name.vb: RetrieveAsync(Of TInstance)(CacheKey, CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.RetrieveAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
    name: RetrieveAsync
    href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html#Remora_Discord_Caching_Abstractions_Services_ICacheProvider_RetrieveAsync__1_Remora_Discord_Caching_Abstractions_CacheKey_System_Threading_CancellationToken_
  - name: <
  - name: TInstance
  - name: '>'
  - name: (
  - uid: Remora.Discord.Caching.Abstractions.CacheKey
    name: CacheKey
    href: Remora.Discord.Caching.Abstractions.CacheKey.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.RetrieveAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
    name: RetrieveAsync
    href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html#Remora_Discord_Caching_Abstractions_Services_ICacheProvider_RetrieveAsync__1_Remora_Discord_Caching_Abstractions_CacheKey_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TInstance
  - name: )
  - name: (
  - uid: Remora.Discord.Caching.Abstractions.CacheKey
    name: CacheKey
    href: Remora.Discord.Caching.Abstractions.CacheKey.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.ValueTask{Remora.Results.Result{{TInstance}}}
  commentId: T:System.Threading.Tasks.ValueTask{Remora.Results.Result{``0}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<Result<TInstance>>
  nameWithType: ValueTask<Result<TInstance>>
  fullName: System.Threading.Tasks.ValueTask<Remora.Results.Result<TInstance>>
  nameWithType.vb: ValueTask(Of Result(Of TInstance))
  fullName.vb: System.Threading.Tasks.ValueTask(Of Remora.Results.Result(Of TInstance))
  name.vb: ValueTask(Of Result(Of TInstance))
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - name: TInstance
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TInstance
  - name: )
  - name: )
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Remora.Discord.Rest.Caching.MemoryCacheProvider.EvictAsync*
  commentId: Overload:Remora.Discord.Rest.Caching.MemoryCacheProvider.EvictAsync
  href: Remora.Discord.Rest.Caching.MemoryCacheProvider.html#Remora_Discord_Rest_Caching_MemoryCacheProvider_EvictAsync_Remora_Discord_Caching_Abstractions_CacheKey_System_Threading_CancellationToken_
  name: EvictAsync
  nameWithType: MemoryCacheProvider.EvictAsync
  fullName: Remora.Discord.Rest.Caching.MemoryCacheProvider.EvictAsync
- uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.EvictAsync(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Caching.Abstractions.Services.ICacheProvider.EvictAsync(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  parent: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  isExternal: true
  href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html#Remora_Discord_Caching_Abstractions_Services_ICacheProvider_EvictAsync_Remora_Discord_Caching_Abstractions_CacheKey_System_Threading_CancellationToken_
  name: EvictAsync(CacheKey, CancellationToken)
  nameWithType: ICacheProvider.EvictAsync(CacheKey, CancellationToken)
  fullName: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.EvictAsync(Remora.Discord.Caching.Abstractions.CacheKey, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.EvictAsync(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
    name: EvictAsync
    href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html#Remora_Discord_Caching_Abstractions_Services_ICacheProvider_EvictAsync_Remora_Discord_Caching_Abstractions_CacheKey_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.Caching.Abstractions.CacheKey
    name: CacheKey
    href: Remora.Discord.Caching.Abstractions.CacheKey.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.EvictAsync(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
    name: EvictAsync
    href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html#Remora_Discord_Caching_Abstractions_Services_ICacheProvider_EvictAsync_Remora_Discord_Caching_Abstractions_CacheKey_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.Caching.Abstractions.CacheKey
    name: CacheKey
    href: Remora.Discord.Caching.Abstractions.CacheKey.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.ValueTask{Remora.Results.Result}
  commentId: T:System.Threading.Tasks.ValueTask{Remora.Results.Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<Result>
  nameWithType: ValueTask<Result>
  fullName: System.Threading.Tasks.ValueTask<Remora.Results.Result>
  nameWithType.vb: ValueTask(Of Result)
  fullName.vb: System.Threading.Tasks.ValueTask(Of Remora.Results.Result)
  name.vb: ValueTask(Of Result)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: )
- uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.EvictAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Caching.Abstractions.Services.ICacheProvider.EvictAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
  parent: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  isExternal: true
  href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html#Remora_Discord_Caching_Abstractions_Services_ICacheProvider_EvictAsync__1_Remora_Discord_Caching_Abstractions_CacheKey_System_Threading_CancellationToken_
  name: EvictAsync<TInstance>(CacheKey, CancellationToken)
  nameWithType: ICacheProvider.EvictAsync<TInstance>(CacheKey, CancellationToken)
  fullName: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.EvictAsync<TInstance>(Remora.Discord.Caching.Abstractions.CacheKey, System.Threading.CancellationToken)
  nameWithType.vb: ICacheProvider.EvictAsync(Of TInstance)(CacheKey, CancellationToken)
  fullName.vb: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.EvictAsync(Of TInstance)(Remora.Discord.Caching.Abstractions.CacheKey, System.Threading.CancellationToken)
  name.vb: EvictAsync(Of TInstance)(CacheKey, CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.EvictAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
    name: EvictAsync
    href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html#Remora_Discord_Caching_Abstractions_Services_ICacheProvider_EvictAsync__1_Remora_Discord_Caching_Abstractions_CacheKey_System_Threading_CancellationToken_
  - name: <
  - name: TInstance
  - name: '>'
  - name: (
  - uid: Remora.Discord.Caching.Abstractions.CacheKey
    name: CacheKey
    href: Remora.Discord.Caching.Abstractions.CacheKey.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.EvictAsync``1(Remora.Discord.Caching.Abstractions.CacheKey,System.Threading.CancellationToken)
    name: EvictAsync
    href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html#Remora_Discord_Caching_Abstractions_Services_ICacheProvider_EvictAsync__1_Remora_Discord_Caching_Abstractions_CacheKey_System_Threading_CancellationToken_
  - name: (
  - name: Of
  - name: " "
  - name: TInstance
  - name: )
  - name: (
  - uid: Remora.Discord.Caching.Abstractions.CacheKey
    name: CacheKey
    href: Remora.Discord.Caching.Abstractions.CacheKey.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
