### YamlMime:ManagedReference
items:
- uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk
  commentId: T:Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk
  id: IMessageDeleteBulk
  parent: Remora.Discord.API.Abstractions.Gateway.Events
  children:
  - Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.ChannelID
  - Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.GuildID
  - Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.IDs
  langs:
  - csharp
  - vb
  name: IMessageDeleteBulk
  nameWithType: IMessageDeleteBulk
  fullName: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk
  type: Interface
  source:
    id: IMessageDeleteBulk
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Gateway\Events\Messages\IMessageDeleteBulk.cs
    startLine: 31
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Gateway.Events
  summary: Represents a bulk deletion of a set of messages.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public interface IMessageDeleteBulk : IGatewayEvent, IGatewayPayloadData
    content.vb: >-
      <PublicAPI>

      Public Interface IMessageDeleteBulk Inherits IGatewayEvent, IGatewayPayloadData
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.IDs
  commentId: P:Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.IDs
  id: IDs
  parent: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk
  langs:
  - csharp
  - vb
  name: IDs
  nameWithType: IMessageDeleteBulk.IDs
  fullName: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.IDs
  type: Property
  source:
    id: IDs
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Gateway\Events\Messages\IMessageDeleteBulk.cs
    startLine: 38
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Gateway.Events
  summary: Gets the IDs of the removed messages.
  example: []
  syntax:
    content: IReadOnlyList<Snowflake> IDs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}
    content.vb: ReadOnly Property IDs As IReadOnlyList(Of Snowflake)
  overload: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.IDs*
- uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.ChannelID
  commentId: P:Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.ChannelID
  id: ChannelID
  parent: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk
  langs:
  - csharp
  - vb
  name: ChannelID
  nameWithType: IMessageDeleteBulk.ChannelID
  fullName: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.ChannelID
  type: Property
  source:
    id: ChannelID
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Gateway\Events\Messages\IMessageDeleteBulk.cs
    startLine: 43
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Gateway.Events
  summary: Gets the ID of the channel.
  example: []
  syntax:
    content: Snowflake ChannelID { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Snowflake
    content.vb: ReadOnly Property ChannelID As Snowflake
  overload: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.ChannelID*
- uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.GuildID
  commentId: P:Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.GuildID
  id: GuildID
  parent: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk
  langs:
  - csharp
  - vb
  name: GuildID
  nameWithType: IMessageDeleteBulk.GuildID
  fullName: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.GuildID
  type: Property
  source:
    id: GuildID
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Gateway\Events\Messages\IMessageDeleteBulk.cs
    startLine: 48
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Gateway.Events
  summary: Gets the ID of the guild.
  example: []
  syntax:
    content: Optional<Snowflake> GuildID { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
    content.vb: ReadOnly Property GuildID As [Optional](Of Snowflake)
  overload: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.GuildID*
references:
- uid: Remora.Discord.API.Abstractions.Gateway.Events
  commentId: N:Remora.Discord.API.Abstractions.Gateway.Events
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Gateway.Events
  nameWithType: Remora.Discord.API.Abstractions.Gateway.Events
  fullName: Remora.Discord.API.Abstractions.Gateway.Events
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway
    name: Gateway
    href: Remora.Discord.API.Abstractions.Gateway.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway.Events
    name: Events
    href: Remora.Discord.API.Abstractions.Gateway.Events.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway
    name: Gateway
    href: Remora.Discord.API.Abstractions.Gateway.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway.Events
    name: Events
    href: Remora.Discord.API.Abstractions.Gateway.Events.html
- uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.IDs*
  commentId: Overload:Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.IDs
  href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.html#Remora_Discord_API_Abstractions_Gateway_Events_IMessageDeleteBulk_IDs
  name: IDs
  nameWithType: IMessageDeleteBulk.IDs
  fullName: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.IDs
- uid: System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}
  commentId: T:System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<Snowflake>
  nameWithType: IReadOnlyList<Snowflake>
  fullName: System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>
  nameWithType.vb: IReadOnlyList(Of Snowflake)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)
  name.vb: IReadOnlyList(Of Snowflake)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.ChannelID*
  commentId: Overload:Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.ChannelID
  href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.html#Remora_Discord_API_Abstractions_Gateway_Events_IMessageDeleteBulk_ChannelID
  name: ChannelID
  nameWithType: IMessageDeleteBulk.ChannelID
  fullName: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.ChannelID
- uid: Remora.Rest.Core.Snowflake
  commentId: T:Remora.Rest.Core.Snowflake
  parent: Remora.Rest.Core
  isExternal: true
  name: Snowflake
  nameWithType: Snowflake
  fullName: Remora.Rest.Core.Snowflake
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.GuildID*
  commentId: Overload:Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.GuildID
  href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.html#Remora_Discord_API_Abstractions_Gateway_Events_IMessageDeleteBulk_GuildID
  name: GuildID
  nameWithType: IMessageDeleteBulk.GuildID
  fullName: Remora.Discord.API.Abstractions.Gateway.Events.IMessageDeleteBulk.GuildID
- uid: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  commentId: T:Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  name: Optional<Snowflake>
  nameWithType: Optional<Snowflake>
  fullName: Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>
  nameWithType.vb: Optional(Of Snowflake)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake)
  name.vb: Optional(Of Snowflake)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
