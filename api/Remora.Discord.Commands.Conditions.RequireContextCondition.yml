### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Commands.Conditions.RequireContextCondition
  commentId: T:Remora.Discord.Commands.Conditions.RequireContextCondition
  id: RequireContextCondition
  parent: Remora.Discord.Commands.Conditions
  children:
  - Remora.Discord.Commands.Conditions.RequireContextCondition.#ctor(Remora.Discord.Commands.Contexts.IOperationContext,Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)
  - Remora.Discord.Commands.Conditions.RequireContextCondition.CheckAsync(Remora.Discord.Commands.Conditions.RequireContextAttribute,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: RequireContextCondition
  nameWithType: RequireContextCondition
  fullName: Remora.Discord.Commands.Conditions.RequireContextCondition
  type: Class
  source:
    id: RequireContextCondition
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Remora.Discord.Commands\Conditions\RequireContextCondition.cs
    startLine: 38
  assemblies:
  - Remora.Discord.Commands
  namespace: Remora.Discord.Commands.Conditions
  summary: Checks required contexts before allowing execution.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public class RequireContextCondition : ICondition<RequireContextAttribute>, ICondition
    content.vb: >-
      <PublicAPI>

      Public Class RequireContextCondition Implements ICondition(Of RequireContextAttribute), ICondition
  inheritance:
  - System.Object
  implements:
  - Remora.Commands.Conditions.ICondition{Remora.Discord.Commands.Conditions.RequireContextAttribute}
  - Remora.Commands.Conditions.ICondition
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Conditions.RequireContextCondition.#ctor(Remora.Discord.Commands.Contexts.IOperationContext,Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)
  commentId: M:Remora.Discord.Commands.Conditions.RequireContextCondition.#ctor(Remora.Discord.Commands.Contexts.IOperationContext,Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)
  id: '#ctor(Remora.Discord.Commands.Contexts.IOperationContext,Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)'
  parent: Remora.Discord.Commands.Conditions.RequireContextCondition
  langs:
  - csharp
  - vb
  name: RequireContextCondition(IOperationContext, IDiscordRestChannelAPI)
  nameWithType: RequireContextCondition.RequireContextCondition(IOperationContext, IDiscordRestChannelAPI)
  fullName: Remora.Discord.Commands.Conditions.RequireContextCondition.RequireContextCondition(Remora.Discord.Commands.Contexts.IOperationContext, Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Remora.Discord.Commands\Conditions\RequireContextCondition.cs
    startLine: 49
  assemblies:
  - Remora.Discord.Commands
  namespace: Remora.Discord.Commands.Conditions
  summary: Initializes a new instance of the <xref href="Remora.Discord.Commands.Conditions.RequireContextCondition" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public RequireContextCondition(IOperationContext context, IDiscordRestChannelAPI channelAPI)
    parameters:
    - id: context
      type: Remora.Discord.Commands.Contexts.IOperationContext
      description: The command context.
    - id: channelAPI
      type: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
      description: The channel API.
    content.vb: Public Sub New(context As IOperationContext, channelAPI As IDiscordRestChannelAPI)
  overload: Remora.Discord.Commands.Conditions.RequireContextCondition.#ctor*
  nameWithType.vb: RequireContextCondition.New(IOperationContext, IDiscordRestChannelAPI)
  fullName.vb: Remora.Discord.Commands.Conditions.RequireContextCondition.New(Remora.Discord.Commands.Contexts.IOperationContext, Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)
  name.vb: New(IOperationContext, IDiscordRestChannelAPI)
- uid: Remora.Discord.Commands.Conditions.RequireContextCondition.CheckAsync(Remora.Discord.Commands.Conditions.RequireContextAttribute,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Commands.Conditions.RequireContextCondition.CheckAsync(Remora.Discord.Commands.Conditions.RequireContextAttribute,System.Threading.CancellationToken)
  id: CheckAsync(Remora.Discord.Commands.Conditions.RequireContextAttribute,System.Threading.CancellationToken)
  parent: Remora.Discord.Commands.Conditions.RequireContextCondition
  langs:
  - csharp
  - vb
  name: CheckAsync(RequireContextAttribute, CancellationToken)
  nameWithType: RequireContextCondition.CheckAsync(RequireContextAttribute, CancellationToken)
  fullName: Remora.Discord.Commands.Conditions.RequireContextCondition.CheckAsync(Remora.Discord.Commands.Conditions.RequireContextAttribute, System.Threading.CancellationToken)
  type: Method
  source:
    id: CheckAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Remora.Discord.Commands\Conditions\RequireContextCondition.cs
    startLine: 60
  assemblies:
  - Remora.Discord.Commands
  namespace: Remora.Discord.Commands.Conditions
  summary: Checks the condition against the given data, using contextual data available in the given attribute.
  example: []
  syntax:
    content: public ValueTask<Result> CheckAsync(RequireContextAttribute attribute, CancellationToken ct)
    parameters:
    - id: attribute
      type: Remora.Discord.Commands.Conditions.RequireContextAttribute
      description: The attribute.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.ValueTask{Remora.Results.Result}
      description: A condition result which may or may not have succeeded.
    content.vb: Public Function CheckAsync(attribute As RequireContextAttribute, ct As CancellationToken) As ValueTask(Of Result)
  overload: Remora.Discord.Commands.Conditions.RequireContextCondition.CheckAsync*
  implements:
  - Remora.Commands.Conditions.ICondition{Remora.Discord.Commands.Conditions.RequireContextAttribute}.CheckAsync(Remora.Discord.Commands.Conditions.RequireContextAttribute,System.Threading.CancellationToken)
references:
- uid: Remora.Discord.Commands.Conditions
  commentId: N:Remora.Discord.Commands.Conditions
  href: Remora.html
  name: Remora.Discord.Commands.Conditions
  nameWithType: Remora.Discord.Commands.Conditions
  fullName: Remora.Discord.Commands.Conditions
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Conditions
    name: Conditions
    href: Remora.Discord.Commands.Conditions.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Conditions
    name: Conditions
    href: Remora.Discord.Commands.Conditions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Commands.Conditions.ICondition{Remora.Discord.Commands.Conditions.RequireContextAttribute}
  commentId: T:Remora.Commands.Conditions.ICondition{Remora.Discord.Commands.Conditions.RequireContextAttribute}
  parent: Remora.Commands.Conditions
  definition: Remora.Commands.Conditions.ICondition`1
  href: Remora.Discord.Commands.Conditions.RequireContextAttribute.html
  name: ICondition<RequireContextAttribute>
  nameWithType: ICondition<RequireContextAttribute>
  fullName: Remora.Commands.Conditions.ICondition<Remora.Discord.Commands.Conditions.RequireContextAttribute>
  nameWithType.vb: ICondition(Of RequireContextAttribute)
  fullName.vb: Remora.Commands.Conditions.ICondition(Of Remora.Discord.Commands.Conditions.RequireContextAttribute)
  name.vb: ICondition(Of RequireContextAttribute)
  spec.csharp:
  - uid: Remora.Commands.Conditions.ICondition`1
    name: ICondition
    isExternal: true
  - name: <
  - uid: Remora.Discord.Commands.Conditions.RequireContextAttribute
    name: RequireContextAttribute
    href: Remora.Discord.Commands.Conditions.RequireContextAttribute.html
  - name: '>'
  spec.vb:
  - uid: Remora.Commands.Conditions.ICondition`1
    name: ICondition
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.Commands.Conditions.RequireContextAttribute
    name: RequireContextAttribute
    href: Remora.Discord.Commands.Conditions.RequireContextAttribute.html
  - name: )
- uid: Remora.Commands.Conditions.ICondition
  commentId: T:Remora.Commands.Conditions.ICondition
  parent: Remora.Commands.Conditions
  isExternal: true
  name: ICondition
  nameWithType: ICondition
  fullName: Remora.Commands.Conditions.ICondition
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Commands.Conditions.ICondition`1
  commentId: T:Remora.Commands.Conditions.ICondition`1
  isExternal: true
  name: ICondition<TAttribute>
  nameWithType: ICondition<TAttribute>
  fullName: Remora.Commands.Conditions.ICondition<TAttribute>
  nameWithType.vb: ICondition(Of TAttribute)
  fullName.vb: Remora.Commands.Conditions.ICondition(Of TAttribute)
  name.vb: ICondition(Of TAttribute)
  spec.csharp:
  - uid: Remora.Commands.Conditions.ICondition`1
    name: ICondition
    isExternal: true
  - name: <
  - name: TAttribute
  - name: '>'
  spec.vb:
  - uid: Remora.Commands.Conditions.ICondition`1
    name: ICondition
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TAttribute
  - name: )
- uid: Remora.Commands.Conditions
  commentId: N:Remora.Commands.Conditions
  isExternal: true
  name: Remora.Commands.Conditions
  nameWithType: Remora.Commands.Conditions
  fullName: Remora.Commands.Conditions
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Commands
    name: Commands
    isExternal: true
  - name: .
  - uid: Remora.Commands.Conditions
    name: Conditions
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Commands
    name: Commands
    isExternal: true
  - name: .
  - uid: Remora.Commands.Conditions
    name: Conditions
    isExternal: true
- uid: Remora.Discord.Commands.Conditions.RequireContextCondition
  commentId: T:Remora.Discord.Commands.Conditions.RequireContextCondition
  href: Remora.Discord.Commands.Conditions.RequireContextCondition.html
  name: RequireContextCondition
  nameWithType: RequireContextCondition
  fullName: Remora.Discord.Commands.Conditions.RequireContextCondition
- uid: Remora.Discord.Commands.Conditions.RequireContextCondition.#ctor*
  commentId: Overload:Remora.Discord.Commands.Conditions.RequireContextCondition.#ctor
  href: Remora.Discord.Commands.Conditions.RequireContextCondition.html#Remora_Discord_Commands_Conditions_RequireContextCondition__ctor_Remora_Discord_Commands_Contexts_IOperationContext_Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_
  name: RequireContextCondition
  nameWithType: RequireContextCondition.RequireContextCondition
  fullName: Remora.Discord.Commands.Conditions.RequireContextCondition.RequireContextCondition
  nameWithType.vb: RequireContextCondition.New
  fullName.vb: Remora.Discord.Commands.Conditions.RequireContextCondition.New
  name.vb: New
- uid: Remora.Discord.Commands.Contexts.IOperationContext
  commentId: T:Remora.Discord.Commands.Contexts.IOperationContext
  parent: Remora.Discord.Commands.Contexts
  href: Remora.Discord.Commands.Contexts.IOperationContext.html
  name: IOperationContext
  nameWithType: IOperationContext
  fullName: Remora.Discord.Commands.Contexts.IOperationContext
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  commentId: T:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  parent: Remora.Discord.API.Abstractions.Rest
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html
  name: IDiscordRestChannelAPI
  nameWithType: IDiscordRestChannelAPI
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
- uid: Remora.Discord.Commands.Contexts
  commentId: N:Remora.Discord.Commands.Contexts
  href: Remora.html
  name: Remora.Discord.Commands.Contexts
  nameWithType: Remora.Discord.Commands.Contexts
  fullName: Remora.Discord.Commands.Contexts
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Contexts
    name: Contexts
    href: Remora.Discord.Commands.Contexts.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Contexts
    name: Contexts
    href: Remora.Discord.Commands.Contexts.html
- uid: Remora.Discord.API.Abstractions.Rest
  commentId: N:Remora.Discord.API.Abstractions.Rest
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Rest
  nameWithType: Remora.Discord.API.Abstractions.Rest
  fullName: Remora.Discord.API.Abstractions.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
- uid: Remora.Discord.Commands.Conditions.RequireContextCondition.CheckAsync*
  commentId: Overload:Remora.Discord.Commands.Conditions.RequireContextCondition.CheckAsync
  href: Remora.Discord.Commands.Conditions.RequireContextCondition.html#Remora_Discord_Commands_Conditions_RequireContextCondition_CheckAsync_Remora_Discord_Commands_Conditions_RequireContextAttribute_System_Threading_CancellationToken_
  name: CheckAsync
  nameWithType: RequireContextCondition.CheckAsync
  fullName: Remora.Discord.Commands.Conditions.RequireContextCondition.CheckAsync
- uid: Remora.Commands.Conditions.ICondition{Remora.Discord.Commands.Conditions.RequireContextAttribute}.CheckAsync(Remora.Discord.Commands.Conditions.RequireContextAttribute,System.Threading.CancellationToken)
  commentId: M:Remora.Commands.Conditions.ICondition{Remora.Discord.Commands.Conditions.RequireContextAttribute}.CheckAsync(Remora.Discord.Commands.Conditions.RequireContextAttribute,System.Threading.CancellationToken)
  parent: Remora.Commands.Conditions.ICondition{Remora.Discord.Commands.Conditions.RequireContextAttribute}
  definition: Remora.Commands.Conditions.ICondition`1.CheckAsync(`0,System.Threading.CancellationToken)
  href: Remora.Discord.Commands.Conditions.RequireContextAttribute.html
  name: CheckAsync(RequireContextAttribute, CancellationToken)
  nameWithType: ICondition<RequireContextAttribute>.CheckAsync(RequireContextAttribute, CancellationToken)
  fullName: Remora.Commands.Conditions.ICondition<Remora.Discord.Commands.Conditions.RequireContextAttribute>.CheckAsync(Remora.Discord.Commands.Conditions.RequireContextAttribute, System.Threading.CancellationToken)
  nameWithType.vb: ICondition(Of RequireContextAttribute).CheckAsync(RequireContextAttribute, CancellationToken)
  fullName.vb: Remora.Commands.Conditions.ICondition(Of Remora.Discord.Commands.Conditions.RequireContextAttribute).CheckAsync(Remora.Discord.Commands.Conditions.RequireContextAttribute, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Commands.Conditions.ICondition{Remora.Discord.Commands.Conditions.RequireContextAttribute}.CheckAsync(Remora.Discord.Commands.Conditions.RequireContextAttribute,System.Threading.CancellationToken)
    name: CheckAsync
    isExternal: true
  - name: (
  - uid: Remora.Discord.Commands.Conditions.RequireContextAttribute
    name: RequireContextAttribute
    href: Remora.Discord.Commands.Conditions.RequireContextAttribute.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Commands.Conditions.ICondition{Remora.Discord.Commands.Conditions.RequireContextAttribute}.CheckAsync(Remora.Discord.Commands.Conditions.RequireContextAttribute,System.Threading.CancellationToken)
    name: CheckAsync
    isExternal: true
  - name: (
  - uid: Remora.Discord.Commands.Conditions.RequireContextAttribute
    name: RequireContextAttribute
    href: Remora.Discord.Commands.Conditions.RequireContextAttribute.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Commands.Conditions.RequireContextAttribute
  commentId: T:Remora.Discord.Commands.Conditions.RequireContextAttribute
  parent: Remora.Discord.Commands.Conditions
  href: Remora.Discord.Commands.Conditions.RequireContextAttribute.html
  name: RequireContextAttribute
  nameWithType: RequireContextAttribute
  fullName: Remora.Discord.Commands.Conditions.RequireContextAttribute
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.ValueTask{Remora.Results.Result}
  commentId: T:System.Threading.Tasks.ValueTask{Remora.Results.Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<Result>
  nameWithType: ValueTask<Result>
  fullName: System.Threading.Tasks.ValueTask<Remora.Results.Result>
  nameWithType.vb: ValueTask(Of Result)
  fullName.vb: System.Threading.Tasks.ValueTask(Of Remora.Results.Result)
  name.vb: ValueTask(Of Result)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: )
- uid: Remora.Commands.Conditions.ICondition`1.CheckAsync(`0,System.Threading.CancellationToken)
  commentId: M:Remora.Commands.Conditions.ICondition`1.CheckAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CheckAsync(TAttribute, CancellationToken)
  nameWithType: ICondition<TAttribute>.CheckAsync(TAttribute, CancellationToken)
  fullName: Remora.Commands.Conditions.ICondition<TAttribute>.CheckAsync(TAttribute, System.Threading.CancellationToken)
  nameWithType.vb: ICondition(Of TAttribute).CheckAsync(TAttribute, CancellationToken)
  fullName.vb: Remora.Commands.Conditions.ICondition(Of TAttribute).CheckAsync(TAttribute, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Commands.Conditions.ICondition`1.CheckAsync(`0,System.Threading.CancellationToken)
    name: CheckAsync
    isExternal: true
  - name: (
  - name: TAttribute
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Commands.Conditions.ICondition`1.CheckAsync(`0,System.Threading.CancellationToken)
    name: CheckAsync
    isExternal: true
  - name: (
  - name: TAttribute
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
