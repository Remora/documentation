### YamlMime:ManagedReference
items:
- uid: Remora.Discord.API.CDN
  commentId: T:Remora.Discord.API.CDN
  id: CDN
  parent: Remora.Discord.API
  children:
  - Remora.Discord.API.CDN.GetAchievementIconUrl(Remora.Discord.API.Abstractions.Objects.IApplication,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetAchievementIconUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetApplicationAssetUrl(Remora.Discord.API.Abstractions.Objects.IApplication,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetApplicationAssetUrl(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetApplicationCoverUrl(Remora.Discord.API.Abstractions.Objects.IApplication,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetApplicationCoverUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetApplicationIconUrl(Remora.Discord.API.Abstractions.Objects.IApplication,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetApplicationIconUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetDefaultUserAvatarUrl(OneOf.OneOf{Remora.Rest.Core.Snowflake,System.UInt16},Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetDefaultUserAvatarUrl(Remora.Discord.API.Abstractions.Objects.IUser,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetEmojiUrl(Remora.Discord.API.Abstractions.Objects.IEmoji,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetEmojiUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetGuildBannerUrl(Remora.Discord.API.Abstractions.Objects.IGuild,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetGuildBannerUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetGuildDiscoverySplashUrl(Remora.Discord.API.Abstractions.Objects.IGuild,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetGuildDiscoverySplashUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetGuildIconUrl(Remora.Discord.API.Abstractions.Objects.IGuild,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetGuildIconUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetGuildMemberAvatarUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IGuildMember,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetGuildMemberAvatarUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetGuildMemberBannerUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetGuildScheduledEventCoverUrl(Remora.Discord.API.Abstractions.Objects.IGuildScheduledEvent,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetGuildScheduledEventCoverUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetGuildSplashUrl(Remora.Discord.API.Abstractions.Objects.IGuild,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetGuildSplashUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetRoleIconUrl(Remora.Discord.API.Abstractions.Objects.IRole,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetRoleIconUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetStickerPackBannerUrl(Remora.Discord.API.Abstractions.Objects.IStickerPack,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetStickerPackBannerUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetStickerUrl(Remora.Discord.API.Abstractions.Objects.ISticker,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetStickerUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetStorePageAssetUrl(Remora.Discord.API.Abstractions.Objects.IApplication,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetStorePageAssetUrl(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetTeamIconUrl(Remora.Discord.API.Abstractions.Objects.ITeam,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetTeamIconUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetUserAvatarDecorationUrl(Remora.Discord.API.Abstractions.Objects.IUser,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetUserAvatarDecorationUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetUserAvatarUrl(Remora.Discord.API.Abstractions.Objects.IUser,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetUserAvatarUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetUserBannerUrl(Remora.Discord.API.Abstractions.Objects.IUser,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  - Remora.Discord.API.CDN.GetUserBannerUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  langs:
  - csharp
  - vb
  name: CDN
  nameWithType: CDN
  fullName: Remora.Discord.API.CDN
  type: Class
  source:
    id: CDN
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 37
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Provides various helper methods for accessing Discord's CDN.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public static class CDN
    content.vb: >-
      <PublicAPI>

      Public Module CDN
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.CDN.GetEmojiUrl(Remora.Discord.API.Abstractions.Objects.IEmoji,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetEmojiUrl(Remora.Discord.API.Abstractions.Objects.IEmoji,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetEmojiUrl(Remora.Discord.API.Abstractions.Objects.IEmoji,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetEmojiUrl(IEmoji, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetEmojiUrl(IEmoji, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetEmojiUrl(Remora.Discord.API.Abstractions.Objects.IEmoji, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetEmojiUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 50
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given emoji.
  remarks: If the emoji is an animated emoji, the GIF variant of the image is preferred.
  example: []
  syntax:
    content: public static Result<Uri> GetEmojiUrl(IEmoji emoji, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: emoji
      type: Remora.Discord.API.Abstractions.Objects.IEmoji
      description: The emoji.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetEmojiUrl(emoji As IEmoji, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetEmojiUrl*
  nameWithType.vb: CDN.GetEmojiUrl(IEmoji, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetEmojiUrl(Remora.Discord.API.Abstractions.Objects.IEmoji, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetEmojiUrl(IEmoji, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetEmojiUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetEmojiUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetEmojiUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetEmojiUrl(Snowflake, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetEmojiUrl(Snowflake, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetEmojiUrl(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetEmojiUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 83
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given emoji.
  example: []
  syntax:
    content: public static Result<Uri> GetEmojiUrl(Snowflake emojiID, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: emojiID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the emoji.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetEmojiUrl(emojiID As Snowflake, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetEmojiUrl*
  nameWithType.vb: CDN.GetEmojiUrl(Snowflake, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetEmojiUrl(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetEmojiUrl(Snowflake, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetGuildIconUrl(Remora.Discord.API.Abstractions.Objects.IGuild,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetGuildIconUrl(Remora.Discord.API.Abstractions.Objects.IGuild,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetGuildIconUrl(Remora.Discord.API.Abstractions.Objects.IGuild,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetGuildIconUrl(IGuild, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetGuildIconUrl(IGuild, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetGuildIconUrl(Remora.Discord.API.Abstractions.Objects.IGuild, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetGuildIconUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 132
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given guild's icon.
  example: []
  syntax:
    content: public static Result<Uri> GetGuildIconUrl(IGuild guild, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: guild
      type: Remora.Discord.API.Abstractions.Objects.IGuild
      description: The guild.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetGuildIconUrl(guild As IGuild, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetGuildIconUrl*
  nameWithType.vb: CDN.GetGuildIconUrl(IGuild, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetGuildIconUrl(Remora.Discord.API.Abstractions.Objects.IGuild, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetGuildIconUrl(IGuild, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetGuildIconUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetGuildIconUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetGuildIconUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetGuildIconUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetGuildIconUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetGuildIconUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetGuildIconUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 161
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given guild's icon.
  example: []
  syntax:
    content: public static Result<Uri> GetGuildIconUrl(Snowflake guildID, IImageHash iconHash, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: iconHash
      type: Remora.Discord.API.Abstractions.Objects.IImageHash
      description: The image hash of the guild's icon.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetGuildIconUrl(guildID As Snowflake, iconHash As IImageHash, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetGuildIconUrl*
  nameWithType.vb: CDN.GetGuildIconUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetGuildIconUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetGuildIconUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetGuildSplashUrl(Remora.Discord.API.Abstractions.Objects.IGuild,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetGuildSplashUrl(Remora.Discord.API.Abstractions.Objects.IGuild,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetGuildSplashUrl(Remora.Discord.API.Abstractions.Objects.IGuild,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetGuildSplashUrl(IGuild, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetGuildSplashUrl(IGuild, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetGuildSplashUrl(Remora.Discord.API.Abstractions.Objects.IGuild, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetGuildSplashUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 211
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given guild's splash.
  example: []
  syntax:
    content: public static Result<Uri> GetGuildSplashUrl(IGuild guild, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: guild
      type: Remora.Discord.API.Abstractions.Objects.IGuild
      description: The guild.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetGuildSplashUrl(guild As IGuild, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetGuildSplashUrl*
  nameWithType.vb: CDN.GetGuildSplashUrl(IGuild, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetGuildSplashUrl(Remora.Discord.API.Abstractions.Objects.IGuild, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetGuildSplashUrl(IGuild, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetGuildSplashUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetGuildSplashUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetGuildSplashUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetGuildSplashUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetGuildSplashUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetGuildSplashUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetGuildSplashUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 231
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given guild's splash.
  example: []
  syntax:
    content: public static Result<Uri> GetGuildSplashUrl(Snowflake guildID, IImageHash splashHash, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: splashHash
      type: Remora.Discord.API.Abstractions.Objects.IImageHash
      description: The image hash of the guild's splash.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetGuildSplashUrl(guildID As Snowflake, splashHash As IImageHash, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetGuildSplashUrl*
  nameWithType.vb: CDN.GetGuildSplashUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetGuildSplashUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetGuildSplashUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetGuildDiscoverySplashUrl(Remora.Discord.API.Abstractions.Objects.IGuild,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetGuildDiscoverySplashUrl(Remora.Discord.API.Abstractions.Objects.IGuild,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetGuildDiscoverySplashUrl(Remora.Discord.API.Abstractions.Objects.IGuild,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetGuildDiscoverySplashUrl(IGuild, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetGuildDiscoverySplashUrl(IGuild, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetGuildDiscoverySplashUrl(Remora.Discord.API.Abstractions.Objects.IGuild, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetGuildDiscoverySplashUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 280
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given guild's discovery splash.
  example: []
  syntax:
    content: public static Result<Uri> GetGuildDiscoverySplashUrl(IGuild guild, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: guild
      type: Remora.Discord.API.Abstractions.Objects.IGuild
      description: The guild.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetGuildDiscoverySplashUrl(guild As IGuild, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetGuildDiscoverySplashUrl*
  nameWithType.vb: CDN.GetGuildDiscoverySplashUrl(IGuild, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetGuildDiscoverySplashUrl(Remora.Discord.API.Abstractions.Objects.IGuild, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetGuildDiscoverySplashUrl(IGuild, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetGuildDiscoverySplashUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetGuildDiscoverySplashUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetGuildDiscoverySplashUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetGuildDiscoverySplashUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetGuildDiscoverySplashUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetGuildDiscoverySplashUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetGuildDiscoverySplashUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 300
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given guild's discovery splash.
  example: []
  syntax:
    content: public static Result<Uri> GetGuildDiscoverySplashUrl(Snowflake guildID, IImageHash discoverySplashHash, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: discoverySplashHash
      type: Remora.Discord.API.Abstractions.Objects.IImageHash
      description: The image hash of the guild's discovery splash.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetGuildDiscoverySplashUrl(guildID As Snowflake, discoverySplashHash As IImageHash, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetGuildDiscoverySplashUrl*
  nameWithType.vb: CDN.GetGuildDiscoverySplashUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetGuildDiscoverySplashUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetGuildDiscoverySplashUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetGuildBannerUrl(Remora.Discord.API.Abstractions.Objects.IGuild,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetGuildBannerUrl(Remora.Discord.API.Abstractions.Objects.IGuild,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetGuildBannerUrl(Remora.Discord.API.Abstractions.Objects.IGuild,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetGuildBannerUrl(IGuild, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetGuildBannerUrl(IGuild, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetGuildBannerUrl(Remora.Discord.API.Abstractions.Objects.IGuild, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetGuildBannerUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 349
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given guild's banner.
  example: []
  syntax:
    content: public static Result<Uri> GetGuildBannerUrl(IGuild guild, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: guild
      type: Remora.Discord.API.Abstractions.Objects.IGuild
      description: The guild.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetGuildBannerUrl(guild As IGuild, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetGuildBannerUrl*
  nameWithType.vb: CDN.GetGuildBannerUrl(IGuild, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetGuildBannerUrl(Remora.Discord.API.Abstractions.Objects.IGuild, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetGuildBannerUrl(IGuild, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetGuildBannerUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetGuildBannerUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetGuildBannerUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetGuildBannerUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetGuildBannerUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetGuildBannerUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetGuildBannerUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 369
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given guild's banner.
  example: []
  syntax:
    content: public static Result<Uri> GetGuildBannerUrl(Snowflake guildID, IImageHash bannerHash, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: bannerHash
      type: Remora.Discord.API.Abstractions.Objects.IImageHash
      description: The image hash of the guild's banner.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetGuildBannerUrl(guildID As Snowflake, bannerHash As IImageHash, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetGuildBannerUrl*
  nameWithType.vb: CDN.GetGuildBannerUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetGuildBannerUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetGuildBannerUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetUserBannerUrl(Remora.Discord.API.Abstractions.Objects.IUser,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetUserBannerUrl(Remora.Discord.API.Abstractions.Objects.IUser,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetUserBannerUrl(Remora.Discord.API.Abstractions.Objects.IUser,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetUserBannerUrl(IUser, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetUserBannerUrl(IUser, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetUserBannerUrl(Remora.Discord.API.Abstractions.Objects.IUser, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetUserBannerUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 419
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given user's banner.
  example: []
  syntax:
    content: public static Result<Uri> GetUserBannerUrl(IUser user, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: user
      type: Remora.Discord.API.Abstractions.Objects.IUser
      description: The user.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetUserBannerUrl(user As IUser, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetUserBannerUrl*
  nameWithType.vb: CDN.GetUserBannerUrl(IUser, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetUserBannerUrl(Remora.Discord.API.Abstractions.Objects.IUser, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetUserBannerUrl(IUser, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetUserBannerUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetUserBannerUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetUserBannerUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetUserBannerUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetUserBannerUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetUserBannerUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetUserBannerUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 439
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given user's banner.
  example: []
  syntax:
    content: public static Result<Uri> GetUserBannerUrl(Snowflake userID, IImageHash bannerHash, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: userID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the user.
    - id: bannerHash
      type: Remora.Discord.API.Abstractions.Objects.IImageHash
      description: The image hash of the user's banner.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetUserBannerUrl(userID As Snowflake, bannerHash As IImageHash, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetUserBannerUrl*
  nameWithType.vb: CDN.GetUserBannerUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetUserBannerUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetUserBannerUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetDefaultUserAvatarUrl(Remora.Discord.API.Abstractions.Objects.IUser,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetDefaultUserAvatarUrl(Remora.Discord.API.Abstractions.Objects.IUser,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetDefaultUserAvatarUrl(Remora.Discord.API.Abstractions.Objects.IUser,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetDefaultUserAvatarUrl(IUser, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetDefaultUserAvatarUrl(IUser, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetDefaultUserAvatarUrl(Remora.Discord.API.Abstractions.Objects.IUser, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetDefaultUserAvatarUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 489
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given user's default avatar.
  example: []
  syntax:
    content: public static Result<Uri> GetDefaultUserAvatarUrl(IUser user, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: user
      type: Remora.Discord.API.Abstractions.Objects.IUser
      description: The user.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetDefaultUserAvatarUrl(user As IUser, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetDefaultUserAvatarUrl*
  nameWithType.vb: CDN.GetDefaultUserAvatarUrl(IUser, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetDefaultUserAvatarUrl(Remora.Discord.API.Abstractions.Objects.IUser, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetDefaultUserAvatarUrl(IUser, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetDefaultUserAvatarUrl(OneOf.OneOf{Remora.Rest.Core.Snowflake,System.UInt16},Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetDefaultUserAvatarUrl(OneOf.OneOf{Remora.Rest.Core.Snowflake,System.UInt16},Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetDefaultUserAvatarUrl(OneOf.OneOf{Remora.Rest.Core.Snowflake,System.UInt16},Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetDefaultUserAvatarUrl(OneOf<Snowflake, ushort>, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetDefaultUserAvatarUrl(OneOf<Snowflake, ushort>, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetDefaultUserAvatarUrl(OneOf.OneOf<Remora.Rest.Core.Snowflake, ushort>, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetDefaultUserAvatarUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 507
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given user's default avatar.
  remarks: The ID of the user should be preferred, as any migrated accounts will have a discriminator of 0, and the result will be wrong.
  example: []
  syntax:
    content: public static Result<Uri> GetDefaultUserAvatarUrl(OneOf<Snowflake, ushort> userDiscriminatorOrID, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: userDiscriminatorOrID
      type: OneOf.OneOf{Remora.Rest.Core.Snowflake,System.UInt16}
      description: The user's discriminator, or their ID.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetDefaultUserAvatarUrl(userDiscriminatorOrID As OneOf(Of Snowflake, UShort), imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetDefaultUserAvatarUrl*
  nameWithType.vb: CDN.GetDefaultUserAvatarUrl(OneOf(Of Snowflake, UShort), Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetDefaultUserAvatarUrl(OneOf.OneOf(Of Remora.Rest.Core.Snowflake, UShort), Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetDefaultUserAvatarUrl(OneOf(Of Snowflake, UShort), Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetUserAvatarUrl(Remora.Discord.API.Abstractions.Objects.IUser,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetUserAvatarUrl(Remora.Discord.API.Abstractions.Objects.IUser,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetUserAvatarUrl(Remora.Discord.API.Abstractions.Objects.IUser,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetUserAvatarUrl(IUser, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetUserAvatarUrl(IUser, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetUserAvatarUrl(Remora.Discord.API.Abstractions.Objects.IUser, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetUserAvatarUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 554
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given user's avatar.
  example: []
  syntax:
    content: public static Result<Uri> GetUserAvatarUrl(IUser user, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: user
      type: Remora.Discord.API.Abstractions.Objects.IUser
      description: The user.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetUserAvatarUrl(user As IUser, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetUserAvatarUrl*
  nameWithType.vb: CDN.GetUserAvatarUrl(IUser, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetUserAvatarUrl(Remora.Discord.API.Abstractions.Objects.IUser, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetUserAvatarUrl(IUser, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetUserAvatarUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetUserAvatarUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetUserAvatarUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetUserAvatarUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetUserAvatarUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetUserAvatarUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetUserAvatarUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 583
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given user's avatar.
  example: []
  syntax:
    content: public static Result<Uri> GetUserAvatarUrl(Snowflake userID, IImageHash avatarHash, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: userID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the team.
    - id: avatarHash
      type: Remora.Discord.API.Abstractions.Objects.IImageHash
      description: The image hash of the user's avatar.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetUserAvatarUrl(userID As Snowflake, avatarHash As IImageHash, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetUserAvatarUrl*
  nameWithType.vb: CDN.GetUserAvatarUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetUserAvatarUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetUserAvatarUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetGuildMemberAvatarUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IGuildMember,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetGuildMemberAvatarUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IGuildMember,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetGuildMemberAvatarUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IGuildMember,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetGuildMemberAvatarUrl(Snowflake, IGuildMember, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetGuildMemberAvatarUrl(Snowflake, IGuildMember, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetGuildMemberAvatarUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IGuildMember, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetGuildMemberAvatarUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 634
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given guild member's avatar.
  example: []
  syntax:
    content: public static Result<Uri> GetGuildMemberAvatarUrl(Snowflake guildID, IGuildMember member, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The guild to retrieve the member avatar of.
    - id: member
      type: Remora.Discord.API.Abstractions.Objects.IGuildMember
      description: The guild member.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetGuildMemberAvatarUrl(guildID As Snowflake, member As IGuildMember, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetGuildMemberAvatarUrl*
  nameWithType.vb: CDN.GetGuildMemberAvatarUrl(Snowflake, IGuildMember, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetGuildMemberAvatarUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IGuildMember, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetGuildMemberAvatarUrl(Snowflake, IGuildMember, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetGuildMemberAvatarUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetGuildMemberAvatarUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetGuildMemberAvatarUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetGuildMemberAvatarUrl(Snowflake, Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetGuildMemberAvatarUrl(Snowflake, Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetGuildMemberAvatarUrl(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetGuildMemberAvatarUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 665
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given guild member's avatar.
  example: []
  syntax:
    content: public static Result<Uri> GetGuildMemberAvatarUrl(Snowflake guildID, Snowflake userID, IImageHash avatarHash, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The guild to retrieve the member avatar of.
    - id: userID
      type: Remora.Rest.Core.Snowflake
      description: The user ID of the guild member.
    - id: avatarHash
      type: Remora.Discord.API.Abstractions.Objects.IImageHash
      description: The image hash of the guild member's avatar.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetGuildMemberAvatarUrl(guildID As Snowflake, userID As Snowflake, avatarHash As IImageHash, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetGuildMemberAvatarUrl*
  nameWithType.vb: CDN.GetGuildMemberAvatarUrl(Snowflake, Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetGuildMemberAvatarUrl(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetGuildMemberAvatarUrl(Snowflake, Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetUserAvatarDecorationUrl(Remora.Discord.API.Abstractions.Objects.IUser,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetUserAvatarDecorationUrl(Remora.Discord.API.Abstractions.Objects.IUser,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetUserAvatarDecorationUrl(Remora.Discord.API.Abstractions.Objects.IUser,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetUserAvatarDecorationUrl(IUser, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetUserAvatarDecorationUrl(IUser, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetUserAvatarDecorationUrl(Remora.Discord.API.Abstractions.Objects.IUser, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetUserAvatarDecorationUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 716
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given user's avatar decoration.
  example: []
  syntax:
    content: public static Result<Uri> GetUserAvatarDecorationUrl(IUser user, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: user
      type: Remora.Discord.API.Abstractions.Objects.IUser
      description: The user.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetUserAvatarDecorationUrl(user As IUser, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetUserAvatarDecorationUrl*
  nameWithType.vb: CDN.GetUserAvatarDecorationUrl(IUser, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetUserAvatarDecorationUrl(Remora.Discord.API.Abstractions.Objects.IUser, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetUserAvatarDecorationUrl(IUser, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetUserAvatarDecorationUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetUserAvatarDecorationUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetUserAvatarDecorationUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetUserAvatarDecorationUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetUserAvatarDecorationUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetUserAvatarDecorationUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetUserAvatarDecorationUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 745
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given user's avatar decoration.
  example: []
  syntax:
    content: public static Result<Uri> GetUserAvatarDecorationUrl(Snowflake userID, IImageHash avatarDecorationHash, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: userID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the user.
    - id: avatarDecorationHash
      type: Remora.Discord.API.Abstractions.Objects.IImageHash
      description: The image hash of the user's avatar decoration.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetUserAvatarDecorationUrl(userID As Snowflake, avatarDecorationHash As IImageHash, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetUserAvatarDecorationUrl*
  nameWithType.vb: CDN.GetUserAvatarDecorationUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetUserAvatarDecorationUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetUserAvatarDecorationUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetApplicationIconUrl(Remora.Discord.API.Abstractions.Objects.IApplication,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetApplicationIconUrl(Remora.Discord.API.Abstractions.Objects.IApplication,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetApplicationIconUrl(Remora.Discord.API.Abstractions.Objects.IApplication,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetApplicationIconUrl(IApplication, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetApplicationIconUrl(IApplication, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetApplicationIconUrl(Remora.Discord.API.Abstractions.Objects.IApplication, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetApplicationIconUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 792
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given application's icon.
  example: []
  syntax:
    content: public static Result<Uri> GetApplicationIconUrl(IApplication application, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: application
      type: Remora.Discord.API.Abstractions.Objects.IApplication
      description: The application.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetApplicationIconUrl(application As IApplication, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetApplicationIconUrl*
  nameWithType.vb: CDN.GetApplicationIconUrl(IApplication, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetApplicationIconUrl(Remora.Discord.API.Abstractions.Objects.IApplication, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetApplicationIconUrl(IApplication, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetApplicationIconUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetApplicationIconUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetApplicationIconUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetApplicationIconUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetApplicationIconUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetApplicationIconUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetApplicationIconUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 812
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given application's icon.
  example: []
  syntax:
    content: public static Result<Uri> GetApplicationIconUrl(Snowflake applicationID, IImageHash iconHash, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the application.
    - id: iconHash
      type: Remora.Discord.API.Abstractions.Objects.IImageHash
      description: The image hash of the application's icon.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetApplicationIconUrl(applicationID As Snowflake, iconHash As IImageHash, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetApplicationIconUrl*
  nameWithType.vb: CDN.GetApplicationIconUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetApplicationIconUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetApplicationIconUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetApplicationCoverUrl(Remora.Discord.API.Abstractions.Objects.IApplication,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetApplicationCoverUrl(Remora.Discord.API.Abstractions.Objects.IApplication,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetApplicationCoverUrl(Remora.Discord.API.Abstractions.Objects.IApplication,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetApplicationCoverUrl(IApplication, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetApplicationCoverUrl(IApplication, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetApplicationCoverUrl(Remora.Discord.API.Abstractions.Objects.IApplication, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetApplicationCoverUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 861
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given application's cover.
  example: []
  syntax:
    content: public static Result<Uri> GetApplicationCoverUrl(IApplication application, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: application
      type: Remora.Discord.API.Abstractions.Objects.IApplication
      description: The application.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetApplicationCoverUrl(application As IApplication, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetApplicationCoverUrl*
  nameWithType.vb: CDN.GetApplicationCoverUrl(IApplication, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetApplicationCoverUrl(Remora.Discord.API.Abstractions.Objects.IApplication, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetApplicationCoverUrl(IApplication, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetApplicationCoverUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetApplicationCoverUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetApplicationCoverUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetApplicationCoverUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetApplicationCoverUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetApplicationCoverUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetApplicationCoverUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 881
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given application's cover.
  example: []
  syntax:
    content: public static Result<Uri> GetApplicationCoverUrl(Snowflake applicationID, IImageHash coverHash, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the application.
    - id: coverHash
      type: Remora.Discord.API.Abstractions.Objects.IImageHash
      description: The image hash of the application's cover.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetApplicationCoverUrl(applicationID As Snowflake, coverHash As IImageHash, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetApplicationCoverUrl*
  nameWithType.vb: CDN.GetApplicationCoverUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetApplicationCoverUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetApplicationCoverUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetApplicationAssetUrl(Remora.Discord.API.Abstractions.Objects.IApplication,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetApplicationAssetUrl(Remora.Discord.API.Abstractions.Objects.IApplication,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetApplicationAssetUrl(Remora.Discord.API.Abstractions.Objects.IApplication,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetApplicationAssetUrl(IApplication, string, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetApplicationAssetUrl(IApplication, string, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetApplicationAssetUrl(Remora.Discord.API.Abstractions.Objects.IApplication, string, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetApplicationAssetUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 931
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given application's given asset.
  example: []
  syntax:
    content: public static Result<Uri> GetApplicationAssetUrl(IApplication application, string assetID, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: application
      type: Remora.Discord.API.Abstractions.Objects.IApplication
      description: The application.
    - id: assetID
      type: System.String
      description: The asset ID.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetApplicationAssetUrl(application As IApplication, assetID As String, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetApplicationAssetUrl*
  nameWithType.vb: CDN.GetApplicationAssetUrl(IApplication, String, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetApplicationAssetUrl(Remora.Discord.API.Abstractions.Objects.IApplication, String, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetApplicationAssetUrl(IApplication, String, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetApplicationAssetUrl(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetApplicationAssetUrl(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetApplicationAssetUrl(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetApplicationAssetUrl(Snowflake, string, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetApplicationAssetUrl(Snowflake, string, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetApplicationAssetUrl(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetApplicationAssetUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 947
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given application's given asset.
  example: []
  syntax:
    content: public static Result<Uri> GetApplicationAssetUrl(Snowflake applicationID, string assetID, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the application.
    - id: assetID
      type: System.String
      description: The asset ID.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetApplicationAssetUrl(applicationID As Snowflake, assetID As String, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetApplicationAssetUrl*
  nameWithType.vb: CDN.GetApplicationAssetUrl(Snowflake, String, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetApplicationAssetUrl(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetApplicationAssetUrl(Snowflake, String, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetAchievementIconUrl(Remora.Discord.API.Abstractions.Objects.IApplication,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetAchievementIconUrl(Remora.Discord.API.Abstractions.Objects.IApplication,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetAchievementIconUrl(Remora.Discord.API.Abstractions.Objects.IApplication,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetAchievementIconUrl(IApplication, Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetAchievementIconUrl(IApplication, Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetAchievementIconUrl(Remora.Discord.API.Abstractions.Objects.IApplication, Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetAchievementIconUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 998
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given achievement's icon.
  example: []
  syntax:
    content: public static Result<Uri> GetAchievementIconUrl(IApplication application, Snowflake achievementID, IImageHash iconHash, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: application
      type: Remora.Discord.API.Abstractions.Objects.IApplication
      description: The application.
    - id: achievementID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the achievement.
    - id: iconHash
      type: Remora.Discord.API.Abstractions.Objects.IImageHash
      description: The image hash of the icon.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetAchievementIconUrl(application As IApplication, achievementID As Snowflake, iconHash As IImageHash, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetAchievementIconUrl*
  nameWithType.vb: CDN.GetAchievementIconUrl(IApplication, Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetAchievementIconUrl(Remora.Discord.API.Abstractions.Objects.IApplication, Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetAchievementIconUrl(IApplication, Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetAchievementIconUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetAchievementIconUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetAchievementIconUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetAchievementIconUrl(Snowflake, Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetAchievementIconUrl(Snowflake, Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetAchievementIconUrl(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetAchievementIconUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 1016
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given achievement's icon.
  example: []
  syntax:
    content: public static Result<Uri> GetAchievementIconUrl(Snowflake applicationID, Snowflake achievementID, IImageHash iconHash, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the application.
    - id: achievementID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the achievement.
    - id: iconHash
      type: Remora.Discord.API.Abstractions.Objects.IImageHash
      description: The image hash of the achievement's icon.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetAchievementIconUrl(applicationID As Snowflake, achievementID As Snowflake, iconHash As IImageHash, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetAchievementIconUrl*
  nameWithType.vb: CDN.GetAchievementIconUrl(Snowflake, Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetAchievementIconUrl(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetAchievementIconUrl(Snowflake, Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetStorePageAssetUrl(Remora.Discord.API.Abstractions.Objects.IApplication,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetStorePageAssetUrl(Remora.Discord.API.Abstractions.Objects.IApplication,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetStorePageAssetUrl(Remora.Discord.API.Abstractions.Objects.IApplication,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetStorePageAssetUrl(IApplication, string, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetStorePageAssetUrl(IApplication, string, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetStorePageAssetUrl(Remora.Discord.API.Abstractions.Objects.IApplication, string, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetStorePageAssetUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 1068
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given application's store page's icon.
  example: []
  syntax:
    content: public static Result<Uri> GetStorePageAssetUrl(IApplication application, string assetID, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: application
      type: Remora.Discord.API.Abstractions.Objects.IApplication
      description: The application.
    - id: assetID
      type: System.String
      description: The ID of the asset.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetStorePageAssetUrl(application As IApplication, assetID As String, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetStorePageAssetUrl*
  nameWithType.vb: CDN.GetStorePageAssetUrl(IApplication, String, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetStorePageAssetUrl(Remora.Discord.API.Abstractions.Objects.IApplication, String, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetStorePageAssetUrl(IApplication, String, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetStorePageAssetUrl(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetStorePageAssetUrl(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetStorePageAssetUrl(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetStorePageAssetUrl(Snowflake, string, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetStorePageAssetUrl(Snowflake, string, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetStorePageAssetUrl(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetStorePageAssetUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 1084
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given application's store page asset..
  example: []
  syntax:
    content: public static Result<Uri> GetStorePageAssetUrl(Snowflake applicationID, string assetID, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the application.
    - id: assetID
      type: System.String
      description: The ID of the asset.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetStorePageAssetUrl(applicationID As Snowflake, assetID As String, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetStorePageAssetUrl*
  nameWithType.vb: CDN.GetStorePageAssetUrl(Snowflake, String, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetStorePageAssetUrl(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetStorePageAssetUrl(Snowflake, String, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetStickerPackBannerUrl(Remora.Discord.API.Abstractions.Objects.IStickerPack,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetStickerPackBannerUrl(Remora.Discord.API.Abstractions.Objects.IStickerPack,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetStickerPackBannerUrl(Remora.Discord.API.Abstractions.Objects.IStickerPack,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetStickerPackBannerUrl(IStickerPack, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetStickerPackBannerUrl(IStickerPack, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetStickerPackBannerUrl(Remora.Discord.API.Abstractions.Objects.IStickerPack, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetStickerPackBannerUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 1133
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given sticker pack's banner.
  example: []
  syntax:
    content: public static Result<Uri> GetStickerPackBannerUrl(IStickerPack stickerPack, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: stickerPack
      type: Remora.Discord.API.Abstractions.Objects.IStickerPack
      description: The sticker pack.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetStickerPackBannerUrl(stickerPack As IStickerPack, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetStickerPackBannerUrl*
  nameWithType.vb: CDN.GetStickerPackBannerUrl(IStickerPack, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetStickerPackBannerUrl(Remora.Discord.API.Abstractions.Objects.IStickerPack, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetStickerPackBannerUrl(IStickerPack, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetStickerPackBannerUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetStickerPackBannerUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetStickerPackBannerUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetStickerPackBannerUrl(Snowflake, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetStickerPackBannerUrl(Snowflake, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetStickerPackBannerUrl(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetStickerPackBannerUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 1152
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given sticker pack's banner.
  example: []
  syntax:
    content: public static Result<Uri> GetStickerPackBannerUrl(Snowflake bannerAssetID, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: bannerAssetID
      type: Remora.Rest.Core.Snowflake
      description: The asset ID of the sticker pack.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetStickerPackBannerUrl(bannerAssetID As Snowflake, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetStickerPackBannerUrl*
  nameWithType.vb: CDN.GetStickerPackBannerUrl(Snowflake, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetStickerPackBannerUrl(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetStickerPackBannerUrl(Snowflake, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetTeamIconUrl(Remora.Discord.API.Abstractions.Objects.ITeam,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetTeamIconUrl(Remora.Discord.API.Abstractions.Objects.ITeam,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetTeamIconUrl(Remora.Discord.API.Abstractions.Objects.ITeam,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetTeamIconUrl(ITeam, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetTeamIconUrl(ITeam, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetTeamIconUrl(Remora.Discord.API.Abstractions.Objects.ITeam, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetTeamIconUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 1201
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given team's icon.
  example: []
  syntax:
    content: public static Result<Uri> GetTeamIconUrl(ITeam team, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: team
      type: Remora.Discord.API.Abstractions.Objects.ITeam
      description: The team.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetTeamIconUrl(team As ITeam, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetTeamIconUrl*
  nameWithType.vb: CDN.GetTeamIconUrl(ITeam, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetTeamIconUrl(Remora.Discord.API.Abstractions.Objects.ITeam, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetTeamIconUrl(ITeam, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetTeamIconUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetTeamIconUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetTeamIconUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetTeamIconUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetTeamIconUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetTeamIconUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetTeamIconUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 1221
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given team's icon.
  example: []
  syntax:
    content: public static Result<Uri> GetTeamIconUrl(Snowflake teamID, IImageHash iconHash, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: teamID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the team.
    - id: iconHash
      type: Remora.Discord.API.Abstractions.Objects.IImageHash
      description: The image hash of the team's icon.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetTeamIconUrl(teamID As Snowflake, iconHash As IImageHash, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetTeamIconUrl*
  nameWithType.vb: CDN.GetTeamIconUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetTeamIconUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetTeamIconUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetStickerUrl(Remora.Discord.API.Abstractions.Objects.ISticker,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetStickerUrl(Remora.Discord.API.Abstractions.Objects.ISticker,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetStickerUrl(Remora.Discord.API.Abstractions.Objects.ISticker,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetStickerUrl(ISticker, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetStickerUrl(ISticker, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetStickerUrl(Remora.Discord.API.Abstractions.Objects.ISticker, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetStickerUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 1270
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given sticker.
  example: []
  syntax:
    content: public static Result<Uri> GetStickerUrl(ISticker sticker, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: sticker
      type: Remora.Discord.API.Abstractions.Objects.ISticker
      description: The sticker pack.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetStickerUrl(sticker As ISticker, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetStickerUrl*
  nameWithType.vb: CDN.GetStickerUrl(ISticker, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetStickerUrl(Remora.Discord.API.Abstractions.Objects.ISticker, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetStickerUrl(ISticker, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetStickerUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetStickerUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetStickerUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetStickerUrl(Snowflake, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetStickerUrl(Snowflake, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetStickerUrl(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetStickerUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 1284
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given sticker.
  example: []
  syntax:
    content: public static Result<Uri> GetStickerUrl(Snowflake stickerID, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: stickerID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the sticker.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetStickerUrl(stickerID As Snowflake, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetStickerUrl*
  nameWithType.vb: CDN.GetStickerUrl(Snowflake, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetStickerUrl(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetStickerUrl(Snowflake, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetRoleIconUrl(Remora.Discord.API.Abstractions.Objects.IRole,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetRoleIconUrl(Remora.Discord.API.Abstractions.Objects.IRole,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetRoleIconUrl(Remora.Discord.API.Abstractions.Objects.IRole,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetRoleIconUrl(IRole, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetRoleIconUrl(IRole, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetRoleIconUrl(Remora.Discord.API.Abstractions.Objects.IRole, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetRoleIconUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 1332
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given role's icon.
  example: []
  syntax:
    content: public static Result<Uri> GetRoleIconUrl(IRole role, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: role
      type: Remora.Discord.API.Abstractions.Objects.IRole
      description: The role.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetRoleIconUrl(role As IRole, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetRoleIconUrl*
  nameWithType.vb: CDN.GetRoleIconUrl(IRole, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetRoleIconUrl(Remora.Discord.API.Abstractions.Objects.IRole, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetRoleIconUrl(IRole, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetRoleIconUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetRoleIconUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetRoleIconUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetRoleIconUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetRoleIconUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetRoleIconUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetRoleIconUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 1352
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given role's icon.
  example: []
  syntax:
    content: public static Result<Uri> GetRoleIconUrl(Snowflake roleID, IImageHash iconHash, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: roleID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the role.
    - id: iconHash
      type: Remora.Discord.API.Abstractions.Objects.IImageHash
      description: The image hash.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetRoleIconUrl(roleID As Snowflake, iconHash As IImageHash, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetRoleIconUrl*
  nameWithType.vb: CDN.GetRoleIconUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetRoleIconUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetRoleIconUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetGuildScheduledEventCoverUrl(Remora.Discord.API.Abstractions.Objects.IGuildScheduledEvent,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetGuildScheduledEventCoverUrl(Remora.Discord.API.Abstractions.Objects.IGuildScheduledEvent,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetGuildScheduledEventCoverUrl(Remora.Discord.API.Abstractions.Objects.IGuildScheduledEvent,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetGuildScheduledEventCoverUrl(IGuildScheduledEvent, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetGuildScheduledEventCoverUrl(IGuildScheduledEvent, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetGuildScheduledEventCoverUrl(Remora.Discord.API.Abstractions.Objects.IGuildScheduledEvent, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetGuildScheduledEventCoverUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 1401
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given scheduled event's banner.
  example: []
  syntax:
    content: public static Result<Uri> GetGuildScheduledEventCoverUrl(IGuildScheduledEvent scheduledEvent, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: scheduledEvent
      type: Remora.Discord.API.Abstractions.Objects.IGuildScheduledEvent
      description: The role.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetGuildScheduledEventCoverUrl(scheduledEvent As IGuildScheduledEvent, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetGuildScheduledEventCoverUrl*
  nameWithType.vb: CDN.GetGuildScheduledEventCoverUrl(IGuildScheduledEvent, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetGuildScheduledEventCoverUrl(Remora.Discord.API.Abstractions.Objects.IGuildScheduledEvent, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetGuildScheduledEventCoverUrl(IGuildScheduledEvent, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetGuildScheduledEventCoverUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetGuildScheduledEventCoverUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetGuildScheduledEventCoverUrl(Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetGuildScheduledEventCoverUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetGuildScheduledEventCoverUrl(Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetGuildScheduledEventCoverUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetGuildScheduledEventCoverUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 1421
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given scheduled event's banner.
  example: []
  syntax:
    content: public static Result<Uri> GetGuildScheduledEventCoverUrl(Snowflake eventID, IImageHash bannerHash, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: eventID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the event.
    - id: bannerHash
      type: Remora.Discord.API.Abstractions.Objects.IImageHash
      description: The banner hash.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetGuildScheduledEventCoverUrl(eventID As Snowflake, bannerHash As IImageHash, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetGuildScheduledEventCoverUrl*
  nameWithType.vb: CDN.GetGuildScheduledEventCoverUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetGuildScheduledEventCoverUrl(Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetGuildScheduledEventCoverUrl(Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
- uid: Remora.Discord.API.CDN.GetGuildMemberBannerUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  commentId: M:Remora.Discord.API.CDN.GetGuildMemberBannerUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  id: GetGuildMemberBannerUrl(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.IImageHash,Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat},Remora.Rest.Core.Optional{System.UInt16})
  parent: Remora.Discord.API.CDN
  langs:
  - csharp
  - vb
  name: GetGuildMemberBannerUrl(Snowflake, Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  nameWithType: CDN.GetGuildMemberBannerUrl(Snowflake, Snowflake, IImageHash, Optional<CDNImageFormat>, Optional<ushort>)
  fullName: Remora.Discord.API.CDN.GetGuildMemberBannerUrl(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>, Remora.Rest.Core.Optional<ushort>)
  type: Method
  source:
    id: GetGuildMemberBannerUrl
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\CDN.cs
    startLine: 1472
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API
  summary: Gets the CDN URI of the given guild member's banner.
  example: []
  syntax:
    content: public static Result<Uri> GetGuildMemberBannerUrl(Snowflake guildID, Snowflake userID, IImageHash bannerHash, Optional<CDNImageFormat> imageFormat = default, Optional<ushort> imageSize = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: userID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the user.
    - id: bannerHash
      type: Remora.Discord.API.Abstractions.Objects.IImageHash
      description: The banner hash.
    - id: imageFormat
      type: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
      description: The requested image format.
    - id: imageSize
      type: Remora.Rest.Core.Optional{System.UInt16}
      description: The requested image size. May be any power of two between 16 and 4096.
    return:
      type: Remora.Results.Result{System.Uri}
      description: A result which may or may not have succeeded.
    content.vb: Public Shared Function GetGuildMemberBannerUrl(guildID As Snowflake, userID As Snowflake, bannerHash As IImageHash, imageFormat As [Optional](Of CDNImageFormat) = Nothing, imageSize As [Optional](Of UShort) = Nothing) As Result(Of Uri)
  overload: Remora.Discord.API.CDN.GetGuildMemberBannerUrl*
  nameWithType.vb: CDN.GetGuildMemberBannerUrl(Snowflake, Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
  fullName.vb: Remora.Discord.API.CDN.GetGuildMemberBannerUrl(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.IImageHash, Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat), Remora.Rest.Core.Optional(Of UShort))
  name.vb: GetGuildMemberBannerUrl(Snowflake, Snowflake, IImageHash, Optional(Of CDNImageFormat), Optional(Of UShort))
references:
- uid: Remora.Discord.API
  commentId: N:Remora.Discord.API
  href: Remora.html
  name: Remora.Discord.API
  nameWithType: Remora.Discord.API
  fullName: Remora.Discord.API
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.API.CDN.GetEmojiUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetEmojiUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetEmojiUrl_Remora_Discord_API_Abstractions_Objects_IEmoji_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetEmojiUrl
  nameWithType: CDN.GetEmojiUrl
  fullName: Remora.Discord.API.CDN.GetEmojiUrl
- uid: Remora.Discord.API.Abstractions.Objects.IEmoji
  commentId: T:Remora.Discord.API.Abstractions.Objects.IEmoji
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IEmoji.html
  name: IEmoji
  nameWithType: IEmoji
  fullName: Remora.Discord.API.Abstractions.Objects.IEmoji
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.CDNImageFormat}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.CDNImageFormat.html
  name: Optional<CDNImageFormat>
  nameWithType: Optional<CDNImageFormat>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.CDNImageFormat>
  nameWithType.vb: Optional(Of CDNImageFormat)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.CDNImageFormat)
  name.vb: Optional(Of CDNImageFormat)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.CDNImageFormat
    name: CDNImageFormat
    href: Remora.Discord.API.CDNImageFormat.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.CDNImageFormat
    name: CDNImageFormat
    href: Remora.Discord.API.CDNImageFormat.html
  - name: )
- uid: Remora.Rest.Core.Optional{System.UInt16}
  commentId: T:Remora.Rest.Core.Optional{System.UInt16}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: Optional<ushort>
  nameWithType: Optional<ushort>
  fullName: Remora.Rest.Core.Optional<ushort>
  nameWithType.vb: Optional(Of UShort)
  fullName.vb: Remora.Rest.Core.Optional(Of UShort)
  name.vb: Optional(Of UShort)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.UInt16
    name: ushort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.UInt16
    name: UShort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: )
- uid: Remora.Results.Result{System.Uri}
  commentId: T:Remora.Results.Result{System.Uri}
  parent: Remora.Results
  definition: Remora.Results.Result`1
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Result<Uri>
  nameWithType: Result<Uri>
  fullName: Remora.Results.Result<System.Uri>
  nameWithType.vb: Result(Of Uri)
  fullName.vb: Remora.Results.Result(Of System.Uri)
  name.vb: Result(Of Uri)
  spec.csharp:
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: '>'
  spec.vb:
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects
  commentId: N:Remora.Discord.API.Abstractions.Objects
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Objects
  nameWithType: Remora.Discord.API.Abstractions.Objects
  fullName: Remora.Discord.API.Abstractions.Objects
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: Remora.Results.Result`1
  commentId: T:Remora.Results.Result`1
  isExternal: true
  name: Result<TEntity>
  nameWithType: Result<TEntity>
  fullName: Remora.Results.Result<TEntity>
  nameWithType.vb: Result(Of TEntity)
  fullName.vb: Remora.Results.Result(Of TEntity)
  name.vb: Result(Of TEntity)
  spec.csharp:
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - name: TEntity
  - name: '>'
  spec.vb:
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TEntity
  - name: )
- uid: Remora.Results
  commentId: N:Remora.Results
  isExternal: true
  name: Remora.Results
  nameWithType: Remora.Results
  fullName: Remora.Results
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Results
    name: Results
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Results
    name: Results
    isExternal: true
- uid: Remora.Rest.Core.Snowflake
  commentId: T:Remora.Rest.Core.Snowflake
  parent: Remora.Rest.Core
  isExternal: true
  name: Snowflake
  nameWithType: Snowflake
  fullName: Remora.Rest.Core.Snowflake
- uid: Remora.Discord.API.CDN.GetGuildIconUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetGuildIconUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetGuildIconUrl_Remora_Discord_API_Abstractions_Objects_IGuild_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetGuildIconUrl
  nameWithType: CDN.GetGuildIconUrl
  fullName: Remora.Discord.API.CDN.GetGuildIconUrl
- uid: Remora.Discord.API.Abstractions.Objects.IGuild
  commentId: T:Remora.Discord.API.Abstractions.Objects.IGuild
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IGuild.html
  name: IGuild
  nameWithType: IGuild
  fullName: Remora.Discord.API.Abstractions.Objects.IGuild
- uid: Remora.Discord.API.Abstractions.Objects.IImageHash
  commentId: T:Remora.Discord.API.Abstractions.Objects.IImageHash
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IImageHash.html
  name: IImageHash
  nameWithType: IImageHash
  fullName: Remora.Discord.API.Abstractions.Objects.IImageHash
- uid: Remora.Discord.API.CDN.GetGuildSplashUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetGuildSplashUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetGuildSplashUrl_Remora_Discord_API_Abstractions_Objects_IGuild_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetGuildSplashUrl
  nameWithType: CDN.GetGuildSplashUrl
  fullName: Remora.Discord.API.CDN.GetGuildSplashUrl
- uid: Remora.Discord.API.CDN.GetGuildDiscoverySplashUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetGuildDiscoverySplashUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetGuildDiscoverySplashUrl_Remora_Discord_API_Abstractions_Objects_IGuild_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetGuildDiscoverySplashUrl
  nameWithType: CDN.GetGuildDiscoverySplashUrl
  fullName: Remora.Discord.API.CDN.GetGuildDiscoverySplashUrl
- uid: Remora.Discord.API.CDN.GetGuildBannerUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetGuildBannerUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetGuildBannerUrl_Remora_Discord_API_Abstractions_Objects_IGuild_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetGuildBannerUrl
  nameWithType: CDN.GetGuildBannerUrl
  fullName: Remora.Discord.API.CDN.GetGuildBannerUrl
- uid: Remora.Discord.API.CDN.GetUserBannerUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetUserBannerUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetUserBannerUrl_Remora_Discord_API_Abstractions_Objects_IUser_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetUserBannerUrl
  nameWithType: CDN.GetUserBannerUrl
  fullName: Remora.Discord.API.CDN.GetUserBannerUrl
- uid: Remora.Discord.API.Abstractions.Objects.IUser
  commentId: T:Remora.Discord.API.Abstractions.Objects.IUser
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IUser.html
  name: IUser
  nameWithType: IUser
  fullName: Remora.Discord.API.Abstractions.Objects.IUser
- uid: Remora.Discord.API.CDN.GetDefaultUserAvatarUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetDefaultUserAvatarUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetDefaultUserAvatarUrl_Remora_Discord_API_Abstractions_Objects_IUser_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetDefaultUserAvatarUrl
  nameWithType: CDN.GetDefaultUserAvatarUrl
  fullName: Remora.Discord.API.CDN.GetDefaultUserAvatarUrl
- uid: OneOf.OneOf{Remora.Rest.Core.Snowflake,System.UInt16}
  commentId: T:OneOf.OneOf{Remora.Rest.Core.Snowflake,System.UInt16}
  parent: OneOf
  definition: OneOf.OneOf`2
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: OneOf<Snowflake, ushort>
  nameWithType: OneOf<Snowflake, ushort>
  fullName: OneOf.OneOf<Remora.Rest.Core.Snowflake, ushort>
  nameWithType.vb: OneOf(Of Snowflake, UShort)
  fullName.vb: OneOf.OneOf(Of Remora.Rest.Core.Snowflake, UShort)
  name.vb: OneOf(Of Snowflake, UShort)
  spec.csharp:
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt16
    name: ushort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: '>'
  spec.vb:
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.UInt16
    name: UShort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: )
- uid: OneOf.OneOf`2
  commentId: T:OneOf.OneOf`2
  isExternal: true
  name: OneOf<T0, T1>
  nameWithType: OneOf<T0, T1>
  fullName: OneOf.OneOf<T0, T1>
  nameWithType.vb: OneOf(Of T0, T1)
  fullName.vb: OneOf.OneOf(Of T0, T1)
  name.vb: OneOf(Of T0, T1)
  spec.csharp:
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: <
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: '>'
  spec.vb:
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: ','
  - name: " "
  - name: T1
  - name: )
- uid: OneOf
  commentId: N:OneOf
  isExternal: true
  name: OneOf
  nameWithType: OneOf
  fullName: OneOf
- uid: Remora.Discord.API.CDN.GetUserAvatarUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetUserAvatarUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetUserAvatarUrl_Remora_Discord_API_Abstractions_Objects_IUser_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetUserAvatarUrl
  nameWithType: CDN.GetUserAvatarUrl
  fullName: Remora.Discord.API.CDN.GetUserAvatarUrl
- uid: Remora.Discord.API.CDN.GetGuildMemberAvatarUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetGuildMemberAvatarUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetGuildMemberAvatarUrl_Remora_Rest_Core_Snowflake_Remora_Discord_API_Abstractions_Objects_IGuildMember_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetGuildMemberAvatarUrl
  nameWithType: CDN.GetGuildMemberAvatarUrl
  fullName: Remora.Discord.API.CDN.GetGuildMemberAvatarUrl
- uid: Remora.Discord.API.Abstractions.Objects.IGuildMember
  commentId: T:Remora.Discord.API.Abstractions.Objects.IGuildMember
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IGuildMember.html
  name: IGuildMember
  nameWithType: IGuildMember
  fullName: Remora.Discord.API.Abstractions.Objects.IGuildMember
- uid: Remora.Discord.API.CDN.GetUserAvatarDecorationUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetUserAvatarDecorationUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetUserAvatarDecorationUrl_Remora_Discord_API_Abstractions_Objects_IUser_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetUserAvatarDecorationUrl
  nameWithType: CDN.GetUserAvatarDecorationUrl
  fullName: Remora.Discord.API.CDN.GetUserAvatarDecorationUrl
- uid: Remora.Discord.API.CDN.GetApplicationIconUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetApplicationIconUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetApplicationIconUrl_Remora_Discord_API_Abstractions_Objects_IApplication_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetApplicationIconUrl
  nameWithType: CDN.GetApplicationIconUrl
  fullName: Remora.Discord.API.CDN.GetApplicationIconUrl
- uid: Remora.Discord.API.Abstractions.Objects.IApplication
  commentId: T:Remora.Discord.API.Abstractions.Objects.IApplication
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IApplication.html
  name: IApplication
  nameWithType: IApplication
  fullName: Remora.Discord.API.Abstractions.Objects.IApplication
- uid: Remora.Discord.API.CDN.GetApplicationCoverUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetApplicationCoverUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetApplicationCoverUrl_Remora_Discord_API_Abstractions_Objects_IApplication_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetApplicationCoverUrl
  nameWithType: CDN.GetApplicationCoverUrl
  fullName: Remora.Discord.API.CDN.GetApplicationCoverUrl
- uid: Remora.Discord.API.CDN.GetApplicationAssetUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetApplicationAssetUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetApplicationAssetUrl_Remora_Discord_API_Abstractions_Objects_IApplication_System_String_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetApplicationAssetUrl
  nameWithType: CDN.GetApplicationAssetUrl
  fullName: Remora.Discord.API.CDN.GetApplicationAssetUrl
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Remora.Discord.API.CDN.GetAchievementIconUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetAchievementIconUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetAchievementIconUrl_Remora_Discord_API_Abstractions_Objects_IApplication_Remora_Rest_Core_Snowflake_Remora_Discord_API_Abstractions_Objects_IImageHash_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetAchievementIconUrl
  nameWithType: CDN.GetAchievementIconUrl
  fullName: Remora.Discord.API.CDN.GetAchievementIconUrl
- uid: Remora.Discord.API.CDN.GetStorePageAssetUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetStorePageAssetUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetStorePageAssetUrl_Remora_Discord_API_Abstractions_Objects_IApplication_System_String_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetStorePageAssetUrl
  nameWithType: CDN.GetStorePageAssetUrl
  fullName: Remora.Discord.API.CDN.GetStorePageAssetUrl
- uid: Remora.Discord.API.CDN.GetStickerPackBannerUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetStickerPackBannerUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetStickerPackBannerUrl_Remora_Discord_API_Abstractions_Objects_IStickerPack_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetStickerPackBannerUrl
  nameWithType: CDN.GetStickerPackBannerUrl
  fullName: Remora.Discord.API.CDN.GetStickerPackBannerUrl
- uid: Remora.Discord.API.Abstractions.Objects.IStickerPack
  commentId: T:Remora.Discord.API.Abstractions.Objects.IStickerPack
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IStickerPack.html
  name: IStickerPack
  nameWithType: IStickerPack
  fullName: Remora.Discord.API.Abstractions.Objects.IStickerPack
- uid: Remora.Discord.API.CDN.GetTeamIconUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetTeamIconUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetTeamIconUrl_Remora_Discord_API_Abstractions_Objects_ITeam_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetTeamIconUrl
  nameWithType: CDN.GetTeamIconUrl
  fullName: Remora.Discord.API.CDN.GetTeamIconUrl
- uid: Remora.Discord.API.Abstractions.Objects.ITeam
  commentId: T:Remora.Discord.API.Abstractions.Objects.ITeam
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.ITeam.html
  name: ITeam
  nameWithType: ITeam
  fullName: Remora.Discord.API.Abstractions.Objects.ITeam
- uid: Remora.Discord.API.CDN.GetStickerUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetStickerUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetStickerUrl_Remora_Discord_API_Abstractions_Objects_ISticker_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetStickerUrl
  nameWithType: CDN.GetStickerUrl
  fullName: Remora.Discord.API.CDN.GetStickerUrl
- uid: Remora.Discord.API.Abstractions.Objects.ISticker
  commentId: T:Remora.Discord.API.Abstractions.Objects.ISticker
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.ISticker.html
  name: ISticker
  nameWithType: ISticker
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker
- uid: Remora.Discord.API.CDN.GetRoleIconUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetRoleIconUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetRoleIconUrl_Remora_Discord_API_Abstractions_Objects_IRole_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetRoleIconUrl
  nameWithType: CDN.GetRoleIconUrl
  fullName: Remora.Discord.API.CDN.GetRoleIconUrl
- uid: Remora.Discord.API.Abstractions.Objects.IRole
  commentId: T:Remora.Discord.API.Abstractions.Objects.IRole
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IRole.html
  name: IRole
  nameWithType: IRole
  fullName: Remora.Discord.API.Abstractions.Objects.IRole
- uid: Remora.Discord.API.CDN.GetGuildScheduledEventCoverUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetGuildScheduledEventCoverUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetGuildScheduledEventCoverUrl_Remora_Discord_API_Abstractions_Objects_IGuildScheduledEvent_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetGuildScheduledEventCoverUrl
  nameWithType: CDN.GetGuildScheduledEventCoverUrl
  fullName: Remora.Discord.API.CDN.GetGuildScheduledEventCoverUrl
- uid: Remora.Discord.API.Abstractions.Objects.IGuildScheduledEvent
  commentId: T:Remora.Discord.API.Abstractions.Objects.IGuildScheduledEvent
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IGuildScheduledEvent.html
  name: IGuildScheduledEvent
  nameWithType: IGuildScheduledEvent
  fullName: Remora.Discord.API.Abstractions.Objects.IGuildScheduledEvent
- uid: Remora.Discord.API.CDN.GetGuildMemberBannerUrl*
  commentId: Overload:Remora.Discord.API.CDN.GetGuildMemberBannerUrl
  href: Remora.Discord.API.CDN.html#Remora_Discord_API_CDN_GetGuildMemberBannerUrl_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Discord_API_Abstractions_Objects_IImageHash_Remora_Rest_Core_Optional_Remora_Discord_API_CDNImageFormat__Remora_Rest_Core_Optional_System_UInt16__
  name: GetGuildMemberBannerUrl
  nameWithType: CDN.GetGuildMemberBannerUrl
  fullName: Remora.Discord.API.CDN.GetGuildMemberBannerUrl
