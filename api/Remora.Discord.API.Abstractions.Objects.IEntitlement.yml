### YamlMime:ManagedReference
items:
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement
  commentId: T:Remora.Discord.API.Abstractions.Objects.IEntitlement
  id: IEntitlement
  parent: Remora.Discord.API.Abstractions.Objects
  children:
  - Remora.Discord.API.Abstractions.Objects.IEntitlement.ApplicationID
  - Remora.Discord.API.Abstractions.Objects.IEntitlement.EndsAt
  - Remora.Discord.API.Abstractions.Objects.IEntitlement.GuildID
  - Remora.Discord.API.Abstractions.Objects.IEntitlement.ID
  - Remora.Discord.API.Abstractions.Objects.IEntitlement.IsConsumed
  - Remora.Discord.API.Abstractions.Objects.IEntitlement.IsDeleted
  - Remora.Discord.API.Abstractions.Objects.IEntitlement.SKUID
  - Remora.Discord.API.Abstractions.Objects.IEntitlement.StartsAt
  - Remora.Discord.API.Abstractions.Objects.IEntitlement.Type
  - Remora.Discord.API.Abstractions.Objects.IEntitlement.UserID
  langs:
  - csharp
  - vb
  name: IEntitlement
  nameWithType: IEntitlement
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement
  type: Interface
  source:
    id: IEntitlement
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Monetization\IEntitlement.cs
    startLine: 31
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Represents information about a user's access to monetized application features.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public interface IEntitlement : IPartialEntitlement
    content.vb: >-
      <PublicAPI>

      Public Interface IEntitlement Inherits IPartialEntitlement
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.ID
  commentId: P:Remora.Discord.API.Abstractions.Objects.IEntitlement.ID
  id: ID
  parent: Remora.Discord.API.Abstractions.Objects.IEntitlement
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: IEntitlement.ID
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.ID
  type: Property
  source:
    id: ID
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Monetization\IEntitlement.cs
    startLine: 37
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the ID of the entitlement.
  example: []
  syntax:
    content: Snowflake ID { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Snowflake
    content.vb: ReadOnly Property ID As Snowflake
  overload: Remora.Discord.API.Abstractions.Objects.IEntitlement.ID*
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.SKUID
  commentId: P:Remora.Discord.API.Abstractions.Objects.IEntitlement.SKUID
  id: SKUID
  parent: Remora.Discord.API.Abstractions.Objects.IEntitlement
  langs:
  - csharp
  - vb
  name: SKUID
  nameWithType: IEntitlement.SKUID
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.SKUID
  type: Property
  source:
    id: SKUID
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Monetization\IEntitlement.cs
    startLine: 42
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the ID of the SKU.
  example: []
  syntax:
    content: Snowflake SKUID { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Snowflake
    content.vb: ReadOnly Property SKUID As Snowflake
  overload: Remora.Discord.API.Abstractions.Objects.IEntitlement.SKUID*
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.ApplicationID
  commentId: P:Remora.Discord.API.Abstractions.Objects.IEntitlement.ApplicationID
  id: ApplicationID
  parent: Remora.Discord.API.Abstractions.Objects.IEntitlement
  langs:
  - csharp
  - vb
  name: ApplicationID
  nameWithType: IEntitlement.ApplicationID
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.ApplicationID
  type: Property
  source:
    id: ApplicationID
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Monetization\IEntitlement.cs
    startLine: 47
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the ID of the parent application.
  example: []
  syntax:
    content: Snowflake ApplicationID { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Snowflake
    content.vb: ReadOnly Property ApplicationID As Snowflake
  overload: Remora.Discord.API.Abstractions.Objects.IEntitlement.ApplicationID*
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.UserID
  commentId: P:Remora.Discord.API.Abstractions.Objects.IEntitlement.UserID
  id: UserID
  parent: Remora.Discord.API.Abstractions.Objects.IEntitlement
  langs:
  - csharp
  - vb
  name: UserID
  nameWithType: IEntitlement.UserID
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.UserID
  type: Property
  source:
    id: UserID
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Monetization\IEntitlement.cs
    startLine: 52
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the ID of the user that is granted access to the entitlement's SKU.
  example: []
  syntax:
    content: Optional<Snowflake> UserID { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
    content.vb: ReadOnly Property UserID As [Optional](Of Snowflake)
  overload: Remora.Discord.API.Abstractions.Objects.IEntitlement.UserID*
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.Type
  commentId: P:Remora.Discord.API.Abstractions.Objects.IEntitlement.Type
  id: Type
  parent: Remora.Discord.API.Abstractions.Objects.IEntitlement
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: IEntitlement.Type
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.Type
  type: Property
  source:
    id: Type
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Monetization\IEntitlement.cs
    startLine: 57
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the type of the entitlement.
  example: []
  syntax:
    content: EntitlementType Type { get; }
    parameters: []
    return:
      type: Remora.Discord.API.Abstractions.Objects.EntitlementType
    content.vb: ReadOnly Property Type As EntitlementType
  overload: Remora.Discord.API.Abstractions.Objects.IEntitlement.Type*
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.IsDeleted
  commentId: P:Remora.Discord.API.Abstractions.Objects.IEntitlement.IsDeleted
  id: IsDeleted
  parent: Remora.Discord.API.Abstractions.Objects.IEntitlement
  langs:
  - csharp
  - vb
  name: IsDeleted
  nameWithType: IEntitlement.IsDeleted
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.IsDeleted
  type: Property
  source:
    id: IsDeleted
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Monetization\IEntitlement.cs
    startLine: 62
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets a value indicating whether the entitlement has been deleted.
  example: []
  syntax:
    content: bool IsDeleted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsDeleted As Boolean
  overload: Remora.Discord.API.Abstractions.Objects.IEntitlement.IsDeleted*
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.StartsAt
  commentId: P:Remora.Discord.API.Abstractions.Objects.IEntitlement.StartsAt
  id: StartsAt
  parent: Remora.Discord.API.Abstractions.Objects.IEntitlement
  langs:
  - csharp
  - vb
  name: StartsAt
  nameWithType: IEntitlement.StartsAt
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.StartsAt
  type: Property
  source:
    id: StartsAt
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Monetization\IEntitlement.cs
    startLine: 67
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the start time at which the entitlement is valid.
  example: []
  syntax:
    content: Optional<DateTimeOffset> StartsAt { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.DateTimeOffset}
    content.vb: ReadOnly Property StartsAt As [Optional](Of DateTimeOffset)
  overload: Remora.Discord.API.Abstractions.Objects.IEntitlement.StartsAt*
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.EndsAt
  commentId: P:Remora.Discord.API.Abstractions.Objects.IEntitlement.EndsAt
  id: EndsAt
  parent: Remora.Discord.API.Abstractions.Objects.IEntitlement
  langs:
  - csharp
  - vb
  name: EndsAt
  nameWithType: IEntitlement.EndsAt
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.EndsAt
  type: Property
  source:
    id: EndsAt
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Monetization\IEntitlement.cs
    startLine: 72
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the end time at which the entitlement is no longer valid.
  example: []
  syntax:
    content: Optional<DateTimeOffset> EndsAt { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.DateTimeOffset}
    content.vb: ReadOnly Property EndsAt As [Optional](Of DateTimeOffset)
  overload: Remora.Discord.API.Abstractions.Objects.IEntitlement.EndsAt*
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.GuildID
  commentId: P:Remora.Discord.API.Abstractions.Objects.IEntitlement.GuildID
  id: GuildID
  parent: Remora.Discord.API.Abstractions.Objects.IEntitlement
  langs:
  - csharp
  - vb
  name: GuildID
  nameWithType: IEntitlement.GuildID
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.GuildID
  type: Property
  source:
    id: GuildID
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Monetization\IEntitlement.cs
    startLine: 77
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the ID of the guild that is granted access to the entitlement's SKU.
  example: []
  syntax:
    content: Optional<Snowflake> GuildID { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
    content.vb: ReadOnly Property GuildID As [Optional](Of Snowflake)
  overload: Remora.Discord.API.Abstractions.Objects.IEntitlement.GuildID*
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.IsConsumed
  commentId: P:Remora.Discord.API.Abstractions.Objects.IEntitlement.IsConsumed
  id: IsConsumed
  parent: Remora.Discord.API.Abstractions.Objects.IEntitlement
  langs:
  - csharp
  - vb
  name: IsConsumed
  nameWithType: IEntitlement.IsConsumed
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.IsConsumed
  type: Property
  source:
    id: IsConsumed
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Monetization\IEntitlement.cs
    startLine: 82
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets a value indicating whether the entitlement has been consumed.
  example: []
  syntax:
    content: Optional<bool> IsConsumed { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Boolean}
    content.vb: ReadOnly Property IsConsumed As [Optional](Of Boolean)
  overload: Remora.Discord.API.Abstractions.Objects.IEntitlement.IsConsumed*
references:
- uid: Remora.Discord.API.Abstractions.Objects
  commentId: N:Remora.Discord.API.Abstractions.Objects
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Objects
  nameWithType: Remora.Discord.API.Abstractions.Objects
  fullName: Remora.Discord.API.Abstractions.Objects
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.ID*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IEntitlement.ID
  href: Remora.Discord.API.Abstractions.Objects.IEntitlement.html#Remora_Discord_API_Abstractions_Objects_IEntitlement_ID
  name: ID
  nameWithType: IEntitlement.ID
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.ID
- uid: Remora.Rest.Core.Snowflake
  commentId: T:Remora.Rest.Core.Snowflake
  parent: Remora.Rest.Core
  isExternal: true
  name: Snowflake
  nameWithType: Snowflake
  fullName: Remora.Rest.Core.Snowflake
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.SKUID*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IEntitlement.SKUID
  href: Remora.Discord.API.Abstractions.Objects.IEntitlement.html#Remora_Discord_API_Abstractions_Objects_IEntitlement_SKUID
  name: SKUID
  nameWithType: IEntitlement.SKUID
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.SKUID
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.ApplicationID*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IEntitlement.ApplicationID
  href: Remora.Discord.API.Abstractions.Objects.IEntitlement.html#Remora_Discord_API_Abstractions_Objects_IEntitlement_ApplicationID
  name: ApplicationID
  nameWithType: IEntitlement.ApplicationID
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.ApplicationID
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.UserID*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IEntitlement.UserID
  href: Remora.Discord.API.Abstractions.Objects.IEntitlement.html#Remora_Discord_API_Abstractions_Objects_IEntitlement_UserID
  name: UserID
  nameWithType: IEntitlement.UserID
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.UserID
- uid: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  commentId: T:Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  name: Optional<Snowflake>
  nameWithType: Optional<Snowflake>
  fullName: Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>
  nameWithType.vb: Optional(Of Snowflake)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake)
  name.vb: Optional(Of Snowflake)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.Type*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IEntitlement.Type
  href: Remora.Discord.API.Abstractions.Objects.IEntitlement.html#Remora_Discord_API_Abstractions_Objects_IEntitlement_Type
  name: Type
  nameWithType: IEntitlement.Type
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.Type
- uid: Remora.Discord.API.Abstractions.Objects.EntitlementType
  commentId: T:Remora.Discord.API.Abstractions.Objects.EntitlementType
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.EntitlementType.html
  name: EntitlementType
  nameWithType: EntitlementType
  fullName: Remora.Discord.API.Abstractions.Objects.EntitlementType
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.IsDeleted*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IEntitlement.IsDeleted
  href: Remora.Discord.API.Abstractions.Objects.IEntitlement.html#Remora_Discord_API_Abstractions_Objects_IEntitlement_IsDeleted
  name: IsDeleted
  nameWithType: IEntitlement.IsDeleted
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.IsDeleted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.StartsAt*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IEntitlement.StartsAt
  href: Remora.Discord.API.Abstractions.Objects.IEntitlement.html#Remora_Discord_API_Abstractions_Objects_IEntitlement_StartsAt
  name: StartsAt
  nameWithType: IEntitlement.StartsAt
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.StartsAt
- uid: Remora.Rest.Core.Optional{System.DateTimeOffset}
  commentId: T:Remora.Rest.Core.Optional{System.DateTimeOffset}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: Optional<DateTimeOffset>
  nameWithType: Optional<DateTimeOffset>
  fullName: Remora.Rest.Core.Optional<System.DateTimeOffset>
  nameWithType.vb: Optional(Of DateTimeOffset)
  fullName.vb: Remora.Rest.Core.Optional(Of System.DateTimeOffset)
  name.vb: Optional(Of DateTimeOffset)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.EndsAt*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IEntitlement.EndsAt
  href: Remora.Discord.API.Abstractions.Objects.IEntitlement.html#Remora_Discord_API_Abstractions_Objects_IEntitlement_EndsAt
  name: EndsAt
  nameWithType: IEntitlement.EndsAt
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.EndsAt
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.GuildID*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IEntitlement.GuildID
  href: Remora.Discord.API.Abstractions.Objects.IEntitlement.html#Remora_Discord_API_Abstractions_Objects_IEntitlement_GuildID
  name: GuildID
  nameWithType: IEntitlement.GuildID
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.GuildID
- uid: Remora.Discord.API.Abstractions.Objects.IEntitlement.IsConsumed*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IEntitlement.IsConsumed
  href: Remora.Discord.API.Abstractions.Objects.IEntitlement.html#Remora_Discord_API_Abstractions_Objects_IEntitlement_IsConsumed
  name: IsConsumed
  nameWithType: IEntitlement.IsConsumed
  fullName: Remora.Discord.API.Abstractions.Objects.IEntitlement.IsConsumed
- uid: Remora.Rest.Core.Optional{System.Boolean}
  commentId: T:Remora.Rest.Core.Optional{System.Boolean}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Optional<bool>
  nameWithType: Optional<bool>
  fullName: Remora.Rest.Core.Optional<bool>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: Remora.Rest.Core.Optional(Of Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
