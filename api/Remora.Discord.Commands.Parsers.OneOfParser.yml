### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Commands.Parsers.OneOfParser
  commentId: T:Remora.Discord.Commands.Parsers.OneOfParser
  id: OneOfParser
  parent: Remora.Discord.Commands.Parsers
  children:
  - Remora.Discord.Commands.Parsers.OneOfParser.#ctor(Remora.Commands.Services.TypeParserService,System.IServiceProvider)
  - Remora.Discord.Commands.Parsers.OneOfParser.CanParse(System.Type)
  - Remora.Discord.Commands.Parsers.OneOfParser.TryParseAsync(System.String,System.Type,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: OneOfParser
  nameWithType: OneOfParser
  fullName: Remora.Discord.Commands.Parsers.OneOfParser
  type: Class
  source:
    id: OneOfParser
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Remora.Discord.Commands\Parsers\OneOfParser.cs
    startLine: 38
  assemblies:
  - Remora.Discord.Commands
  namespace: Remora.Discord.Commands.Parsers
  summary: Parses various instances of the <xref href="OneOf.OneOf%601" data-throw-if-not-resolved="false"></xref> type.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public class OneOfParser : AbstractTypeParser, ITypeParser
    content.vb: >-
      <PublicAPI>

      Public Class OneOfParser Inherits AbstractTypeParser Implements ITypeParser
  inheritance:
  - System.Object
  - Remora.Commands.Parsers.AbstractTypeParser
  implements:
  - Remora.Commands.Parsers.ITypeParser
  inheritedMembers:
  - Remora.Commands.Parsers.AbstractTypeParser.TryParseAsync(System.Collections.Generic.IReadOnlyList{System.String},System.Type,System.Threading.CancellationToken)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Commands.Parsers.OneOfParser.#ctor(Remora.Commands.Services.TypeParserService,System.IServiceProvider)
  commentId: M:Remora.Discord.Commands.Parsers.OneOfParser.#ctor(Remora.Commands.Services.TypeParserService,System.IServiceProvider)
  id: '#ctor(Remora.Commands.Services.TypeParserService,System.IServiceProvider)'
  parent: Remora.Discord.Commands.Parsers.OneOfParser
  langs:
  - csharp
  - vb
  name: OneOfParser(TypeParserService, IServiceProvider)
  nameWithType: OneOfParser.OneOfParser(TypeParserService, IServiceProvider)
  fullName: Remora.Discord.Commands.Parsers.OneOfParser.OneOfParser(Remora.Commands.Services.TypeParserService, System.IServiceProvider)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Remora.Discord.Commands\Parsers\OneOfParser.cs
    startLine: 62
  assemblies:
  - Remora.Discord.Commands
  namespace: Remora.Discord.Commands.Parsers
  summary: Initializes a new instance of the <xref href="Remora.Discord.Commands.Parsers.OneOfParser" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public OneOfParser(TypeParserService typeParserService, IServiceProvider services)
    parameters:
    - id: typeParserService
      type: Remora.Commands.Services.TypeParserService
      description: The type parser service.
    - id: services
      type: System.IServiceProvider
      description: The available services.
    content.vb: Public Sub New(typeParserService As TypeParserService, services As IServiceProvider)
  overload: Remora.Discord.Commands.Parsers.OneOfParser.#ctor*
  nameWithType.vb: OneOfParser.New(TypeParserService, IServiceProvider)
  fullName.vb: Remora.Discord.Commands.Parsers.OneOfParser.New(Remora.Commands.Services.TypeParserService, System.IServiceProvider)
  name.vb: New(TypeParserService, IServiceProvider)
- uid: Remora.Discord.Commands.Parsers.OneOfParser.CanParse(System.Type)
  commentId: M:Remora.Discord.Commands.Parsers.OneOfParser.CanParse(System.Type)
  id: CanParse(System.Type)
  parent: Remora.Discord.Commands.Parsers.OneOfParser
  langs:
  - csharp
  - vb
  name: CanParse(Type)
  nameWithType: OneOfParser.CanParse(Type)
  fullName: Remora.Discord.Commands.Parsers.OneOfParser.CanParse(System.Type)
  type: Method
  source:
    id: CanParse
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Remora.Discord.Commands\Parsers\OneOfParser.cs
    startLine: 69
  assemblies:
  - Remora.Discord.Commands
  namespace: Remora.Discord.Commands.Parsers
  summary: Determines whether the parser can parse the given type.
  example: []
  syntax:
    content: public override bool CanParse(Type type)
    parameters:
    - id: type
      type: System.Type
      description: The type.
    return:
      type: System.Boolean
      description: true if the parser can parse the type; otherwise, false.
    content.vb: Public Overrides Function CanParse(type As Type) As Boolean
  overridden: Remora.Commands.Parsers.AbstractTypeParser.CanParse(System.Type)
  overload: Remora.Discord.Commands.Parsers.OneOfParser.CanParse*
- uid: Remora.Discord.Commands.Parsers.OneOfParser.TryParseAsync(System.String,System.Type,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Commands.Parsers.OneOfParser.TryParseAsync(System.String,System.Type,System.Threading.CancellationToken)
  id: TryParseAsync(System.String,System.Type,System.Threading.CancellationToken)
  parent: Remora.Discord.Commands.Parsers.OneOfParser
  langs:
  - csharp
  - vb
  name: TryParseAsync(string, Type, CancellationToken)
  nameWithType: OneOfParser.TryParseAsync(string, Type, CancellationToken)
  fullName: Remora.Discord.Commands.Parsers.OneOfParser.TryParseAsync(string, System.Type, System.Threading.CancellationToken)
  type: Method
  source:
    id: TryParseAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Remora.Discord.Commands\Parsers\OneOfParser.cs
    startLine: 81
  assemblies:
  - Remora.Discord.Commands
  namespace: Remora.Discord.Commands.Parsers
  summary: Attempts to parse the given string into a CLR object.
  example: []
  syntax:
    content: public override ValueTask<Result<object?>> TryParseAsync(string token, Type type, CancellationToken ct = default)
    parameters:
    - id: token
      type: System.String
      description: The token.
    - id: type
      type: System.Type
      description: The type to parse.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.ValueTask{Remora.Results.Result{System.Object}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overrides Function TryParseAsync(token As String, type As Type, ct As CancellationToken = Nothing) As ValueTask(Of Result(Of Object))
  overridden: Remora.Commands.Parsers.AbstractTypeParser.TryParseAsync(System.String,System.Type,System.Threading.CancellationToken)
  overload: Remora.Discord.Commands.Parsers.OneOfParser.TryParseAsync*
  nameWithType.vb: OneOfParser.TryParseAsync(String, Type, CancellationToken)
  fullName.vb: Remora.Discord.Commands.Parsers.OneOfParser.TryParseAsync(String, System.Type, System.Threading.CancellationToken)
  name.vb: TryParseAsync(String, Type, CancellationToken)
references:
- uid: OneOf.OneOf`1
  commentId: T:OneOf.OneOf`1
  isExternal: true
  name: OneOf<T0>
  nameWithType: OneOf<T0>
  fullName: OneOf.OneOf<T0>
  nameWithType.vb: OneOf(Of T0)
  fullName.vb: OneOf.OneOf(Of T0)
  name.vb: OneOf(Of T0)
  spec.csharp:
  - uid: OneOf.OneOf`1
    name: OneOf
    isExternal: true
  - name: <
  - name: T0
  - name: '>'
  spec.vb:
  - uid: OneOf.OneOf`1
    name: OneOf
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T0
  - name: )
- uid: Remora.Discord.Commands.Parsers
  commentId: N:Remora.Discord.Commands.Parsers
  href: Remora.html
  name: Remora.Discord.Commands.Parsers
  nameWithType: Remora.Discord.Commands.Parsers
  fullName: Remora.Discord.Commands.Parsers
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Parsers
    name: Parsers
    href: Remora.Discord.Commands.Parsers.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Parsers
    name: Parsers
    href: Remora.Discord.Commands.Parsers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Commands.Parsers.AbstractTypeParser
  commentId: T:Remora.Commands.Parsers.AbstractTypeParser
  parent: Remora.Commands.Parsers
  isExternal: true
  name: AbstractTypeParser
  nameWithType: AbstractTypeParser
  fullName: Remora.Commands.Parsers.AbstractTypeParser
- uid: Remora.Commands.Parsers.ITypeParser
  commentId: T:Remora.Commands.Parsers.ITypeParser
  parent: Remora.Commands.Parsers
  isExternal: true
  name: ITypeParser
  nameWithType: ITypeParser
  fullName: Remora.Commands.Parsers.ITypeParser
- uid: Remora.Commands.Parsers.AbstractTypeParser.TryParseAsync(System.Collections.Generic.IReadOnlyList{System.String},System.Type,System.Threading.CancellationToken)
  commentId: M:Remora.Commands.Parsers.AbstractTypeParser.TryParseAsync(System.Collections.Generic.IReadOnlyList{System.String},System.Type,System.Threading.CancellationToken)
  parent: Remora.Commands.Parsers.AbstractTypeParser
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: TryParseAsync(IReadOnlyList<string>, Type, CancellationToken)
  nameWithType: AbstractTypeParser.TryParseAsync(IReadOnlyList<string>, Type, CancellationToken)
  fullName: Remora.Commands.Parsers.AbstractTypeParser.TryParseAsync(System.Collections.Generic.IReadOnlyList<string>, System.Type, System.Threading.CancellationToken)
  nameWithType.vb: AbstractTypeParser.TryParseAsync(IReadOnlyList(Of String), Type, CancellationToken)
  fullName.vb: Remora.Commands.Parsers.AbstractTypeParser.TryParseAsync(System.Collections.Generic.IReadOnlyList(Of String), System.Type, System.Threading.CancellationToken)
  name.vb: TryParseAsync(IReadOnlyList(Of String), Type, CancellationToken)
  spec.csharp:
  - uid: Remora.Commands.Parsers.AbstractTypeParser.TryParseAsync(System.Collections.Generic.IReadOnlyList{System.String},System.Type,System.Threading.CancellationToken)
    name: TryParseAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Commands.Parsers.AbstractTypeParser.TryParseAsync(System.Collections.Generic.IReadOnlyList{System.String},System.Type,System.Threading.CancellationToken)
    name: TryParseAsync
    isExternal: true
  - name: (
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Commands.Parsers
  commentId: N:Remora.Commands.Parsers
  isExternal: true
  name: Remora.Commands.Parsers
  nameWithType: Remora.Commands.Parsers
  fullName: Remora.Commands.Parsers
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Commands
    name: Commands
    isExternal: true
  - name: .
  - uid: Remora.Commands.Parsers
    name: Parsers
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Commands
    name: Commands
    isExternal: true
  - name: .
  - uid: Remora.Commands.Parsers
    name: Parsers
    isExternal: true
- uid: Remora.Discord.Commands.Parsers.OneOfParser
  commentId: T:Remora.Discord.Commands.Parsers.OneOfParser
  href: Remora.Discord.Commands.Parsers.OneOfParser.html
  name: OneOfParser
  nameWithType: OneOfParser
  fullName: Remora.Discord.Commands.Parsers.OneOfParser
- uid: Remora.Discord.Commands.Parsers.OneOfParser.#ctor*
  commentId: Overload:Remora.Discord.Commands.Parsers.OneOfParser.#ctor
  href: Remora.Discord.Commands.Parsers.OneOfParser.html#Remora_Discord_Commands_Parsers_OneOfParser__ctor_Remora_Commands_Services_TypeParserService_System_IServiceProvider_
  name: OneOfParser
  nameWithType: OneOfParser.OneOfParser
  fullName: Remora.Discord.Commands.Parsers.OneOfParser.OneOfParser
  nameWithType.vb: OneOfParser.New
  fullName.vb: Remora.Discord.Commands.Parsers.OneOfParser.New
  name.vb: New
- uid: Remora.Commands.Services.TypeParserService
  commentId: T:Remora.Commands.Services.TypeParserService
  parent: Remora.Commands.Services
  isExternal: true
  name: TypeParserService
  nameWithType: TypeParserService
  fullName: Remora.Commands.Services.TypeParserService
- uid: System.IServiceProvider
  commentId: T:System.IServiceProvider
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iserviceprovider
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: Remora.Commands.Services
  commentId: N:Remora.Commands.Services
  isExternal: true
  name: Remora.Commands.Services
  nameWithType: Remora.Commands.Services
  fullName: Remora.Commands.Services
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Commands
    name: Commands
    isExternal: true
  - name: .
  - uid: Remora.Commands.Services
    name: Services
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Commands
    name: Commands
    isExternal: true
  - name: .
  - uid: Remora.Commands.Services
    name: Services
    isExternal: true
- uid: Remora.Commands.Parsers.AbstractTypeParser.CanParse(System.Type)
  commentId: M:Remora.Commands.Parsers.AbstractTypeParser.CanParse(System.Type)
  parent: Remora.Commands.Parsers.AbstractTypeParser
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: CanParse(Type)
  nameWithType: AbstractTypeParser.CanParse(Type)
  fullName: Remora.Commands.Parsers.AbstractTypeParser.CanParse(System.Type)
  spec.csharp:
  - uid: Remora.Commands.Parsers.AbstractTypeParser.CanParse(System.Type)
    name: CanParse
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Remora.Commands.Parsers.AbstractTypeParser.CanParse(System.Type)
    name: CanParse
    isExternal: true
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Remora.Discord.Commands.Parsers.OneOfParser.CanParse*
  commentId: Overload:Remora.Discord.Commands.Parsers.OneOfParser.CanParse
  href: Remora.Discord.Commands.Parsers.OneOfParser.html#Remora_Discord_Commands_Parsers_OneOfParser_CanParse_System_Type_
  name: CanParse
  nameWithType: OneOfParser.CanParse
  fullName: Remora.Discord.Commands.Parsers.OneOfParser.CanParse
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Remora.Commands.Parsers.AbstractTypeParser.TryParseAsync(System.String,System.Type,System.Threading.CancellationToken)
  commentId: M:Remora.Commands.Parsers.AbstractTypeParser.TryParseAsync(System.String,System.Type,System.Threading.CancellationToken)
  parent: Remora.Commands.Parsers.AbstractTypeParser
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: TryParseAsync(string, Type, CancellationToken)
  nameWithType: AbstractTypeParser.TryParseAsync(string, Type, CancellationToken)
  fullName: Remora.Commands.Parsers.AbstractTypeParser.TryParseAsync(string, System.Type, System.Threading.CancellationToken)
  nameWithType.vb: AbstractTypeParser.TryParseAsync(String, Type, CancellationToken)
  fullName.vb: Remora.Commands.Parsers.AbstractTypeParser.TryParseAsync(String, System.Type, System.Threading.CancellationToken)
  name.vb: TryParseAsync(String, Type, CancellationToken)
  spec.csharp:
  - uid: Remora.Commands.Parsers.AbstractTypeParser.TryParseAsync(System.String,System.Type,System.Threading.CancellationToken)
    name: TryParseAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Commands.Parsers.AbstractTypeParser.TryParseAsync(System.String,System.Type,System.Threading.CancellationToken)
    name: TryParseAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Commands.Parsers.OneOfParser.TryParseAsync*
  commentId: Overload:Remora.Discord.Commands.Parsers.OneOfParser.TryParseAsync
  href: Remora.Discord.Commands.Parsers.OneOfParser.html#Remora_Discord_Commands_Parsers_OneOfParser_TryParseAsync_System_String_System_Type_System_Threading_CancellationToken_
  name: TryParseAsync
  nameWithType: OneOfParser.TryParseAsync
  fullName: Remora.Discord.Commands.Parsers.OneOfParser.TryParseAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.ValueTask{Remora.Results.Result{System.Object}}
  commentId: T:System.Threading.Tasks.ValueTask{Remora.Results.Result{System.Object}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<Result<object>>
  nameWithType: ValueTask<Result<object>>
  fullName: System.Threading.Tasks.ValueTask<Remora.Results.Result<object>>
  nameWithType.vb: ValueTask(Of Result(Of Object))
  fullName.vb: System.Threading.Tasks.ValueTask(Of Remora.Results.Result(Of Object))
  name.vb: ValueTask(Of Result(Of Object))
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
