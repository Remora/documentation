### YamlMime:ManagedReference
items:
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  commentId: T:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  id: IDiscordRestApplicationAPI
  parent: Remora.Discord.API.Abstractions.Rest
  children:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.BulkOverwriteGlobalApplicationCommandsAsync(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData},System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.BulkOverwriteGuildApplicationCommandsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData},System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.CreateGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationCommandType},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.CreateGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationCommandType},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.DeleteGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.DeleteGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditApplicationCommandPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandPermissions},System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditCurrentApplicationAsync(Remora.Rest.Core.Optional{System.Uri},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Uri},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IApplicationInstallParameters},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationFlags},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.Uri},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType,Remora.Discord.API.Abstractions.Objects.IApplicationIntegrationTypeConfig}},System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetApplicationCommandPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetApplicationRoleConnectionMetadataRecordsAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetCurrentApplicationAsync(System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGlobalApplicationCommandsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.UpdateApplicationRoleConnectionMetadataRecordsAsync(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IDiscordRestApplicationAPI
  nameWithType: IDiscordRestApplicationAPI
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  type: Interface
  source:
    id: IDiscordRestApplicationAPI
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 37
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Represents the Discord Application API.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public interface IDiscordRestApplicationAPI
    content.vb: >-
      <PublicAPI>

      Public Interface IDiscordRestApplicationAPI
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGlobalApplicationCommandsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGlobalApplicationCommandsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: GetGlobalApplicationCommandsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: GetGlobalApplicationCommandsAsync(Snowflake, Optional<bool>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.GetGlobalApplicationCommandsAsync(Snowflake, Optional<bool>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGlobalApplicationCommandsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetGlobalApplicationCommandsAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 50
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Gets the global commands for the application.
  example: []
  syntax:
    content: Task<Result<IReadOnlyList<IApplicationCommand>>> GetGlobalApplicationCommandsAsync(Snowflake applicationID, Optional<bool> withLocalizations = default, Optional<string> locale = default, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: withLocalizations
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Indicates whether the full localization dictionaries should be returned, instead of just the requested locale.
    - id: locale
      type: Remora.Rest.Core.Optional{System.String}
      description: The locale to request the response in.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommand}}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Function GetGlobalApplicationCommandsAsync(applicationID As Snowflake, withLocalizations As [Optional](Of Boolean) = Nothing, locale As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of IApplicationCommand)))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGlobalApplicationCommandsAsync*
  nameWithType.vb: IDiscordRestApplicationAPI.GetGlobalApplicationCommandsAsync(Snowflake, Optional(Of Boolean), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGlobalApplicationCommandsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: GetGlobalApplicationCommandsAsync(Snowflake, Optional(Of Boolean), Optional(Of String), CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.CreateGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationCommandType},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.CreateGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationCommandType},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
  id: CreateGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationCommandType},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: CreateGlobalApplicationCommandAsync(Snowflake, string, Optional<string>, Optional<IReadOnlyList<IApplicationCommandOption>>, Optional<ApplicationCommandType>, Optional<IReadOnlyDictionary<string, string>?>, Optional<IReadOnlyDictionary<string, string>?>, Optional<IDiscordPermissionSet?>, Optional<bool?>, Optional<bool>, Optional<IReadOnlyList<ApplicationIntegrationType>>, Optional<IReadOnlyList<InteractionContextType>>, CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.CreateGlobalApplicationCommandAsync(Snowflake, string, Optional<string>, Optional<IReadOnlyList<IApplicationCommandOption>>, Optional<ApplicationCommandType>, Optional<IReadOnlyDictionary<string, string>?>, Optional<IReadOnlyDictionary<string, string>?>, Optional<IDiscordPermissionSet?>, Optional<bool?>, Optional<bool>, Optional<IReadOnlyList<ApplicationIntegrationType>>, Optional<IReadOnlyList<InteractionContextType>>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.CreateGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ApplicationCommandType>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyDictionary<string, string>?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyDictionary<string, string>?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet?>, Remora.Rest.Core.Optional<bool?>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.InteractionContextType>>, System.Threading.CancellationToken)
  type: Method
  source:
    id: CreateGlobalApplicationCommandAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 78
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Creates a new global command.
  remarks: Creating a new command with the same name as an existing command will overwrite the old command.
  example: []
  syntax:
    content: Task<Result<IApplicationCommand>> CreateGlobalApplicationCommandAsync(Snowflake applicationID, string name, Optional<string> description = default, Optional<IReadOnlyList<IApplicationCommandOption>> options = default, Optional<ApplicationCommandType> type = default, Optional<IReadOnlyDictionary<string, string>?> nameLocalizations = default, Optional<IReadOnlyDictionary<string, string>?> descriptionLocalizations = default, Optional<IDiscordPermissionSet?> defaultMemberPermissions = default, Optional<bool?> dmPermission = default, Optional<bool> isNsfw = default, Optional<IReadOnlyList<ApplicationIntegrationType>> integrationTypes = default, Optional<IReadOnlyList<InteractionContextType>> allowedContextTypes = default, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: name
      type: System.String
      description: The name of the command. 3-32 characters.
    - id: description
      type: Remora.Rest.Core.Optional{System.String}
      description: The description of the command. 1-100 characters.
    - id: options
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}}
      description: The parameters for the command.
    - id: type
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationCommandType}
      description: The type of the application command.
    - id: nameLocalizations
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}}
      description: The localized names of the command.
    - id: descriptionLocalizations
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}}
      description: The localized descriptions of the command.
    - id: defaultMemberPermissions
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}
      description: The permissions required to execute the command.
    - id: dmPermission
      type: Remora.Rest.Core.Optional{System.Nullable{System.Boolean}}
      description: Whether this command is executable in DMs.
    - id: isNsfw
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether the command is age-restricted.
    - id: integrationTypes
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}}
      description: The installation contexts the command can be installed to.
    - id: allowedContextTypes
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}}
      description: The contexts in which the command is allowed to be run in.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IApplicationCommand}}
      description: A creation result which may or may not have succeeded.
    content.vb: Function CreateGlobalApplicationCommandAsync(applicationID As Snowflake, name As String, description As [Optional](Of String) = Nothing, options As [Optional](Of IReadOnlyList(Of IApplicationCommandOption)) = Nothing, type As [Optional](Of ApplicationCommandType) = Nothing, nameLocalizations As [Optional](Of IReadOnlyDictionary(Of String, String)) = Nothing, descriptionLocalizations As [Optional](Of IReadOnlyDictionary(Of String, String)) = Nothing, defaultMemberPermissions As [Optional](Of IDiscordPermissionSet) = Nothing, dmPermission As [Optional](Of Boolean?) = Nothing, isNsfw As [Optional](Of Boolean) = Nothing, integrationTypes As [Optional](Of IReadOnlyList(Of ApplicationIntegrationType)) = Nothing, allowedContextTypes As [Optional](Of IReadOnlyList(Of InteractionContextType)) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IApplicationCommand))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.CreateGlobalApplicationCommandAsync*
  nameWithType.vb: IDiscordRestApplicationAPI.CreateGlobalApplicationCommandAsync(Snowflake, String, Optional(Of String), Optional(Of IReadOnlyList(Of IApplicationCommandOption)), Optional(Of ApplicationCommandType), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IDiscordPermissionSet), Optional(Of Boolean?), Optional(Of Boolean), Optional(Of IReadOnlyList(Of ApplicationIntegrationType)), Optional(Of IReadOnlyList(Of InteractionContextType)), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.CreateGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ApplicationCommandType), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyDictionary(Of String, String)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyDictionary(Of String, String)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet), Remora.Rest.Core.Optional(Of Boolean?), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.InteractionContextType)), System.Threading.CancellationToken)
  name.vb: CreateGlobalApplicationCommandAsync(Snowflake, String, Optional(Of String), Optional(Of IReadOnlyList(Of IApplicationCommandOption)), Optional(Of ApplicationCommandType), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IDiscordPermissionSet), Optional(Of Boolean?), Optional(Of Boolean), Optional(Of IReadOnlyList(Of ApplicationIntegrationType)), Optional(Of IReadOnlyList(Of InteractionContextType)), CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.BulkOverwriteGlobalApplicationCommandsAsync(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.BulkOverwriteGlobalApplicationCommandsAsync(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData},System.Threading.CancellationToken)
  id: BulkOverwriteGlobalApplicationCommandsAsync(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: BulkOverwriteGlobalApplicationCommandsAsync(Snowflake, IReadOnlyList<IBulkApplicationCommandData>, CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.BulkOverwriteGlobalApplicationCommandsAsync(Snowflake, IReadOnlyList<IBulkApplicationCommandData>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.BulkOverwriteGlobalApplicationCommandsAsync(Remora.Rest.Core.Snowflake, System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData>, System.Threading.CancellationToken)
  type: Method
  source:
    id: BulkOverwriteGlobalApplicationCommandsAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 102
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Overwrites all global commands with the given command set. Any commands not in the set will be deleted.
  example: []
  syntax:
    content: Task<Result<IReadOnlyList<IApplicationCommand>>> BulkOverwriteGlobalApplicationCommandsAsync(Snowflake applicationID, IReadOnlyList<IBulkApplicationCommandData> commands, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: commands
      type: System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData}
      description: The commands.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommand}}}
      description: A creation result which may or may not have succeeded.
    content.vb: Function BulkOverwriteGlobalApplicationCommandsAsync(applicationID As Snowflake, commands As IReadOnlyList(Of IBulkApplicationCommandData), ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of IApplicationCommand)))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.BulkOverwriteGlobalApplicationCommandsAsync*
  nameWithType.vb: IDiscordRestApplicationAPI.BulkOverwriteGlobalApplicationCommandsAsync(Snowflake, IReadOnlyList(Of IBulkApplicationCommandData), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.BulkOverwriteGlobalApplicationCommandsAsync(Remora.Rest.Core.Snowflake, System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData), System.Threading.CancellationToken)
  name.vb: BulkOverwriteGlobalApplicationCommandsAsync(Snowflake, IReadOnlyList(Of IBulkApplicationCommandData), CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: GetGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: GetGlobalApplicationCommandAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.GetGlobalApplicationCommandAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetGlobalApplicationCommandAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 116
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Gets a global command.
  example: []
  syntax:
    content: Task<Result<IApplicationCommand>> GetGlobalApplicationCommandAsync(Snowflake applicationID, Snowflake commandID, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: commandID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the command.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IApplicationCommand}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Function GetGlobalApplicationCommandAsync(applicationID As Snowflake, commandID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IApplicationCommand))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGlobalApplicationCommandAsync*
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
  id: EditGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Nullable{System.Boolean}},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: EditGlobalApplicationCommandAsync(Snowflake, Snowflake, Optional<string>, Optional<string>, Optional<IReadOnlyList<IApplicationCommandOption>?>, Optional<IReadOnlyDictionary<string, string>?>, Optional<IReadOnlyDictionary<string, string>?>, Optional<IDiscordPermissionSet?>, Optional<bool?>, Optional<bool>, Optional<IReadOnlyList<ApplicationIntegrationType>>, Optional<IReadOnlyList<InteractionContextType>>, CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.EditGlobalApplicationCommandAsync(Snowflake, Snowflake, Optional<string>, Optional<string>, Optional<IReadOnlyList<IApplicationCommandOption>?>, Optional<IReadOnlyDictionary<string, string>?>, Optional<IReadOnlyDictionary<string, string>?>, Optional<IDiscordPermissionSet?>, Optional<bool?>, Optional<bool>, Optional<IReadOnlyList<ApplicationIntegrationType>>, Optional<IReadOnlyList<InteractionContextType>>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption>?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyDictionary<string, string>?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyDictionary<string, string>?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet?>, Remora.Rest.Core.Optional<bool?>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.InteractionContextType>>, System.Threading.CancellationToken)
  type: Method
  source:
    id: EditGlobalApplicationCommandAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 140
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Edits a new global command.
  example: []
  syntax:
    content: Task<Result<IApplicationCommand>> EditGlobalApplicationCommandAsync(Snowflake applicationID, Snowflake commandID, Optional<string> name = default, Optional<string> description = default, Optional<IReadOnlyList<IApplicationCommandOption>?> options = default, Optional<IReadOnlyDictionary<string, string>?> nameLocalizations = default, Optional<IReadOnlyDictionary<string, string>?> descriptionLocalizations = default, Optional<IDiscordPermissionSet?> defaultMemberPermissions = default, Optional<bool?> dmPermission = default, Optional<bool> isNsfw = default, Optional<IReadOnlyList<ApplicationIntegrationType>> integrationTypes = default, Optional<IReadOnlyList<InteractionContextType>> allowedContextTypes = default, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: commandID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the command.
    - id: name
      type: Remora.Rest.Core.Optional{System.String}
      description: The name of the command. 3-32 characters.
    - id: description
      type: Remora.Rest.Core.Optional{System.String}
      description: The description of the command. 1-100 characters.
    - id: options
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}}
      description: The parameters for the command.
    - id: nameLocalizations
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}}
      description: The localized names of the command.
    - id: descriptionLocalizations
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}}
      description: The localized descriptions of the command.
    - id: defaultMemberPermissions
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}
      description: The permissions required to execute the command.
    - id: dmPermission
      type: Remora.Rest.Core.Optional{System.Nullable{System.Boolean}}
      description: Whether this command is executable in DMs.
    - id: isNsfw
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether this command is age-restricted.
    - id: integrationTypes
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}}
      description: The installation contexts the command can be installed to.
    - id: allowedContextTypes
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}}
      description: The contexts in which the command is allowed to be run in.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IApplicationCommand}}
      description: A creation result which may or may not have succeeded.
    content.vb: Function EditGlobalApplicationCommandAsync(applicationID As Snowflake, commandID As Snowflake, name As [Optional](Of String) = Nothing, description As [Optional](Of String) = Nothing, options As [Optional](Of IReadOnlyList(Of IApplicationCommandOption)) = Nothing, nameLocalizations As [Optional](Of IReadOnlyDictionary(Of String, String)) = Nothing, descriptionLocalizations As [Optional](Of IReadOnlyDictionary(Of String, String)) = Nothing, defaultMemberPermissions As [Optional](Of IDiscordPermissionSet) = Nothing, dmPermission As [Optional](Of Boolean?) = Nothing, isNsfw As [Optional](Of Boolean) = Nothing, integrationTypes As [Optional](Of IReadOnlyList(Of ApplicationIntegrationType)) = Nothing, allowedContextTypes As [Optional](Of IReadOnlyList(Of InteractionContextType)) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IApplicationCommand))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditGlobalApplicationCommandAsync*
  nameWithType.vb: IDiscordRestApplicationAPI.EditGlobalApplicationCommandAsync(Snowflake, Snowflake, Optional(Of String), Optional(Of String), Optional(Of IReadOnlyList(Of IApplicationCommandOption)), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IDiscordPermissionSet), Optional(Of Boolean?), Optional(Of Boolean), Optional(Of IReadOnlyList(Of ApplicationIntegrationType)), Optional(Of IReadOnlyList(Of InteractionContextType)), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyDictionary(Of String, String)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyDictionary(Of String, String)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet), Remora.Rest.Core.Optional(Of Boolean?), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.InteractionContextType)), System.Threading.CancellationToken)
  name.vb: EditGlobalApplicationCommandAsync(Snowflake, Snowflake, Optional(Of String), Optional(Of String), Optional(Of IReadOnlyList(Of IApplicationCommandOption)), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IDiscordPermissionSet), Optional(Of Boolean?), Optional(Of Boolean), Optional(Of IReadOnlyList(Of ApplicationIntegrationType)), Optional(Of IReadOnlyList(Of InteractionContextType)), CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.DeleteGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.DeleteGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: DeleteGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: DeleteGlobalApplicationCommandAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.DeleteGlobalApplicationCommandAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.DeleteGlobalApplicationCommandAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteGlobalApplicationCommandAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 164
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Deletes the given global command.
  example: []
  syntax:
    content: Task<Result> DeleteGlobalApplicationCommandAsync(Snowflake applicationID, Snowflake commandID, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: commandID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the command.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A deletion result which may or may not have succeeded.
    content.vb: Function DeleteGlobalApplicationCommandAsync(applicationID As Snowflake, commandID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.DeleteGlobalApplicationCommandAsync*
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: GetGuildApplicationCommandsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: GetGuildApplicationCommandsAsync(Snowflake, Snowflake, Optional<bool>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.GetGuildApplicationCommandsAsync(Snowflake, Snowflake, Optional<bool>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetGuildApplicationCommandsAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 182
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Gets the guild commands for the application.
  example: []
  syntax:
    content: Task<Result<IReadOnlyList<IApplicationCommand>>> GetGuildApplicationCommandsAsync(Snowflake applicationID, Snowflake guildID, Optional<bool> withLocalizations = default, Optional<string> locale = default, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: withLocalizations
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Indicates whether the full localization dictionaries should be returned, instead of just the requested locale.
    - id: locale
      type: Remora.Rest.Core.Optional{System.String}
      description: The locale to request the response in.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommand}}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Function GetGuildApplicationCommandsAsync(applicationID As Snowflake, guildID As Snowflake, withLocalizations As [Optional](Of Boolean) = Nothing, locale As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of IApplicationCommand)))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandsAsync*
  nameWithType.vb: IDiscordRestApplicationAPI.GetGuildApplicationCommandsAsync(Snowflake, Snowflake, Optional(Of Boolean), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: GetGuildApplicationCommandsAsync(Snowflake, Snowflake, Optional(Of Boolean), Optional(Of String), CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.CreateGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationCommandType},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.CreateGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationCommandType},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
  id: CreateGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationCommandType},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: CreateGuildApplicationCommandAsync(Snowflake, Snowflake, string, Optional<string>, Optional<IReadOnlyList<IApplicationCommandOption>>, Optional<ApplicationCommandType>, Optional<IReadOnlyDictionary<string, string>?>, Optional<IReadOnlyDictionary<string, string>?>, Optional<IDiscordPermissionSet?>, Optional<bool>, Optional<IReadOnlyList<ApplicationIntegrationType>>, Optional<IReadOnlyList<InteractionContextType>>, CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.CreateGuildApplicationCommandAsync(Snowflake, Snowflake, string, Optional<string>, Optional<IReadOnlyList<IApplicationCommandOption>>, Optional<ApplicationCommandType>, Optional<IReadOnlyDictionary<string, string>?>, Optional<IReadOnlyDictionary<string, string>?>, Optional<IDiscordPermissionSet?>, Optional<bool>, Optional<IReadOnlyList<ApplicationIntegrationType>>, Optional<IReadOnlyList<InteractionContextType>>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.CreateGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ApplicationCommandType>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyDictionary<string, string>?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyDictionary<string, string>?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet?>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.InteractionContextType>>, System.Threading.CancellationToken)
  type: Method
  source:
    id: CreateGuildApplicationCommandAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 211
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Creates a new guild command.
  remarks: Creating a new command with the same name as an existing command will overwrite the old command.
  example: []
  syntax:
    content: Task<Result<IApplicationCommand>> CreateGuildApplicationCommandAsync(Snowflake applicationID, Snowflake guildID, string name, Optional<string> description = default, Optional<IReadOnlyList<IApplicationCommandOption>> options = default, Optional<ApplicationCommandType> type = default, Optional<IReadOnlyDictionary<string, string>?> nameLocalizations = default, Optional<IReadOnlyDictionary<string, string>?> descriptionLocalizations = default, Optional<IDiscordPermissionSet?> defaultMemberPermissions = default, Optional<bool> isNsfw = default, Optional<IReadOnlyList<ApplicationIntegrationType>> integrationTypes = default, Optional<IReadOnlyList<InteractionContextType>> allowedContextTypes = default, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: name
      type: System.String
      description: The name of the command. 3-32 characters.
    - id: description
      type: Remora.Rest.Core.Optional{System.String}
      description: The description of the command. 1-100 characters.
    - id: options
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}}
      description: The parameters for the command.
    - id: type
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationCommandType}
      description: The type of the application command.
    - id: nameLocalizations
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}}
      description: The localized names of the command.
    - id: descriptionLocalizations
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}}
      description: The localized descriptions of the command.
    - id: defaultMemberPermissions
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}
      description: The permissions required to execute the command.
    - id: isNsfw
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether the command is age-restricted.
    - id: integrationTypes
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}}
      description: The installation contexts the command can be installed to.
    - id: allowedContextTypes
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}}
      description: The contexts in which the command is allowed to be run in.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IApplicationCommand}}
      description: A creation result which may or may not have succeeded.
    content.vb: Function CreateGuildApplicationCommandAsync(applicationID As Snowflake, guildID As Snowflake, name As String, description As [Optional](Of String) = Nothing, options As [Optional](Of IReadOnlyList(Of IApplicationCommandOption)) = Nothing, type As [Optional](Of ApplicationCommandType) = Nothing, nameLocalizations As [Optional](Of IReadOnlyDictionary(Of String, String)) = Nothing, descriptionLocalizations As [Optional](Of IReadOnlyDictionary(Of String, String)) = Nothing, defaultMemberPermissions As [Optional](Of IDiscordPermissionSet) = Nothing, isNsfw As [Optional](Of Boolean) = Nothing, integrationTypes As [Optional](Of IReadOnlyList(Of ApplicationIntegrationType)) = Nothing, allowedContextTypes As [Optional](Of IReadOnlyList(Of InteractionContextType)) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IApplicationCommand))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.CreateGuildApplicationCommandAsync*
  nameWithType.vb: IDiscordRestApplicationAPI.CreateGuildApplicationCommandAsync(Snowflake, Snowflake, String, Optional(Of String), Optional(Of IReadOnlyList(Of IApplicationCommandOption)), Optional(Of ApplicationCommandType), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IDiscordPermissionSet), Optional(Of Boolean), Optional(Of IReadOnlyList(Of ApplicationIntegrationType)), Optional(Of IReadOnlyList(Of InteractionContextType)), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.CreateGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ApplicationCommandType), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyDictionary(Of String, String)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyDictionary(Of String, String)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.InteractionContextType)), System.Threading.CancellationToken)
  name.vb: CreateGuildApplicationCommandAsync(Snowflake, Snowflake, String, Optional(Of String), Optional(Of IReadOnlyList(Of IApplicationCommandOption)), Optional(Of ApplicationCommandType), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IDiscordPermissionSet), Optional(Of Boolean), Optional(Of IReadOnlyList(Of ApplicationIntegrationType)), Optional(Of IReadOnlyList(Of InteractionContextType)), CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.BulkOverwriteGuildApplicationCommandsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.BulkOverwriteGuildApplicationCommandsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData},System.Threading.CancellationToken)
  id: BulkOverwriteGuildApplicationCommandsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: BulkOverwriteGuildApplicationCommandsAsync(Snowflake, Snowflake, IReadOnlyList<IBulkApplicationCommandData>, CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.BulkOverwriteGuildApplicationCommandsAsync(Snowflake, Snowflake, IReadOnlyList<IBulkApplicationCommandData>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.BulkOverwriteGuildApplicationCommandsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData>, System.Threading.CancellationToken)
  type: Method
  source:
    id: BulkOverwriteGuildApplicationCommandsAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 236
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Overwrites all guild commands with the given command set. Any commands not in the set will be deleted.
  example: []
  syntax:
    content: Task<Result<IReadOnlyList<IApplicationCommand>>> BulkOverwriteGuildApplicationCommandsAsync(Snowflake applicationID, Snowflake guildID, IReadOnlyList<IBulkApplicationCommandData> commands, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: commands
      type: System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData}
      description: The commands.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommand}}}
      description: A creation result which may or may not have succeeded.
    content.vb: Function BulkOverwriteGuildApplicationCommandsAsync(applicationID As Snowflake, guildID As Snowflake, commands As IReadOnlyList(Of IBulkApplicationCommandData), ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of IApplicationCommand)))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.BulkOverwriteGuildApplicationCommandsAsync*
  nameWithType.vb: IDiscordRestApplicationAPI.BulkOverwriteGuildApplicationCommandsAsync(Snowflake, Snowflake, IReadOnlyList(Of IBulkApplicationCommandData), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.BulkOverwriteGuildApplicationCommandsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData), System.Threading.CancellationToken)
  name.vb: BulkOverwriteGuildApplicationCommandsAsync(Snowflake, Snowflake, IReadOnlyList(Of IBulkApplicationCommandData), CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: GetGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: GetGuildApplicationCommandAsync(Snowflake, Snowflake, Snowflake, CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.GetGuildApplicationCommandAsync(Snowflake, Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetGuildApplicationCommandAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 252
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Gets a guild command.
  example: []
  syntax:
    content: Task<Result<IApplicationCommand>> GetGuildApplicationCommandAsync(Snowflake applicationID, Snowflake guildID, Snowflake commandID, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: commandID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the command.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IApplicationCommand}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Function GetGuildApplicationCommandAsync(applicationID As Snowflake, guildID As Snowflake, commandID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IApplicationCommand))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandAsync*
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
  id: EditGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: EditGuildApplicationCommandAsync(Snowflake, Snowflake, Snowflake, Optional<string>, Optional<string>, Optional<IReadOnlyList<IApplicationCommandOption>?>, Optional<IReadOnlyDictionary<string, string>?>, Optional<IReadOnlyDictionary<string, string>?>, Optional<IDiscordPermissionSet?>, Optional<bool>, Optional<IReadOnlyList<ApplicationIntegrationType>>, Optional<IReadOnlyList<InteractionContextType>>, CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.EditGuildApplicationCommandAsync(Snowflake, Snowflake, Snowflake, Optional<string>, Optional<string>, Optional<IReadOnlyList<IApplicationCommandOption>?>, Optional<IReadOnlyDictionary<string, string>?>, Optional<IReadOnlyDictionary<string, string>?>, Optional<IDiscordPermissionSet?>, Optional<bool>, Optional<IReadOnlyList<ApplicationIntegrationType>>, Optional<IReadOnlyList<InteractionContextType>>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption>?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyDictionary<string, string>?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyDictionary<string, string>?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet?>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.InteractionContextType>>, System.Threading.CancellationToken)
  type: Method
  source:
    id: EditGuildApplicationCommandAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 280
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Edits a new guild command.
  remarks: This method requires a bearer token authorized with the applications.commands.permissions.update scope.
  example: []
  syntax:
    content: Task<Result<IApplicationCommand>> EditGuildApplicationCommandAsync(Snowflake applicationID, Snowflake guildID, Snowflake commandID, Optional<string> name = default, Optional<string> description = default, Optional<IReadOnlyList<IApplicationCommandOption>?> options = default, Optional<IReadOnlyDictionary<string, string>?> nameLocalizations = default, Optional<IReadOnlyDictionary<string, string>?> descriptionLocalizations = default, Optional<IDiscordPermissionSet?> defaultMemberPermissions = default, Optional<bool> isNsfw = default, Optional<IReadOnlyList<ApplicationIntegrationType>> integrationTypes = default, Optional<IReadOnlyList<InteractionContextType>> allowedContextTypes = default, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: commandID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the command.
    - id: name
      type: Remora.Rest.Core.Optional{System.String}
      description: The name of the command. 3-32 characters.
    - id: description
      type: Remora.Rest.Core.Optional{System.String}
      description: The description of the command. 1-100 characters.
    - id: options
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}}
      description: The parameters for the command.
    - id: nameLocalizations
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}}
      description: The localized names of the command.
    - id: descriptionLocalizations
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}}
      description: The localized descriptions of the command.
    - id: defaultMemberPermissions
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}
      description: The permissions required to execute the command.
    - id: isNsfw
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether this command is age-restricted.
    - id: integrationTypes
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}}
      description: The installation contexts the command can be installed to.
    - id: allowedContextTypes
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}}
      description: The contexts in which the command is allowed to be run in.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IApplicationCommand}}
      description: A creation result which may or may not have succeeded.
    content.vb: Function EditGuildApplicationCommandAsync(applicationID As Snowflake, guildID As Snowflake, commandID As Snowflake, name As [Optional](Of String) = Nothing, description As [Optional](Of String) = Nothing, options As [Optional](Of IReadOnlyList(Of IApplicationCommandOption)) = Nothing, nameLocalizations As [Optional](Of IReadOnlyDictionary(Of String, String)) = Nothing, descriptionLocalizations As [Optional](Of IReadOnlyDictionary(Of String, String)) = Nothing, defaultMemberPermissions As [Optional](Of IDiscordPermissionSet) = Nothing, isNsfw As [Optional](Of Boolean) = Nothing, integrationTypes As [Optional](Of IReadOnlyList(Of ApplicationIntegrationType)) = Nothing, allowedContextTypes As [Optional](Of IReadOnlyList(Of InteractionContextType)) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IApplicationCommand))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditGuildApplicationCommandAsync*
  nameWithType.vb: IDiscordRestApplicationAPI.EditGuildApplicationCommandAsync(Snowflake, Snowflake, Snowflake, Optional(Of String), Optional(Of String), Optional(Of IReadOnlyList(Of IApplicationCommandOption)), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IDiscordPermissionSet), Optional(Of Boolean), Optional(Of IReadOnlyList(Of ApplicationIntegrationType)), Optional(Of IReadOnlyList(Of InteractionContextType)), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyDictionary(Of String, String)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyDictionary(Of String, String)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.InteractionContextType)), System.Threading.CancellationToken)
  name.vb: EditGuildApplicationCommandAsync(Snowflake, Snowflake, Snowflake, Optional(Of String), Optional(Of String), Optional(Of IReadOnlyList(Of IApplicationCommandOption)), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IReadOnlyDictionary(Of String, String)), Optional(Of IDiscordPermissionSet), Optional(Of Boolean), Optional(Of IReadOnlyList(Of ApplicationIntegrationType)), Optional(Of IReadOnlyList(Of InteractionContextType)), CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.DeleteGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.DeleteGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: DeleteGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: DeleteGuildApplicationCommandAsync(Snowflake, Snowflake, Snowflake, CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.DeleteGuildApplicationCommandAsync(Snowflake, Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.DeleteGuildApplicationCommandAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteGuildApplicationCommandAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 305
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Deletes the given guild command.
  example: []
  syntax:
    content: Task<Result> DeleteGuildApplicationCommandAsync(Snowflake applicationID, Snowflake guildID, Snowflake commandID, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: commandID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the command.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A deletion result which may or may not have succeeded.
    content.vb: Function DeleteGuildApplicationCommandAsync(applicationID As Snowflake, guildID As Snowflake, commandID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.DeleteGuildApplicationCommandAsync*
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: GetGuildApplicationCommandPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: GetGuildApplicationCommandPermissionsAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.GetGuildApplicationCommandPermissionsAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandPermissionsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetGuildApplicationCommandPermissionsAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 320
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Gets the permissions for all of the application's commands in a guild.
  example: []
  syntax:
    content: Task<Result<IReadOnlyList<IGuildApplicationCommandPermissions>>> GetGuildApplicationCommandPermissionsAsync(Snowflake applicationID, Snowflake guildID, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the application.
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions}}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Function GetGuildApplicationCommandPermissionsAsync(applicationID As Snowflake, guildID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of IGuildApplicationCommandPermissions)))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandPermissionsAsync*
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetApplicationCommandPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetApplicationCommandPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: GetApplicationCommandPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: GetApplicationCommandPermissionsAsync(Snowflake, Snowflake, Snowflake, CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.GetApplicationCommandPermissionsAsync(Snowflake, Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetApplicationCommandPermissionsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetApplicationCommandPermissionsAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 335
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Gets the permissions for a specific command in a guild.
  example: []
  syntax:
    content: Task<Result<IGuildApplicationCommandPermissions>> GetApplicationCommandPermissionsAsync(Snowflake applicationID, Snowflake guildID, Snowflake commandID, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the application.
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: commandID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the command.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Function GetApplicationCommandPermissionsAsync(applicationID As Snowflake, guildID As Snowflake, commandID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IGuildApplicationCommandPermissions))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetApplicationCommandPermissionsAsync*
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditApplicationCommandPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandPermissions},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditApplicationCommandPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandPermissions},System.Threading.CancellationToken)
  id: EditApplicationCommandPermissionsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandPermissions},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: EditApplicationCommandPermissionsAsync(Snowflake, Snowflake, Snowflake, IReadOnlyList<IApplicationCommandPermissions>, CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.EditApplicationCommandPermissionsAsync(Snowflake, Snowflake, Snowflake, IReadOnlyList<IApplicationCommandPermissions>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditApplicationCommandPermissionsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IApplicationCommandPermissions>, System.Threading.CancellationToken)
  type: Method
  source:
    id: EditApplicationCommandPermissionsAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 355
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Edits command permissions for a specific command in a guild.
  remarks: This method requires a bearer token authorized with the applications.commands.permissions.update scope.
  example: []
  syntax:
    content: Task<Result<IGuildApplicationCommandPermissions>> EditApplicationCommandPermissionsAsync(Snowflake applicationID, Snowflake guildID, Snowflake commandID, IReadOnlyList<IApplicationCommandPermissions> permissions, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the application.
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: commandID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the command.
    - id: permissions
      type: System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandPermissions}
      description: The permissions to overwrite the existing ones with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions}}
      description: An edit result which may or may not have succeeded.
    content.vb: Function EditApplicationCommandPermissionsAsync(applicationID As Snowflake, guildID As Snowflake, commandID As Snowflake, permissions As IReadOnlyList(Of IApplicationCommandPermissions), ct As CancellationToken = Nothing) As Task(Of Result(Of IGuildApplicationCommandPermissions))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditApplicationCommandPermissionsAsync*
  nameWithType.vb: IDiscordRestApplicationAPI.EditApplicationCommandPermissionsAsync(Snowflake, Snowflake, Snowflake, IReadOnlyList(Of IApplicationCommandPermissions), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditApplicationCommandPermissionsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IApplicationCommandPermissions), System.Threading.CancellationToken)
  name.vb: EditApplicationCommandPermissionsAsync(Snowflake, Snowflake, Snowflake, IReadOnlyList(Of IApplicationCommandPermissions), CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetApplicationRoleConnectionMetadataRecordsAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetApplicationRoleConnectionMetadataRecordsAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: GetApplicationRoleConnectionMetadataRecordsAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: GetApplicationRoleConnectionMetadataRecordsAsync(Snowflake, CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.GetApplicationRoleConnectionMetadataRecordsAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetApplicationRoleConnectionMetadataRecordsAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetApplicationRoleConnectionMetadataRecordsAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 370
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Gets the application role connection metadata records for the given application..
  example: []
  syntax:
    content: Task<Result<IReadOnlyList<IApplicationRoleConnectionMetadata>>> GetApplicationRoleConnectionMetadataRecordsAsync(Snowflake applicationID, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata}}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Function GetApplicationRoleConnectionMetadataRecordsAsync(applicationID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of IApplicationRoleConnectionMetadata)))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetApplicationRoleConnectionMetadataRecordsAsync*
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.UpdateApplicationRoleConnectionMetadataRecordsAsync(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.UpdateApplicationRoleConnectionMetadataRecordsAsync(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata},System.Threading.CancellationToken)
  id: UpdateApplicationRoleConnectionMetadataRecordsAsync(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: UpdateApplicationRoleConnectionMetadataRecordsAsync(Snowflake, IReadOnlyList<IApplicationRoleConnectionMetadata>, CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.UpdateApplicationRoleConnectionMetadataRecordsAsync(Snowflake, IReadOnlyList<IApplicationRoleConnectionMetadata>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.UpdateApplicationRoleConnectionMetadataRecordsAsync(Remora.Rest.Core.Snowflake, System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata>, System.Threading.CancellationToken)
  type: Method
  source:
    id: UpdateApplicationRoleConnectionMetadataRecordsAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 386
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Updates the application role connection metadata records for the given application..
  remarks: An application can have a maximum of 5 metadata records.
  example: []
  syntax:
    content: Task<Result<IReadOnlyList<IApplicationRoleConnectionMetadata>>> UpdateApplicationRoleConnectionMetadataRecordsAsync(Snowflake applicationID, IReadOnlyList<IApplicationRoleConnectionMetadata> records, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: records
      type: System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata}
      description: The metadata records to overwrite the existing ones.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata}}}
      description: An update result which may or may not have succeeded.
    content.vb: Function UpdateApplicationRoleConnectionMetadataRecordsAsync(applicationID As Snowflake, records As IReadOnlyList(Of IApplicationRoleConnectionMetadata), ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of IApplicationRoleConnectionMetadata)))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.UpdateApplicationRoleConnectionMetadataRecordsAsync*
  nameWithType.vb: IDiscordRestApplicationAPI.UpdateApplicationRoleConnectionMetadataRecordsAsync(Snowflake, IReadOnlyList(Of IApplicationRoleConnectionMetadata), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.UpdateApplicationRoleConnectionMetadataRecordsAsync(Remora.Rest.Core.Snowflake, System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata), System.Threading.CancellationToken)
  name.vb: UpdateApplicationRoleConnectionMetadataRecordsAsync(Snowflake, IReadOnlyList(Of IApplicationRoleConnectionMetadata), CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetCurrentApplicationAsync(System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetCurrentApplicationAsync(System.Threading.CancellationToken)
  id: GetCurrentApplicationAsync(System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: GetCurrentApplicationAsync(CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.GetCurrentApplicationAsync(CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetCurrentApplicationAsync(System.Threading.CancellationToken)
  type: Method
  source:
    id: GetCurrentApplicationAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 398
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Gets the application object associated with the requesting user.
  example: []
  syntax:
    content: Task<Result<IApplication>> GetCurrentApplicationAsync(CancellationToken ct = default)
    parameters:
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IApplication}}
      description: The application object.
    content.vb: Function GetCurrentApplicationAsync(ct As CancellationToken = Nothing) As Task(Of Result(Of IApplication))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetCurrentApplicationAsync*
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditCurrentApplicationAsync(Remora.Rest.Core.Optional{System.Uri},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Uri},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IApplicationInstallParameters},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationFlags},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.Uri},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType,Remora.Discord.API.Abstractions.Objects.IApplicationIntegrationTypeConfig}},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditCurrentApplicationAsync(Remora.Rest.Core.Optional{System.Uri},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Uri},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IApplicationInstallParameters},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationFlags},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.Uri},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType,Remora.Discord.API.Abstractions.Objects.IApplicationIntegrationTypeConfig}},System.Threading.CancellationToken)
  id: EditCurrentApplicationAsync(Remora.Rest.Core.Optional{System.Uri},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Uri},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IApplicationInstallParameters},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationFlags},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.IO.Stream},Remora.Rest.Core.Optional{System.Uri},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{System.String}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType,Remora.Discord.API.Abstractions.Objects.IApplicationIntegrationTypeConfig}},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI
  langs:
  - csharp
  - vb
  name: EditCurrentApplicationAsync(Optional<Uri>, Optional<string>, Optional<Uri>, Optional<IApplicationInstallParameters>, Optional<ApplicationFlags>, Optional<Stream>, Optional<Stream>, Optional<Uri>, Optional<IReadOnlyList<string>>, Optional<IReadOnlyDictionary<ApplicationIntegrationType, IApplicationIntegrationTypeConfig>>, CancellationToken)
  nameWithType: IDiscordRestApplicationAPI.EditCurrentApplicationAsync(Optional<Uri>, Optional<string>, Optional<Uri>, Optional<IApplicationInstallParameters>, Optional<ApplicationFlags>, Optional<Stream>, Optional<Stream>, Optional<Uri>, Optional<IReadOnlyList<string>>, Optional<IReadOnlyDictionary<ApplicationIntegrationType, IApplicationIntegrationTypeConfig>>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditCurrentApplicationAsync(Remora.Rest.Core.Optional<System.Uri>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.Uri>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IApplicationInstallParameters>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ApplicationFlags>, Remora.Rest.Core.Optional<System.IO.Stream>, Remora.Rest.Core.Optional<System.IO.Stream>, Remora.Rest.Core.Optional<System.Uri>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<string>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyDictionary<Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType, Remora.Discord.API.Abstractions.Objects.IApplicationIntegrationTypeConfig>>, System.Threading.CancellationToken)
  type: Method
  source:
    id: EditCurrentApplicationAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestApplicationAPI.cs
    startLine: 415
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Edit properties of the application associated with the requesting bot user.
  example: []
  syntax:
    content: Task<Result<IApplication>> EditCurrentApplicationAsync(Optional<Uri> customInstallUrl = default, Optional<string> description = default, Optional<Uri> roleConnectionsVerificationUrl = default, Optional<IApplicationInstallParameters> installParams = default, Optional<ApplicationFlags> flags = default, Optional<Stream> icon = default, Optional<Stream> coverImage = default, Optional<Uri> interactionsEndpointUrl = default, Optional<IReadOnlyList<string>> tags = default, Optional<IReadOnlyDictionary<ApplicationIntegrationType, IApplicationIntegrationTypeConfig>> integrationTypesConfig = default, CancellationToken ct = default)
    parameters:
    - id: customInstallUrl
      type: Remora.Rest.Core.Optional{System.Uri}
      description: The default custom authorization URL of the app.
    - id: description
      type: Remora.Rest.Core.Optional{System.String}
      description: The description of the app.
    - id: roleConnectionsVerificationUrl
      type: Remora.Rest.Core.Optional{System.Uri}
      description: The role connections verification URL of the app.
    - id: installParams
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IApplicationInstallParameters}
      description: The settings for the app's in-app authorization.
    - id: flags
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationFlags}
      description: The new flags.
    - id: icon
      type: Remora.Rest.Core.Optional{System.IO.Stream}
      description: The new icon.
    - id: coverImage
      type: Remora.Rest.Core.Optional{System.IO.Stream}
      description: The new cover image.
    - id: interactionsEndpointUrl
      type: Remora.Rest.Core.Optional{System.Uri}
      description: The new interactions endpoint URL.
    - id: tags
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{System.String}}
      description: The new tags.
    - id: integrationTypesConfig
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType,Remora.Discord.API.Abstractions.Objects.IApplicationIntegrationTypeConfig}}
      description: The new integration types.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IApplication}}
      description: The updated application.
    content.vb: Function EditCurrentApplicationAsync(customInstallUrl As [Optional](Of Uri) = Nothing, description As [Optional](Of String) = Nothing, roleConnectionsVerificationUrl As [Optional](Of Uri) = Nothing, installParams As [Optional](Of IApplicationInstallParameters) = Nothing, flags As [Optional](Of ApplicationFlags) = Nothing, icon As [Optional](Of Stream) = Nothing, coverImage As [Optional](Of Stream) = Nothing, interactionsEndpointUrl As [Optional](Of Uri) = Nothing, tags As [Optional](Of IReadOnlyList(Of String)) = Nothing, integrationTypesConfig As [Optional](Of IReadOnlyDictionary(Of ApplicationIntegrationType, IApplicationIntegrationTypeConfig)) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IApplication))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditCurrentApplicationAsync*
  nameWithType.vb: IDiscordRestApplicationAPI.EditCurrentApplicationAsync(Optional(Of Uri), Optional(Of String), Optional(Of Uri), Optional(Of IApplicationInstallParameters), Optional(Of ApplicationFlags), Optional(Of Stream), Optional(Of Stream), Optional(Of Uri), Optional(Of IReadOnlyList(Of String)), Optional(Of IReadOnlyDictionary(Of ApplicationIntegrationType, IApplicationIntegrationTypeConfig)), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditCurrentApplicationAsync(Remora.Rest.Core.Optional(Of System.Uri), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Uri), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IApplicationInstallParameters), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ApplicationFlags), Remora.Rest.Core.Optional(Of System.IO.Stream), Remora.Rest.Core.Optional(Of System.IO.Stream), Remora.Rest.Core.Optional(Of System.Uri), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of String)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyDictionary(Of Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType, Remora.Discord.API.Abstractions.Objects.IApplicationIntegrationTypeConfig)), System.Threading.CancellationToken)
  name.vb: EditCurrentApplicationAsync(Optional(Of Uri), Optional(Of String), Optional(Of Uri), Optional(Of IApplicationInstallParameters), Optional(Of ApplicationFlags), Optional(Of Stream), Optional(Of Stream), Optional(Of Uri), Optional(Of IReadOnlyList(Of String)), Optional(Of IReadOnlyDictionary(Of ApplicationIntegrationType, IApplicationIntegrationTypeConfig)), CancellationToken)
references:
- uid: Remora.Discord.API.Abstractions.Rest
  commentId: N:Remora.Discord.API.Abstractions.Rest
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Rest
  nameWithType: Remora.Discord.API.Abstractions.Rest
  fullName: Remora.Discord.API.Abstractions.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGlobalApplicationCommandsAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGlobalApplicationCommandsAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_GetGlobalApplicationCommandsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: GetGlobalApplicationCommandsAsync
  nameWithType: IDiscordRestApplicationAPI.GetGlobalApplicationCommandsAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGlobalApplicationCommandsAsync
- uid: Remora.Rest.Core.Snowflake
  commentId: T:Remora.Rest.Core.Snowflake
  parent: Remora.Rest.Core
  isExternal: true
  name: Snowflake
  nameWithType: Snowflake
  fullName: Remora.Rest.Core.Snowflake
- uid: Remora.Rest.Core.Optional{System.Boolean}
  commentId: T:Remora.Rest.Core.Optional{System.Boolean}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Optional<bool>
  nameWithType: Optional<bool>
  fullName: Remora.Rest.Core.Optional<bool>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: Remora.Rest.Core.Optional(Of Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Remora.Rest.Core.Optional{System.String}
  commentId: T:Remora.Rest.Core.Optional{System.String}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Optional<string>
  nameWithType: Optional<string>
  fullName: Remora.Rest.Core.Optional<string>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Remora.Rest.Core.Optional(Of String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommand}}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommand}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IReadOnlyList<IApplicationCommand>>>
  nameWithType: Task<Result<IReadOnlyList<IApplicationCommand>>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IApplicationCommand>>>
  nameWithType.vb: Task(Of Result(Of IReadOnlyList(Of IApplicationCommand)))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IApplicationCommand)))
  name.vb: Task(Of Result(Of IReadOnlyList(Of IApplicationCommand)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationCommand
    name: IApplicationCommand
    href: Remora.Discord.API.Abstractions.Objects.IApplicationCommand.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationCommand
    name: IApplicationCommand
    href: Remora.Discord.API.Abstractions.Objects.IApplicationCommand.html
  - name: )
  - name: )
  - name: )
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.CreateGlobalApplicationCommandAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.CreateGlobalApplicationCommandAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_CreateGlobalApplicationCommandAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IApplicationCommandOption___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ApplicationCommandType__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyDictionary_System_String_System_String___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyDictionary_System_String_System_String___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDiscordPermissionSet__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_ApplicationIntegrationType___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_InteractionContextType___System_Threading_CancellationToken_
  name: CreateGlobalApplicationCommandAsync
  nameWithType: IDiscordRestApplicationAPI.CreateGlobalApplicationCommandAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.CreateGlobalApplicationCommandAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<IApplicationCommandOption>>
  nameWithType: Optional<IReadOnlyList<IApplicationCommandOption>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of IApplicationCommandOption))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption))
  name.vb: Optional(Of IReadOnlyList(Of IApplicationCommandOption))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption
    name: IApplicationCommandOption
    href: Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption
    name: IApplicationCommandOption
    href: Remora.Discord.API.Abstractions.Objects.IApplicationCommandOption.html
  - name: )
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationCommandType}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationCommandType}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.ApplicationCommandType.html
  name: Optional<ApplicationCommandType>
  nameWithType: Optional<ApplicationCommandType>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ApplicationCommandType>
  nameWithType.vb: Optional(Of ApplicationCommandType)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ApplicationCommandType)
  name.vb: Optional(Of ApplicationCommandType)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ApplicationCommandType
    name: ApplicationCommandType
    href: Remora.Discord.API.Abstractions.Objects.ApplicationCommandType.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ApplicationCommandType
    name: ApplicationCommandType
    href: Remora.Discord.API.Abstractions.Objects.ApplicationCommandType.html
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{System.String,System.String}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: Optional<IReadOnlyDictionary<string, string>>
  nameWithType: Optional<IReadOnlyDictionary<string, string>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyDictionary<string, string>>
  nameWithType.vb: Optional(Of IReadOnlyDictionary(Of String, String))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyDictionary(Of String, String))
  name.vb: Optional(Of IReadOnlyDictionary(Of String, String))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet.html
  name: Optional<IDiscordPermissionSet>
  nameWithType: Optional<IDiscordPermissionSet>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet>
  nameWithType.vb: Optional(Of IDiscordPermissionSet)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet)
  name.vb: Optional(Of IDiscordPermissionSet)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
    name: IDiscordPermissionSet
    href: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
    name: IDiscordPermissionSet
    href: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet.html
  - name: )
- uid: Remora.Rest.Core.Optional{System.Nullable{System.Boolean}}
  commentId: T:Remora.Rest.Core.Optional{System.Nullable{System.Boolean}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Optional<bool?>
  nameWithType: Optional<bool?>
  fullName: Remora.Rest.Core.Optional<bool?>
  nameWithType.vb: Optional(Of Boolean?)
  fullName.vb: Remora.Rest.Core.Optional(Of Boolean?)
  name.vb: Optional(Of Boolean?)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<ApplicationIntegrationType>>
  nameWithType: Optional<IReadOnlyList<ApplicationIntegrationType>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of ApplicationIntegrationType))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType))
  name.vb: Optional(Of IReadOnlyList(Of ApplicationIntegrationType))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType
    name: ApplicationIntegrationType
    href: Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType
    name: ApplicationIntegrationType
    href: Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType.html
  - name: )
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.InteractionContextType}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<InteractionContextType>>
  nameWithType: Optional<IReadOnlyList<InteractionContextType>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.InteractionContextType>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of InteractionContextType))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.InteractionContextType))
  name.vb: Optional(Of IReadOnlyList(Of InteractionContextType))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.InteractionContextType
    name: InteractionContextType
    href: Remora.Discord.API.Abstractions.Objects.InteractionContextType.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.InteractionContextType
    name: InteractionContextType
    href: Remora.Discord.API.Abstractions.Objects.InteractionContextType.html
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IApplicationCommand}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IApplicationCommand}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IApplicationCommand>>
  nameWithType: Task<Result<IApplicationCommand>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IApplicationCommand>>
  nameWithType.vb: Task(Of Result(Of IApplicationCommand))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IApplicationCommand))
  name.vb: Task(Of Result(Of IApplicationCommand))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationCommand
    name: IApplicationCommand
    href: Remora.Discord.API.Abstractions.Objects.IApplicationCommand.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationCommand
    name: IApplicationCommand
    href: Remora.Discord.API.Abstractions.Objects.IApplicationCommand.html
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.BulkOverwriteGlobalApplicationCommandsAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.BulkOverwriteGlobalApplicationCommandsAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_BulkOverwriteGlobalApplicationCommandsAsync_Remora_Rest_Core_Snowflake_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IBulkApplicationCommandData__System_Threading_CancellationToken_
  name: BulkOverwriteGlobalApplicationCommandsAsync
  nameWithType: IDiscordRestApplicationAPI.BulkOverwriteGlobalApplicationCommandsAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.BulkOverwriteGlobalApplicationCommandsAsync
- uid: System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData}
  commentId: T:System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<IBulkApplicationCommandData>
  nameWithType: IReadOnlyList<IBulkApplicationCommandData>
  fullName: System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData>
  nameWithType.vb: IReadOnlyList(Of IBulkApplicationCommandData)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData)
  name.vb: IReadOnlyList(Of IBulkApplicationCommandData)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData
    name: IBulkApplicationCommandData
    href: Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData
    name: IBulkApplicationCommandData
    href: Remora.Discord.API.Abstractions.Objects.IBulkApplicationCommandData.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGlobalApplicationCommandAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGlobalApplicationCommandAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_GetGlobalApplicationCommandAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetGlobalApplicationCommandAsync
  nameWithType: IDiscordRestApplicationAPI.GetGlobalApplicationCommandAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGlobalApplicationCommandAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditGlobalApplicationCommandAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditGlobalApplicationCommandAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_EditGlobalApplicationCommandAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IApplicationCommandOption___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyDictionary_System_String_System_String___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyDictionary_System_String_System_String___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDiscordPermissionSet__Remora_Rest_Core_Optional_System_Nullable_System_Boolean___Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_ApplicationIntegrationType___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_InteractionContextType___System_Threading_CancellationToken_
  name: EditGlobalApplicationCommandAsync
  nameWithType: IDiscordRestApplicationAPI.EditGlobalApplicationCommandAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditGlobalApplicationCommandAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.DeleteGlobalApplicationCommandAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.DeleteGlobalApplicationCommandAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_DeleteGlobalApplicationCommandAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: DeleteGlobalApplicationCommandAsync
  nameWithType: IDiscordRestApplicationAPI.DeleteGlobalApplicationCommandAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.DeleteGlobalApplicationCommandAsync
- uid: System.Threading.Tasks.Task{Remora.Results.Result}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result>
  nameWithType: Task<Result>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result>
  nameWithType.vb: Task(Of Result)
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result)
  name.vb: Task(Of Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: )
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandsAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandsAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_GetGuildApplicationCommandsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: GetGuildApplicationCommandsAsync
  nameWithType: IDiscordRestApplicationAPI.GetGuildApplicationCommandsAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandsAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.CreateGuildApplicationCommandAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.CreateGuildApplicationCommandAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_CreateGuildApplicationCommandAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IApplicationCommandOption___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ApplicationCommandType__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyDictionary_System_String_System_String___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyDictionary_System_String_System_String___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDiscordPermissionSet__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_ApplicationIntegrationType___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_InteractionContextType___System_Threading_CancellationToken_
  name: CreateGuildApplicationCommandAsync
  nameWithType: IDiscordRestApplicationAPI.CreateGuildApplicationCommandAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.CreateGuildApplicationCommandAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.BulkOverwriteGuildApplicationCommandsAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.BulkOverwriteGuildApplicationCommandsAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_BulkOverwriteGuildApplicationCommandsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IBulkApplicationCommandData__System_Threading_CancellationToken_
  name: BulkOverwriteGuildApplicationCommandsAsync
  nameWithType: IDiscordRestApplicationAPI.BulkOverwriteGuildApplicationCommandsAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.BulkOverwriteGuildApplicationCommandsAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_GetGuildApplicationCommandAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetGuildApplicationCommandAsync
  nameWithType: IDiscordRestApplicationAPI.GetGuildApplicationCommandAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditGuildApplicationCommandAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditGuildApplicationCommandAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_EditGuildApplicationCommandAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IApplicationCommandOption___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyDictionary_System_String_System_String___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyDictionary_System_String_System_String___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IDiscordPermissionSet__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_ApplicationIntegrationType___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_InteractionContextType___System_Threading_CancellationToken_
  name: EditGuildApplicationCommandAsync
  nameWithType: IDiscordRestApplicationAPI.EditGuildApplicationCommandAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditGuildApplicationCommandAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.DeleteGuildApplicationCommandAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.DeleteGuildApplicationCommandAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_DeleteGuildApplicationCommandAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: DeleteGuildApplicationCommandAsync
  nameWithType: IDiscordRestApplicationAPI.DeleteGuildApplicationCommandAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.DeleteGuildApplicationCommandAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandPermissionsAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandPermissionsAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_GetGuildApplicationCommandPermissionsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetGuildApplicationCommandPermissionsAsync
  nameWithType: IDiscordRestApplicationAPI.GetGuildApplicationCommandPermissionsAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetGuildApplicationCommandPermissionsAsync
- uid: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions}}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IReadOnlyList<IGuildApplicationCommandPermissions>>>
  nameWithType: Task<Result<IReadOnlyList<IGuildApplicationCommandPermissions>>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions>>>
  nameWithType.vb: Task(Of Result(Of IReadOnlyList(Of IGuildApplicationCommandPermissions)))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions)))
  name.vb: Task(Of Result(Of IReadOnlyList(Of IGuildApplicationCommandPermissions)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions
    name: IGuildApplicationCommandPermissions
    href: Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions
    name: IGuildApplicationCommandPermissions
    href: Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions.html
  - name: )
  - name: )
  - name: )
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetApplicationCommandPermissionsAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetApplicationCommandPermissionsAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_GetApplicationCommandPermissionsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetApplicationCommandPermissionsAsync
  nameWithType: IDiscordRestApplicationAPI.GetApplicationCommandPermissionsAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetApplicationCommandPermissionsAsync
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IGuildApplicationCommandPermissions>>
  nameWithType: Task<Result<IGuildApplicationCommandPermissions>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions>>
  nameWithType.vb: Task(Of Result(Of IGuildApplicationCommandPermissions))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions))
  name.vb: Task(Of Result(Of IGuildApplicationCommandPermissions))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions
    name: IGuildApplicationCommandPermissions
    href: Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions
    name: IGuildApplicationCommandPermissions
    href: Remora.Discord.API.Abstractions.Objects.IGuildApplicationCommandPermissions.html
  - name: )
  - name: )
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditApplicationCommandPermissionsAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditApplicationCommandPermissionsAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_EditApplicationCommandPermissionsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IApplicationCommandPermissions__System_Threading_CancellationToken_
  name: EditApplicationCommandPermissionsAsync
  nameWithType: IDiscordRestApplicationAPI.EditApplicationCommandPermissionsAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditApplicationCommandPermissionsAsync
- uid: System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandPermissions}
  commentId: T:System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationCommandPermissions}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<IApplicationCommandPermissions>
  nameWithType: IReadOnlyList<IApplicationCommandPermissions>
  fullName: System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IApplicationCommandPermissions>
  nameWithType.vb: IReadOnlyList(Of IApplicationCommandPermissions)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IApplicationCommandPermissions)
  name.vb: IReadOnlyList(Of IApplicationCommandPermissions)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationCommandPermissions
    name: IApplicationCommandPermissions
    href: Remora.Discord.API.Abstractions.Objects.IApplicationCommandPermissions.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationCommandPermissions
    name: IApplicationCommandPermissions
    href: Remora.Discord.API.Abstractions.Objects.IApplicationCommandPermissions.html
  - name: )
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetApplicationRoleConnectionMetadataRecordsAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetApplicationRoleConnectionMetadataRecordsAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_GetApplicationRoleConnectionMetadataRecordsAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetApplicationRoleConnectionMetadataRecordsAsync
  nameWithType: IDiscordRestApplicationAPI.GetApplicationRoleConnectionMetadataRecordsAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetApplicationRoleConnectionMetadataRecordsAsync
- uid: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata}}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IReadOnlyList<IApplicationRoleConnectionMetadata>>>
  nameWithType: Task<Result<IReadOnlyList<IApplicationRoleConnectionMetadata>>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata>>>
  nameWithType.vb: Task(Of Result(Of IReadOnlyList(Of IApplicationRoleConnectionMetadata)))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata)))
  name.vb: Task(Of Result(Of IReadOnlyList(Of IApplicationRoleConnectionMetadata)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata
    name: IApplicationRoleConnectionMetadata
    href: Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata
    name: IApplicationRoleConnectionMetadata
    href: Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata.html
  - name: )
  - name: )
  - name: )
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.UpdateApplicationRoleConnectionMetadataRecordsAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.UpdateApplicationRoleConnectionMetadataRecordsAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_UpdateApplicationRoleConnectionMetadataRecordsAsync_Remora_Rest_Core_Snowflake_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IApplicationRoleConnectionMetadata__System_Threading_CancellationToken_
  name: UpdateApplicationRoleConnectionMetadataRecordsAsync
  nameWithType: IDiscordRestApplicationAPI.UpdateApplicationRoleConnectionMetadataRecordsAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.UpdateApplicationRoleConnectionMetadataRecordsAsync
- uid: System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata}
  commentId: T:System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<IApplicationRoleConnectionMetadata>
  nameWithType: IReadOnlyList<IApplicationRoleConnectionMetadata>
  fullName: System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata>
  nameWithType.vb: IReadOnlyList(Of IApplicationRoleConnectionMetadata)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata)
  name.vb: IReadOnlyList(Of IApplicationRoleConnectionMetadata)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata
    name: IApplicationRoleConnectionMetadata
    href: Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata
    name: IApplicationRoleConnectionMetadata
    href: Remora.Discord.API.Abstractions.Objects.IApplicationRoleConnectionMetadata.html
  - name: )
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetCurrentApplicationAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetCurrentApplicationAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_GetCurrentApplicationAsync_System_Threading_CancellationToken_
  name: GetCurrentApplicationAsync
  nameWithType: IDiscordRestApplicationAPI.GetCurrentApplicationAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.GetCurrentApplicationAsync
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IApplication}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IApplication}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IApplication>>
  nameWithType: Task<Result<IApplication>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IApplication>>
  nameWithType.vb: Task(Of Result(Of IApplication))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IApplication))
  name.vb: Task(Of Result(Of IApplication))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IApplication
    name: IApplication
    href: Remora.Discord.API.Abstractions.Objects.IApplication.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IApplication
    name: IApplication
    href: Remora.Discord.API.Abstractions.Objects.IApplication.html
  - name: )
  - name: )
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditCurrentApplicationAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditCurrentApplicationAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestApplicationAPI_EditCurrentApplicationAsync_Remora_Rest_Core_Optional_System_Uri__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Uri__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IApplicationInstallParameters__Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_ApplicationFlags__Remora_Rest_Core_Optional_System_IO_Stream__Remora_Rest_Core_Optional_System_IO_Stream__Remora_Rest_Core_Optional_System_Uri__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_System_String___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyDictionary_Remora_Discord_API_Abstractions_Objects_ApplicationIntegrationType_Remora_Discord_API_Abstractions_Objects_IApplicationIntegrationTypeConfig___System_Threading_CancellationToken_
  name: EditCurrentApplicationAsync
  nameWithType: IDiscordRestApplicationAPI.EditCurrentApplicationAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestApplicationAPI.EditCurrentApplicationAsync
- uid: Remora.Rest.Core.Optional{System.Uri}
  commentId: T:Remora.Rest.Core.Optional{System.Uri}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Optional<Uri>
  nameWithType: Optional<Uri>
  fullName: Remora.Rest.Core.Optional<System.Uri>
  nameWithType.vb: Optional(Of Uri)
  fullName.vb: Remora.Rest.Core.Optional(Of System.Uri)
  name.vb: Optional(Of Uri)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Uri
    name: Uri
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uri
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IApplicationInstallParameters}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IApplicationInstallParameters}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.IApplicationInstallParameters.html
  name: Optional<IApplicationInstallParameters>
  nameWithType: Optional<IApplicationInstallParameters>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IApplicationInstallParameters>
  nameWithType.vb: Optional(Of IApplicationInstallParameters)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IApplicationInstallParameters)
  name.vb: Optional(Of IApplicationInstallParameters)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationInstallParameters
    name: IApplicationInstallParameters
    href: Remora.Discord.API.Abstractions.Objects.IApplicationInstallParameters.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationInstallParameters
    name: IApplicationInstallParameters
    href: Remora.Discord.API.Abstractions.Objects.IApplicationInstallParameters.html
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationFlags}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.ApplicationFlags}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.ApplicationFlags.html
  name: Optional<ApplicationFlags>
  nameWithType: Optional<ApplicationFlags>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.ApplicationFlags>
  nameWithType.vb: Optional(Of ApplicationFlags)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.ApplicationFlags)
  name.vb: Optional(Of ApplicationFlags)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ApplicationFlags
    name: ApplicationFlags
    href: Remora.Discord.API.Abstractions.Objects.ApplicationFlags.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ApplicationFlags
    name: ApplicationFlags
    href: Remora.Discord.API.Abstractions.Objects.ApplicationFlags.html
  - name: )
- uid: Remora.Rest.Core.Optional{System.IO.Stream}
  commentId: T:Remora.Rest.Core.Optional{System.IO.Stream}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Optional<Stream>
  nameWithType: Optional<Stream>
  fullName: Remora.Rest.Core.Optional<System.IO.Stream>
  nameWithType.vb: Optional(Of Stream)
  fullName.vb: Remora.Rest.Core.Optional(Of System.IO.Stream)
  name.vb: Optional(Of Stream)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{System.String}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{System.String}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<string>>
  nameWithType: Optional<IReadOnlyList<string>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<string>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of String))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of String))
  name.vb: Optional(Of IReadOnlyList(Of String))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType,Remora.Discord.API.Abstractions.Objects.IApplicationIntegrationTypeConfig}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyDictionary{Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType,Remora.Discord.API.Abstractions.Objects.IApplicationIntegrationTypeConfig}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: Optional<IReadOnlyDictionary<ApplicationIntegrationType, IApplicationIntegrationTypeConfig>>
  nameWithType: Optional<IReadOnlyDictionary<ApplicationIntegrationType, IApplicationIntegrationTypeConfig>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyDictionary<Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType, Remora.Discord.API.Abstractions.Objects.IApplicationIntegrationTypeConfig>>
  nameWithType.vb: Optional(Of IReadOnlyDictionary(Of ApplicationIntegrationType, IApplicationIntegrationTypeConfig))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyDictionary(Of Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType, Remora.Discord.API.Abstractions.Objects.IApplicationIntegrationTypeConfig))
  name.vb: Optional(Of IReadOnlyDictionary(Of ApplicationIntegrationType, IApplicationIntegrationTypeConfig))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType
    name: ApplicationIntegrationType
    href: Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType.html
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationIntegrationTypeConfig
    name: IApplicationIntegrationTypeConfig
    href: Remora.Discord.API.Abstractions.Objects.IApplicationIntegrationTypeConfig.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType
    name: ApplicationIntegrationType
    href: Remora.Discord.API.Abstractions.Objects.ApplicationIntegrationType.html
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IApplicationIntegrationTypeConfig
    name: IApplicationIntegrationTypeConfig
    href: Remora.Discord.API.Abstractions.Objects.IApplicationIntegrationTypeConfig.html
  - name: )
  - name: )
