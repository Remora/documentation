### YamlMime:ManagedReference
items:
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI
  commentId: T:Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI
  id: IDiscordRestInteractionAPI
  parent: Remora.Discord.API.Abstractions.Rest
  children:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.CreateFollowupMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.CreateInteractionResponseAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Discord.API.Abstractions.Objects.IInteractionResponse,Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.DeleteFollowupMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.DeleteOriginalInteractionResponseAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.EditFollowupMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.EditOriginalInteractionResponseAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.GetFollowupMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.GetOriginalInteractionResponseAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IDiscordRestInteractionAPI
  nameWithType: IDiscordRestInteractionAPI
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI
  type: Interface
  source:
    id: IDiscordRestInteractionAPI
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestInteractionAPI.cs
    startLine: 36
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Represents the Discord Interaction API.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public interface IDiscordRestInteractionAPI
    content.vb: >-
      <PublicAPI>

      Public Interface IDiscordRestInteractionAPI
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.CreateInteractionResponseAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Discord.API.Abstractions.Objects.IInteractionResponse,Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.CreateInteractionResponseAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Discord.API.Abstractions.Objects.IInteractionResponse,Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  id: CreateInteractionResponseAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Discord.API.Abstractions.Objects.IInteractionResponse,Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI
  langs:
  - csharp
  - vb
  name: CreateInteractionResponseAsync(Snowflake, string, IInteractionResponse, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>, CancellationToken)
  nameWithType: IDiscordRestInteractionAPI.CreateInteractionResponseAsync(Snowflake, string, IInteractionResponse, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.CreateInteractionResponseAsync(Remora.Rest.Core.Snowflake, string, Remora.Discord.API.Abstractions.Objects.IInteractionResponse, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<OneOf.OneOf<Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment>>>, System.Threading.CancellationToken)
  type: Method
  source:
    id: CreateInteractionResponseAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestInteractionAPI.cs
    startLine: 57
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Creates a response to an interaction from the gateway.
  remarks: >-
    Any streams passed to this method will be disposed of at the end of the call. If you want to reuse the streams

    afterwards, ensure that what you pass is a copy that the method can take ownership of.
  example: []
  syntax:
    content: Task<Result> CreateInteractionResponseAsync(Snowflake interactionID, string interactionToken, IInteractionResponse response, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>> attachments = default, CancellationToken ct = default)
    parameters:
    - id: interactionID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the interaction.
    - id: interactionToken
      type: System.String
      description: The interaction token.
    - id: response
      type: Remora.Discord.API.Abstractions.Objects.IInteractionResponse
      description: The response.
    - id: attachments
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}}
      description: >-
        The attachments to associate with the response. Each file may be a new file in the form of

        <xref href="Remora.Discord.API.Abstractions.Rest.FileData" data-throw-if-not-resolved="false"></xref>, or an existing one that should be retained in the form of a

        <xref href="Remora.Discord.API.Abstractions.Objects.IAttachment" data-throw-if-not-resolved="false"></xref>. If this request edits the original message, then any attachments not mentioned in

        this parameter will be deleted.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A creation result which may or may not have succeeded.
    content.vb: Function CreateInteractionResponseAsync(interactionID As Snowflake, interactionToken As String, response As IInteractionResponse, attachments As [Optional](Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.CreateInteractionResponseAsync*
  nameWithType.vb: IDiscordRestInteractionAPI.CreateInteractionResponseAsync(Snowflake, String, IInteractionResponse, Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.CreateInteractionResponseAsync(Remora.Rest.Core.Snowflake, String, Remora.Discord.API.Abstractions.Objects.IInteractionResponse, Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of OneOf.OneOf(Of Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment))), System.Threading.CancellationToken)
  name.vb: CreateInteractionResponseAsync(Snowflake, String, IInteractionResponse, Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.GetOriginalInteractionResponseAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.GetOriginalInteractionResponseAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  id: GetOriginalInteractionResponseAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI
  langs:
  - csharp
  - vb
  name: GetOriginalInteractionResponseAsync(Snowflake, string, CancellationToken)
  nameWithType: IDiscordRestInteractionAPI.GetOriginalInteractionResponseAsync(Snowflake, string, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.GetOriginalInteractionResponseAsync(Remora.Rest.Core.Snowflake, string, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetOriginalInteractionResponseAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestInteractionAPI.cs
    startLine: 73
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Gets the message object of the original interaction response.
  example: []
  syntax:
    content: Task<Result<IMessage>> GetOriginalInteractionResponseAsync(Snowflake applicationID, string interactionToken, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the application.
    - id: interactionToken
      type: System.String
      description: The interaction token.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
      description: A result which may or may not have succeeded.
    content.vb: Function GetOriginalInteractionResponseAsync(applicationID As Snowflake, interactionToken As String, ct As CancellationToken = Nothing) As Task(Of Result(Of IMessage))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.GetOriginalInteractionResponseAsync*
  nameWithType.vb: IDiscordRestInteractionAPI.GetOriginalInteractionResponseAsync(Snowflake, String, CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.GetOriginalInteractionResponseAsync(Remora.Rest.Core.Snowflake, String, System.Threading.CancellationToken)
  name.vb: GetOriginalInteractionResponseAsync(Snowflake, String, CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.EditOriginalInteractionResponseAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.EditOriginalInteractionResponseAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  id: EditOriginalInteractionResponseAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI
  langs:
  - csharp
  - vb
  name: EditOriginalInteractionResponseAsync(Snowflake, string, Optional<string?>, Optional<IReadOnlyList<IEmbed>?>, Optional<IAllowedMentions?>, Optional<IReadOnlyList<IMessageComponent>?>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>?>, CancellationToken)
  nameWithType: IDiscordRestInteractionAPI.EditOriginalInteractionResponseAsync(Snowflake, string, Optional<string?>, Optional<IReadOnlyList<IEmbed>?>, Optional<IAllowedMentions?>, Optional<IReadOnlyList<IMessageComponent>?>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>?>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.EditOriginalInteractionResponseAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<string?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmbed>?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IAllowedMentions?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessageComponent>?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<OneOf.OneOf<Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment>>?>, System.Threading.CancellationToken)
  type: Method
  source:
    id: EditOriginalInteractionResponseAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestInteractionAPI.cs
    startLine: 101
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Edits the initial interaction response.
  remarks: >-
    Any streams passed to this method will be disposed of at the end of the call. If you want to reuse the streams

    afterwards, ensure that what you pass is a copy that the method can take ownership of.
  example: []
  syntax:
    content: Task<Result<IMessage>> EditOriginalInteractionResponseAsync(Snowflake applicationID, string token, Optional<string?> content = default, Optional<IReadOnlyList<IEmbed>?> embeds = default, Optional<IAllowedMentions?> allowedMentions = default, Optional<IReadOnlyList<IMessageComponent>?> components = default, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>?> attachments = default, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: token
      type: System.String
      description: The interaction token.
    - id: content
      type: Remora.Rest.Core.Optional{System.String}
      description: The new content, if any.
    - id: embeds
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}}
      description: The new embeds, if any.
    - id: allowedMentions
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions}
      description: The new allowed mentions, if any.
    - id: components
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}}
      description: The components, if any.
    - id: attachments
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}}
      description: >-
        The attachments to associate with the response. Each file may be a new file in the form of

        <xref href="Remora.Discord.API.Abstractions.Rest.FileData" data-throw-if-not-resolved="false"></xref>, or an existing one that should be retained in the form of a

        <xref href="Remora.Discord.API.Abstractions.Objects.IPartialAttachment" data-throw-if-not-resolved="false"></xref>. If this request edits the original message, then any attachments not

        mentioned in this parameter will be deleted.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
      description: A modification result which may or may not have succeeded.
    content.vb: Function EditOriginalInteractionResponseAsync(applicationID As Snowflake, token As String, content As [Optional](Of String) = Nothing, embeds As [Optional](Of IReadOnlyList(Of IEmbed)) = Nothing, allowedMentions As [Optional](Of IAllowedMentions) = Nothing, components As [Optional](Of IReadOnlyList(Of IMessageComponent)) = Nothing, attachments As [Optional](Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IMessage))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.EditOriginalInteractionResponseAsync*
  nameWithType.vb: IDiscordRestInteractionAPI.EditOriginalInteractionResponseAsync(Snowflake, String, Optional(Of String), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.EditOriginalInteractionResponseAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmbed)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IAllowedMentions), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessageComponent)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of OneOf.OneOf(Of Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment))), System.Threading.CancellationToken)
  name.vb: EditOriginalInteractionResponseAsync(Snowflake, String, Optional(Of String), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.DeleteOriginalInteractionResponseAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.DeleteOriginalInteractionResponseAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  id: DeleteOriginalInteractionResponseAsync(Remora.Rest.Core.Snowflake,System.String,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI
  langs:
  - csharp
  - vb
  name: DeleteOriginalInteractionResponseAsync(Snowflake, string, CancellationToken)
  nameWithType: IDiscordRestInteractionAPI.DeleteOriginalInteractionResponseAsync(Snowflake, string, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.DeleteOriginalInteractionResponseAsync(Remora.Rest.Core.Snowflake, string, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteOriginalInteractionResponseAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestInteractionAPI.cs
    startLine: 120
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Deletes the original interaction response.
  example: []
  syntax:
    content: Task<Result> DeleteOriginalInteractionResponseAsync(Snowflake applicationID, string token, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: token
      type: System.String
      description: The interaction token.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A deletion result which may or may not have succeeded.
    content.vb: Function DeleteOriginalInteractionResponseAsync(applicationID As Snowflake, token As String, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.DeleteOriginalInteractionResponseAsync*
  nameWithType.vb: IDiscordRestInteractionAPI.DeleteOriginalInteractionResponseAsync(Snowflake, String, CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.DeleteOriginalInteractionResponseAsync(Remora.Rest.Core.Snowflake, String, System.Threading.CancellationToken)
  name.vb: DeleteOriginalInteractionResponseAsync(Snowflake, String, CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.CreateFollowupMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.CreateFollowupMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},System.Threading.CancellationToken)
  id: CreateFollowupMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI
  langs:
  - csharp
  - vb
  name: CreateFollowupMessageAsync(Snowflake, string, Optional<string>, Optional<bool>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>, Optional<MessageFlags>, CancellationToken)
  nameWithType: IDiscordRestInteractionAPI.CreateFollowupMessageAsync(Snowflake, string, Optional<string>, Optional<bool>, Optional<IReadOnlyList<IEmbed>>, Optional<IAllowedMentions>, Optional<IReadOnlyList<IMessageComponent>>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>, Optional<MessageFlags>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.CreateFollowupMessageAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmbed>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IAllowedMentions>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessageComponent>>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<OneOf.OneOf<Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment>>>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.MessageFlags>, System.Threading.CancellationToken)
  type: Method
  source:
    id: CreateFollowupMessageAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestInteractionAPI.cs
    startLine: 153
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Creates a followup message.
  remarks: >-
    At least one of <code class="paramref">content</code>, <code class="paramref">embeds</code>, or <code class="paramref">attachments</code> must be

    present.


    Any streams passed to this method will be disposed of at the end of the call. If you want to reuse the streams

    afterwards, ensure that what you pass is a copy that the method can take ownership of.
  example: []
  syntax:
    content: Task<Result<IMessage>> CreateFollowupMessageAsync(Snowflake applicationID, string token, Optional<string> content = default, Optional<bool> isTTS = default, Optional<IReadOnlyList<IEmbed>> embeds = default, Optional<IAllowedMentions> allowedMentions = default, Optional<IReadOnlyList<IMessageComponent>> components = default, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>> attachments = default, Optional<MessageFlags> flags = default, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: token
      type: System.String
      description: The interaction token.
    - id: content
      type: Remora.Rest.Core.Optional{System.String}
      description: The content of the message.
    - id: isTTS
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether this message is a TTS message.
    - id: embeds
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}}
      description: The embeds in the message.
    - id: allowedMentions
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions}
      description: The set of allowed mentions of the message.
    - id: components
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}}
      description: The components that should be included with the message.
    - id: attachments
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}}
      description: >-
        The attachments to associate with the response. Each file may be a new file in the form of

        <xref href="Remora.Discord.API.Abstractions.Rest.FileData" data-throw-if-not-resolved="false"></xref>, or an existing one that should be retained in the form of a

        <xref href="Remora.Discord.API.Abstractions.Objects.IPartialAttachment" data-throw-if-not-resolved="false"></xref>. If this request edits the original message, then any attachments not

        mentioned in this parameter will be deleted.
    - id: flags
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags}
      description: The message flags to use.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
      description: A result which may or may not have succeeded.
    content.vb: Function CreateFollowupMessageAsync(applicationID As Snowflake, token As String, content As [Optional](Of String) = Nothing, isTTS As [Optional](Of Boolean) = Nothing, embeds As [Optional](Of IReadOnlyList(Of IEmbed)) = Nothing, allowedMentions As [Optional](Of IAllowedMentions) = Nothing, components As [Optional](Of IReadOnlyList(Of IMessageComponent)) = Nothing, attachments As [Optional](Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))) = Nothing, flags As [Optional](Of MessageFlags) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IMessage))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.CreateFollowupMessageAsync*
  nameWithType.vb: IDiscordRestInteractionAPI.CreateFollowupMessageAsync(Snowflake, String, Optional(Of String), Optional(Of Boolean), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), Optional(Of MessageFlags), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.CreateFollowupMessageAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmbed)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IAllowedMentions), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessageComponent)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of OneOf.OneOf(Of Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment))), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.MessageFlags), System.Threading.CancellationToken)
  name.vb: CreateFollowupMessageAsync(Snowflake, String, Optional(Of String), Optional(Of Boolean), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), Optional(Of MessageFlags), CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.GetFollowupMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.GetFollowupMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: GetFollowupMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI
  langs:
  - csharp
  - vb
  name: GetFollowupMessageAsync(Snowflake, string, Snowflake, CancellationToken)
  nameWithType: IDiscordRestInteractionAPI.GetFollowupMessageAsync(Snowflake, string, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.GetFollowupMessageAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetFollowupMessageAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestInteractionAPI.cs
    startLine: 175
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Gets a followup message associated with the given interaction.
  example: []
  syntax:
    content: Task<Result<IMessage>> GetFollowupMessageAsync(Snowflake applicationID, string token, Snowflake messageID, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: token
      type: System.String
      description: The interaction token.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
      description: A result which may or may not have succeeded.
    content.vb: Function GetFollowupMessageAsync(applicationID As Snowflake, token As String, messageID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IMessage))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.GetFollowupMessageAsync*
  nameWithType.vb: IDiscordRestInteractionAPI.GetFollowupMessageAsync(Snowflake, String, Snowflake, CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.GetFollowupMessageAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  name.vb: GetFollowupMessageAsync(Snowflake, String, Snowflake, CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.EditFollowupMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.EditFollowupMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  id: EditFollowupMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}},Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI
  langs:
  - csharp
  - vb
  name: EditFollowupMessageAsync(Snowflake, string, Snowflake, Optional<string?>, Optional<IReadOnlyList<IEmbed>?>, Optional<IAllowedMentions?>, Optional<IReadOnlyList<IMessageComponent>?>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>?>, CancellationToken)
  nameWithType: IDiscordRestInteractionAPI.EditFollowupMessageAsync(Snowflake, string, Snowflake, Optional<string?>, Optional<IReadOnlyList<IEmbed>?>, Optional<IAllowedMentions?>, Optional<IReadOnlyList<IMessageComponent>?>, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>?>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.EditFollowupMessageAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmbed>?>, Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IAllowedMentions?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessageComponent>?>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<OneOf.OneOf<Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment>>?>, System.Threading.CancellationToken)
  type: Method
  source:
    id: EditFollowupMessageAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestInteractionAPI.cs
    startLine: 205
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Edits an interaction followup message.
  remarks: >-
    Any streams passed to this method will be disposed of at the end of the call. If you want to reuse the streams

    afterwards, ensure that what you pass is a copy that the method can take ownership of.
  example: []
  syntax:
    content: Task<Result<IMessage>> EditFollowupMessageAsync(Snowflake applicationID, string token, Snowflake messageID, Optional<string?> content = default, Optional<IReadOnlyList<IEmbed>?> embeds = default, Optional<IAllowedMentions?> allowedMentions = default, Optional<IReadOnlyList<IMessageComponent>?> components = default, Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>?> attachments = default, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: token
      type: System.String
      description: The interaction token.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: content
      type: Remora.Rest.Core.Optional{System.String}
      description: The new content, if any.
    - id: embeds
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}}
      description: The new embeds, if any.
    - id: allowedMentions
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions}
      description: The new allowed mentions, if any.
    - id: components
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}}
      description: The components, if any.
    - id: attachments
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}}
      description: >-
        The attachments to associate with the response. Each file may be a new file in the form of

        <xref href="Remora.Discord.API.Abstractions.Rest.FileData" data-throw-if-not-resolved="false"></xref>, or an existing one that should be retained in the form of a

        <xref href="Remora.Discord.API.Abstractions.Objects.IPartialAttachment" data-throw-if-not-resolved="false"></xref>. If this request edits the original message, then any attachments not

        mentioned in this parameter will be deleted.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
      description: A modification result which may or may not have succeeded.
    content.vb: Function EditFollowupMessageAsync(applicationID As Snowflake, token As String, messageID As Snowflake, content As [Optional](Of String) = Nothing, embeds As [Optional](Of IReadOnlyList(Of IEmbed)) = Nothing, allowedMentions As [Optional](Of IAllowedMentions) = Nothing, components As [Optional](Of IReadOnlyList(Of IMessageComponent)) = Nothing, attachments As [Optional](Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IMessage))
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.EditFollowupMessageAsync*
  nameWithType.vb: IDiscordRestInteractionAPI.EditFollowupMessageAsync(Snowflake, String, Snowflake, Optional(Of String), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.EditFollowupMessageAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmbed)), Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IAllowedMentions), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessageComponent)), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of OneOf.OneOf(Of Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment))), System.Threading.CancellationToken)
  name.vb: EditFollowupMessageAsync(Snowflake, String, Snowflake, Optional(Of String), Optional(Of IReadOnlyList(Of IEmbed)), Optional(Of IAllowedMentions), Optional(Of IReadOnlyList(Of IMessageComponent)), Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment))), CancellationToken)
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.DeleteFollowupMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.DeleteFollowupMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: DeleteFollowupMessageAsync(Remora.Rest.Core.Snowflake,System.String,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI
  langs:
  - csharp
  - vb
  name: DeleteFollowupMessageAsync(Snowflake, string, Snowflake, CancellationToken)
  nameWithType: IDiscordRestInteractionAPI.DeleteFollowupMessageAsync(Snowflake, string, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.DeleteFollowupMessageAsync(Remora.Rest.Core.Snowflake, string, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteFollowupMessageAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Rest\IDiscordRestInteractionAPI.cs
    startLine: 226
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Rest
  summary: Deletes an interaction followup message.
  example: []
  syntax:
    content: Task<Result> DeleteFollowupMessageAsync(Snowflake applicationID, string token, Snowflake messageID, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the bot application.
    - id: token
      type: System.String
      description: The interaction token.
    - id: messageID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the message.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A modification result which may or may not have succeeded.
    content.vb: Function DeleteFollowupMessageAsync(applicationID As Snowflake, token As String, messageID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.DeleteFollowupMessageAsync*
  nameWithType.vb: IDiscordRestInteractionAPI.DeleteFollowupMessageAsync(Snowflake, String, Snowflake, CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.DeleteFollowupMessageAsync(Remora.Rest.Core.Snowflake, String, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  name.vb: DeleteFollowupMessageAsync(Snowflake, String, Snowflake, CancellationToken)
references:
- uid: Remora.Discord.API.Abstractions.Rest
  commentId: N:Remora.Discord.API.Abstractions.Rest
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Rest
  nameWithType: Remora.Discord.API.Abstractions.Rest
  fullName: Remora.Discord.API.Abstractions.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
- uid: Remora.Discord.API.Abstractions.Rest.FileData
  commentId: T:Remora.Discord.API.Abstractions.Rest.FileData
  parent: Remora.Discord.API.Abstractions.Rest
  href: Remora.Discord.API.Abstractions.Rest.FileData.html
  name: FileData
  nameWithType: FileData
  fullName: Remora.Discord.API.Abstractions.Rest.FileData
- uid: Remora.Discord.API.Abstractions.Objects.IAttachment
  commentId: T:Remora.Discord.API.Abstractions.Objects.IAttachment
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IAttachment.html
  name: IAttachment
  nameWithType: IAttachment
  fullName: Remora.Discord.API.Abstractions.Objects.IAttachment
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.CreateInteractionResponseAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.CreateInteractionResponseAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestInteractionAPI_CreateInteractionResponseAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Discord_API_Abstractions_Objects_IInteractionResponse_Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____System_Threading_CancellationToken_
  name: CreateInteractionResponseAsync
  nameWithType: IDiscordRestInteractionAPI.CreateInteractionResponseAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.CreateInteractionResponseAsync
- uid: Remora.Rest.Core.Snowflake
  commentId: T:Remora.Rest.Core.Snowflake
  parent: Remora.Rest.Core
  isExternal: true
  name: Snowflake
  nameWithType: Snowflake
  fullName: Remora.Rest.Core.Snowflake
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Remora.Discord.API.Abstractions.Objects.IInteractionResponse
  commentId: T:Remora.Discord.API.Abstractions.Objects.IInteractionResponse
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IInteractionResponse.html
  name: IInteractionResponse
  nameWithType: IInteractionResponse
  fullName: Remora.Discord.API.Abstractions.Objects.IInteractionResponse
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{OneOf.OneOf{Remora.Discord.API.Abstractions.Rest.FileData,Remora.Discord.API.Abstractions.Objects.IPartialAttachment}}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>
  nameWithType: Optional<IReadOnlyList<OneOf<FileData, IPartialAttachment>>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<OneOf.OneOf<Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment>>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment)))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of OneOf.OneOf(Of Remora.Discord.API.Abstractions.Rest.FileData, Remora.Discord.API.Abstractions.Objects.IPartialAttachment)))
  name.vb: Optional(Of IReadOnlyList(Of OneOf(Of FileData, IPartialAttachment)))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
    name: IPartialAttachment
    href: Remora.Discord.API.Abstractions.Objects.IPartialAttachment.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: OneOf.OneOf`2
    name: OneOf
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
    name: IPartialAttachment
    href: Remora.Discord.API.Abstractions.Objects.IPartialAttachment.html
  - name: )
  - name: )
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Remora.Results.Result}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result>
  nameWithType: Task<Result>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result>
  nameWithType.vb: Task(Of Result)
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result)
  name.vb: Task(Of Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects
  commentId: N:Remora.Discord.API.Abstractions.Objects
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Objects
  nameWithType: Remora.Discord.API.Abstractions.Objects
  fullName: Remora.Discord.API.Abstractions.Objects
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.GetOriginalInteractionResponseAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.GetOriginalInteractionResponseAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestInteractionAPI_GetOriginalInteractionResponseAsync_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  name: GetOriginalInteractionResponseAsync
  nameWithType: IDiscordRestInteractionAPI.GetOriginalInteractionResponseAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.GetOriginalInteractionResponseAsync
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IMessage}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IMessage>>
  nameWithType: Task<Result<IMessage>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IMessage>>
  nameWithType.vb: Task(Of Result(Of IMessage))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IMessage))
  name.vb: Task(Of Result(Of IMessage))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IMessage
    name: IMessage
    href: Remora.Discord.API.Abstractions.Objects.IMessage.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IMessage
    name: IMessage
    href: Remora.Discord.API.Abstractions.Objects.IMessage.html
  - name: )
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
  commentId: T:Remora.Discord.API.Abstractions.Objects.IPartialAttachment
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IPartialAttachment.html
  name: IPartialAttachment
  nameWithType: IPartialAttachment
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialAttachment
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.EditOriginalInteractionResponseAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.EditOriginalInteractionResponseAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestInteractionAPI_EditOriginalInteractionResponseAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____System_Threading_CancellationToken_
  name: EditOriginalInteractionResponseAsync
  nameWithType: IDiscordRestInteractionAPI.EditOriginalInteractionResponseAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.EditOriginalInteractionResponseAsync
- uid: Remora.Rest.Core.Optional{System.String}
  commentId: T:Remora.Rest.Core.Optional{System.String}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Optional<string>
  nameWithType: Optional<string>
  fullName: Remora.Rest.Core.Optional<string>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Remora.Rest.Core.Optional(Of String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmbed}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<IEmbed>>
  nameWithType: Optional<IReadOnlyList<IEmbed>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmbed>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of IEmbed))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmbed))
  name.vb: Optional(Of IReadOnlyList(Of IEmbed))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
    href: Remora.Discord.API.Abstractions.Objects.IEmbed.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IEmbed
    name: IEmbed
    href: Remora.Discord.API.Abstractions.Objects.IEmbed.html
  - name: )
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IAllowedMentions}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  name: Optional<IAllowedMentions>
  nameWithType: Optional<IAllowedMentions>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IAllowedMentions>
  nameWithType.vb: Optional(Of IAllowedMentions)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IAllowedMentions)
  name.vb: Optional(Of IAllowedMentions)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
    href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IAllowedMentions
    name: IAllowedMentions
    href: Remora.Discord.API.Abstractions.Objects.IAllowedMentions.html
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IMessageComponent}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<IMessageComponent>>
  nameWithType: Optional<IReadOnlyList<IMessageComponent>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IMessageComponent>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of IMessageComponent))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IMessageComponent))
  name.vb: Optional(Of IReadOnlyList(Of IMessageComponent))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
    href: Remora.Discord.API.Abstractions.Objects.IMessageComponent.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IMessageComponent
    name: IMessageComponent
    href: Remora.Discord.API.Abstractions.Objects.IMessageComponent.html
  - name: )
  - name: )
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.DeleteOriginalInteractionResponseAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.DeleteOriginalInteractionResponseAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestInteractionAPI_DeleteOriginalInteractionResponseAsync_Remora_Rest_Core_Snowflake_System_String_System_Threading_CancellationToken_
  name: DeleteOriginalInteractionResponseAsync
  nameWithType: IDiscordRestInteractionAPI.DeleteOriginalInteractionResponseAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.DeleteOriginalInteractionResponseAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.CreateFollowupMessageAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.CreateFollowupMessageAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestInteractionAPI_CreateFollowupMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_MessageFlags__System_Threading_CancellationToken_
  name: CreateFollowupMessageAsync
  nameWithType: IDiscordRestInteractionAPI.CreateFollowupMessageAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.CreateFollowupMessageAsync
- uid: Remora.Rest.Core.Optional{System.Boolean}
  commentId: T:Remora.Rest.Core.Optional{System.Boolean}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Optional<bool>
  nameWithType: Optional<bool>
  fullName: Remora.Rest.Core.Optional<bool>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: Remora.Rest.Core.Optional(Of Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.MessageFlags}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  name: Optional<MessageFlags>
  nameWithType: Optional<MessageFlags>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.MessageFlags>
  nameWithType.vb: Optional(Of MessageFlags)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.MessageFlags)
  name.vb: Optional(Of MessageFlags)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
    href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.MessageFlags
    name: MessageFlags
    href: Remora.Discord.API.Abstractions.Objects.MessageFlags.html
  - name: )
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.GetFollowupMessageAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.GetFollowupMessageAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestInteractionAPI_GetFollowupMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetFollowupMessageAsync
  nameWithType: IDiscordRestInteractionAPI.GetFollowupMessageAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.GetFollowupMessageAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.EditFollowupMessageAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.EditFollowupMessageAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestInteractionAPI_EditFollowupMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IEmbed___Remora_Rest_Core_Optional_Remora_Discord_API_Abstractions_Objects_IAllowedMentions__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Discord_API_Abstractions_Objects_IMessageComponent___Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_OneOf_OneOf_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Discord_API_Abstractions_Objects_IPartialAttachment____System_Threading_CancellationToken_
  name: EditFollowupMessageAsync
  nameWithType: IDiscordRestInteractionAPI.EditFollowupMessageAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.EditFollowupMessageAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.DeleteFollowupMessageAsync*
  commentId: Overload:Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.DeleteFollowupMessageAsync
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestInteractionAPI_DeleteFollowupMessageAsync_Remora_Rest_Core_Snowflake_System_String_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: DeleteFollowupMessageAsync
  nameWithType: IDiscordRestInteractionAPI.DeleteFollowupMessageAsync
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.DeleteFollowupMessageAsync
