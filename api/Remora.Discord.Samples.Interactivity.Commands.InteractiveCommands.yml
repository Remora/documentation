### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands
  commentId: T:Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands
  id: InteractiveCommands
  parent: Remora.Discord.Samples.Interactivity.Commands
  children:
  - Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.#ctor(Remora.Discord.Commands.Contexts.ICommandContext,Remora.Discord.Commands.Feedback.Services.FeedbackService,Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI)
  - Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendDropdownAsync
  - Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendMentionableDropdownAsync
  - Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendPagesAsync
  - Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendStatefulButtonsAsync
  - Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendTypedDropdownAsync
  - Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.ShowEphemeralModalAsync
  - Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.ShowModalAsync
  langs:
  - csharp
  - vb
  name: InteractiveCommands
  nameWithType: InteractiveCommands
  fullName: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands
  type: Class
  source:
    id: InteractiveCommands
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Samples\Interactivity\Commands\InteractiveCommands.cs
    startLine: 28
  assemblies:
  - Interactivity
  namespace: Remora.Discord.Samples.Interactivity.Commands
  summary: Defines commands with various interactivity types.
  example: []
  syntax:
    content: >-
      [Group("interactive", new string[] { })]

      public class InteractiveCommands : CommandGroup
    content.vb: >-
      <Group("interactive", New String() { })>

      Public Class InteractiveCommands Inherits CommandGroup
  inheritance:
  - System.Object
  - Remora.Commands.Groups.CommandGroup
  inheritedMembers:
  - Remora.Commands.Groups.CommandGroup.CancellationToken
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.#ctor(Remora.Discord.Commands.Contexts.ICommandContext,Remora.Discord.Commands.Feedback.Services.FeedbackService,Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI)
  commentId: M:Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.#ctor(Remora.Discord.Commands.Contexts.ICommandContext,Remora.Discord.Commands.Feedback.Services.FeedbackService,Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI)
  id: '#ctor(Remora.Discord.Commands.Contexts.ICommandContext,Remora.Discord.Commands.Feedback.Services.FeedbackService,Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI)'
  parent: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands
  langs:
  - csharp
  - vb
  name: InteractiveCommands(ICommandContext, FeedbackService, IDiscordRestInteractionAPI)
  nameWithType: InteractiveCommands.InteractiveCommands(ICommandContext, FeedbackService, IDiscordRestInteractionAPI)
  fullName: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.InteractiveCommands(Remora.Discord.Commands.Contexts.ICommandContext, Remora.Discord.Commands.Feedback.Services.FeedbackService, Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Samples\Interactivity\Commands\InteractiveCommands.cs
    startLine: 41
  assemblies:
  - Interactivity
  namespace: Remora.Discord.Samples.Interactivity.Commands
  summary: Initializes a new instance of the <xref href="Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public InteractiveCommands(ICommandContext context, FeedbackService feedback, IDiscordRestInteractionAPI interactionAPI)
    parameters:
    - id: context
      type: Remora.Discord.Commands.Contexts.ICommandContext
      description: The command context.
    - id: feedback
      type: Remora.Discord.Commands.Feedback.Services.FeedbackService
      description: The feedback service.
    - id: interactionAPI
      type: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI
      description: The interaction API.
    content.vb: Public Sub New(context As ICommandContext, feedback As FeedbackService, interactionAPI As IDiscordRestInteractionAPI)
  overload: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.#ctor*
  nameWithType.vb: InteractiveCommands.New(ICommandContext, FeedbackService, IDiscordRestInteractionAPI)
  fullName.vb: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.New(Remora.Discord.Commands.Contexts.ICommandContext, Remora.Discord.Commands.Feedback.Services.FeedbackService, Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI)
  name.vb: New(ICommandContext, FeedbackService, IDiscordRestInteractionAPI)
- uid: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendPagesAsync
  commentId: M:Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendPagesAsync
  id: SendPagesAsync
  parent: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands
  langs:
  - csharp
  - vb
  name: SendPagesAsync()
  nameWithType: InteractiveCommands.SendPagesAsync()
  fullName: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendPagesAsync()
  type: Method
  source:
    id: SendPagesAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Samples\Interactivity\Commands\InteractiveCommands.cs
    startLine: 57
  assemblies:
  - Interactivity
  namespace: Remora.Discord.Samples.Interactivity.Commands
  summary: Sends a paginated embed.
  example: []
  syntax:
    content: >-
      [Command("pages", new string[] { })]

      public Task<IResult> SendPagesAsync()
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous operation.
    content.vb: >-
      <Command("pages", New String() { })>

      Public Function SendPagesAsync() As Task(Of IResult)
  overload: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendPagesAsync*
- uid: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendDropdownAsync
  commentId: M:Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendDropdownAsync
  id: SendDropdownAsync
  parent: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands
  langs:
  - csharp
  - vb
  name: SendDropdownAsync()
  nameWithType: InteractiveCommands.SendDropdownAsync()
  fullName: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendDropdownAsync()
  type: Method
  source:
    id: SendDropdownAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Samples\Interactivity\Commands\InteractiveCommands.cs
    startLine: 100
  assemblies:
  - Interactivity
  namespace: Remora.Discord.Samples.Interactivity.Commands
  summary: Sends an embed with a dropdown.
  example: []
  syntax:
    content: >-
      [Command("dropdown", new string[] { })]

      public Task<IResult> SendDropdownAsync()
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous operation.
    content.vb: >-
      <Command("dropdown", New String() { })>

      Public Function SendDropdownAsync() As Task(Of IResult)
  overload: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendDropdownAsync*
- uid: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendTypedDropdownAsync
  commentId: M:Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendTypedDropdownAsync
  id: SendTypedDropdownAsync
  parent: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands
  langs:
  - csharp
  - vb
  name: SendTypedDropdownAsync()
  nameWithType: InteractiveCommands.SendTypedDropdownAsync()
  fullName: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendTypedDropdownAsync()
  type: Method
  source:
    id: SendTypedDropdownAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Samples\Interactivity\Commands\InteractiveCommands.cs
    startLine: 136
  assemblies:
  - Interactivity
  namespace: Remora.Discord.Samples.Interactivity.Commands
  summary: Sends an embed with a dropdown.
  example: []
  syntax:
    content: >-
      [Command("typed-dropdown", new string[] { })]

      public Task<IResult> SendTypedDropdownAsync()
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous operation.
    content.vb: >-
      <Command("typed-dropdown", New String() { })>

      Public Function SendTypedDropdownAsync() As Task(Of IResult)
  overload: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendTypedDropdownAsync*
- uid: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendMentionableDropdownAsync
  commentId: M:Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendMentionableDropdownAsync
  id: SendMentionableDropdownAsync
  parent: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands
  langs:
  - csharp
  - vb
  name: SendMentionableDropdownAsync()
  nameWithType: InteractiveCommands.SendMentionableDropdownAsync()
  fullName: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendMentionableDropdownAsync()
  type: Method
  source:
    id: SendMentionableDropdownAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Samples\Interactivity\Commands\InteractiveCommands.cs
    startLine: 168
  assemblies:
  - Interactivity
  namespace: Remora.Discord.Samples.Interactivity.Commands
  summary: >-
    Sends an embed with a dropdown allowing the user to select

    users/roles.
  example: []
  syntax:
    content: >-
      [Command("mentionable-dropdown", new string[] { })]

      public Task<IResult> SendMentionableDropdownAsync()
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
      description: A <xref href="System.Threading.Tasks.Task" data-throw-if-not-resolved="false"></xref> representing the asynchronous operation.
    content.vb: >-
      <Command("mentionable-dropdown", New String() { })>

      Public Function SendMentionableDropdownAsync() As Task(Of IResult)
  overload: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendMentionableDropdownAsync*
- uid: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.ShowModalAsync
  commentId: M:Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.ShowModalAsync
  id: ShowModalAsync
  parent: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands
  langs:
  - csharp
  - vb
  name: ShowModalAsync()
  nameWithType: InteractiveCommands.ShowModalAsync()
  fullName: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.ShowModalAsync()
  type: Method
  source:
    id: ShowModalAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Samples\Interactivity\Commands\InteractiveCommands.cs
    startLine: 193
  assemblies:
  - Interactivity
  namespace: Remora.Discord.Samples.Interactivity.Commands
  summary: Shows a modal.
  example: []
  syntax:
    content: >-
      [Command("modal", new string[] { })]

      [SuppressInteractionResponse(true)]

      public Task<Result> ShowModalAsync()
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A result, indicating if the modal was sent successfully.
    content.vb: >-
      <Command("modal", New String() { })>

      <SuppressInteractionResponse(True)>

      Public Function ShowModalAsync() As Task(Of Result)
  overload: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.ShowModalAsync*
  attributes:
  - type: Remora.Discord.Commands.Attributes.SuppressInteractionResponseAttribute
    ctor: Remora.Discord.Commands.Attributes.SuppressInteractionResponseAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
- uid: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.ShowEphemeralModalAsync
  commentId: M:Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.ShowEphemeralModalAsync
  id: ShowEphemeralModalAsync
  parent: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands
  langs:
  - csharp
  - vb
  name: ShowEphemeralModalAsync()
  nameWithType: InteractiveCommands.ShowEphemeralModalAsync()
  fullName: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.ShowEphemeralModalAsync()
  type: Method
  source:
    id: ShowEphemeralModalAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Samples\Interactivity\Commands\InteractiveCommands.cs
    startLine: 260
  assemblies:
  - Interactivity
  namespace: Remora.Discord.Samples.Interactivity.Commands
  summary: Shows a modal.
  example: []
  syntax:
    content: >-
      [Command("ephemeral-modal", new string[] { })]

      [SuppressInteractionResponse(true)]

      public Task<Result> ShowEphemeralModalAsync()
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A result, indicating if the modal was sent successfully.
    content.vb: >-
      <Command("ephemeral-modal", New String() { })>

      <SuppressInteractionResponse(True)>

      Public Function ShowEphemeralModalAsync() As Task(Of Result)
  overload: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.ShowEphemeralModalAsync*
  attributes:
  - type: Remora.Discord.Commands.Attributes.SuppressInteractionResponseAttribute
    ctor: Remora.Discord.Commands.Attributes.SuppressInteractionResponseAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
- uid: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendStatefulButtonsAsync
  commentId: M:Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendStatefulButtonsAsync
  id: SendStatefulButtonsAsync
  parent: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands
  langs:
  - csharp
  - vb
  name: SendStatefulButtonsAsync()
  nameWithType: InteractiveCommands.SendStatefulButtonsAsync()
  fullName: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendStatefulButtonsAsync()
  type: Method
  source:
    id: SendStatefulButtonsAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Samples\Interactivity\Commands\InteractiveCommands.cs
    startLine: 327
  assemblies:
  - Interactivity
  namespace: Remora.Discord.Samples.Interactivity.Commands
  summary: Pass state along with buttons.
  example: []
  syntax:
    content: >-
      [Command("stateful-buttons", new string[] { })]

      public Task<IResult> SendStatefulButtonsAsync()
    return:
      type: System.Threading.Tasks.Task{Remora.Results.IResult}
      description: A result, indicating if the modal was sent successfully.
    content.vb: >-
      <Command("stateful-buttons", New String() { })>

      Public Function SendStatefulButtonsAsync() As Task(Of IResult)
  overload: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendStatefulButtonsAsync*
references:
- uid: Remora.Discord.Samples.Interactivity.Commands
  commentId: N:Remora.Discord.Samples.Interactivity.Commands
  href: Remora.html
  name: Remora.Discord.Samples.Interactivity.Commands
  nameWithType: Remora.Discord.Samples.Interactivity.Commands
  fullName: Remora.Discord.Samples.Interactivity.Commands
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Samples
    name: Samples
    href: Remora.Discord.Samples.html
  - name: .
  - uid: Remora.Discord.Samples.Interactivity
    name: Interactivity
    href: Remora.Discord.Samples.Interactivity.html
  - name: .
  - uid: Remora.Discord.Samples.Interactivity.Commands
    name: Commands
    href: Remora.Discord.Samples.Interactivity.Commands.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Samples
    name: Samples
    href: Remora.Discord.Samples.html
  - name: .
  - uid: Remora.Discord.Samples.Interactivity
    name: Interactivity
    href: Remora.Discord.Samples.Interactivity.html
  - name: .
  - uid: Remora.Discord.Samples.Interactivity.Commands
    name: Commands
    href: Remora.Discord.Samples.Interactivity.Commands.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Commands.Groups.CommandGroup
  commentId: T:Remora.Commands.Groups.CommandGroup
  parent: Remora.Commands.Groups
  isExternal: true
  name: CommandGroup
  nameWithType: CommandGroup
  fullName: Remora.Commands.Groups.CommandGroup
- uid: Remora.Commands.Groups.CommandGroup.CancellationToken
  commentId: P:Remora.Commands.Groups.CommandGroup.CancellationToken
  parent: Remora.Commands.Groups.CommandGroup
  isExternal: true
  name: CancellationToken
  nameWithType: CommandGroup.CancellationToken
  fullName: Remora.Commands.Groups.CommandGroup.CancellationToken
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Commands.Groups
  commentId: N:Remora.Commands.Groups
  isExternal: true
  name: Remora.Commands.Groups
  nameWithType: Remora.Commands.Groups
  fullName: Remora.Commands.Groups
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Commands
    name: Commands
    isExternal: true
  - name: .
  - uid: Remora.Commands.Groups
    name: Groups
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Commands
    name: Commands
    isExternal: true
  - name: .
  - uid: Remora.Commands.Groups
    name: Groups
    isExternal: true
- uid: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands
  commentId: T:Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands
  href: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.html
  name: InteractiveCommands
  nameWithType: InteractiveCommands
  fullName: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands
- uid: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.#ctor*
  commentId: Overload:Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.#ctor
  href: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.html#Remora_Discord_Samples_Interactivity_Commands_InteractiveCommands__ctor_Remora_Discord_Commands_Contexts_ICommandContext_Remora_Discord_Commands_Feedback_Services_FeedbackService_Remora_Discord_API_Abstractions_Rest_IDiscordRestInteractionAPI_
  name: InteractiveCommands
  nameWithType: InteractiveCommands.InteractiveCommands
  fullName: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.InteractiveCommands
  nameWithType.vb: InteractiveCommands.New
  fullName.vb: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.New
  name.vb: New
- uid: Remora.Discord.Commands.Contexts.ICommandContext
  commentId: T:Remora.Discord.Commands.Contexts.ICommandContext
  parent: Remora.Discord.Commands.Contexts
  href: Remora.Discord.Commands.Contexts.ICommandContext.html
  name: ICommandContext
  nameWithType: ICommandContext
  fullName: Remora.Discord.Commands.Contexts.ICommandContext
- uid: Remora.Discord.Commands.Feedback.Services.FeedbackService
  commentId: T:Remora.Discord.Commands.Feedback.Services.FeedbackService
  parent: Remora.Discord.Commands.Feedback.Services
  href: Remora.Discord.Commands.Feedback.Services.FeedbackService.html
  name: FeedbackService
  nameWithType: FeedbackService
  fullName: Remora.Discord.Commands.Feedback.Services.FeedbackService
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI
  commentId: T:Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI
  parent: Remora.Discord.API.Abstractions.Rest
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI.html
  name: IDiscordRestInteractionAPI
  nameWithType: IDiscordRestInteractionAPI
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestInteractionAPI
- uid: Remora.Discord.Commands.Contexts
  commentId: N:Remora.Discord.Commands.Contexts
  href: Remora.html
  name: Remora.Discord.Commands.Contexts
  nameWithType: Remora.Discord.Commands.Contexts
  fullName: Remora.Discord.Commands.Contexts
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Contexts
    name: Contexts
    href: Remora.Discord.Commands.Contexts.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Contexts
    name: Contexts
    href: Remora.Discord.Commands.Contexts.html
- uid: Remora.Discord.Commands.Feedback.Services
  commentId: N:Remora.Discord.Commands.Feedback.Services
  href: Remora.html
  name: Remora.Discord.Commands.Feedback.Services
  nameWithType: Remora.Discord.Commands.Feedback.Services
  fullName: Remora.Discord.Commands.Feedback.Services
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Feedback
    name: Feedback
    href: Remora.Discord.Commands.Feedback.html
  - name: .
  - uid: Remora.Discord.Commands.Feedback.Services
    name: Services
    href: Remora.Discord.Commands.Feedback.Services.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Feedback
    name: Feedback
    href: Remora.Discord.Commands.Feedback.html
  - name: .
  - uid: Remora.Discord.Commands.Feedback.Services
    name: Services
    href: Remora.Discord.Commands.Feedback.Services.html
- uid: Remora.Discord.API.Abstractions.Rest
  commentId: N:Remora.Discord.API.Abstractions.Rest
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Rest
  nameWithType: Remora.Discord.API.Abstractions.Rest
  fullName: Remora.Discord.API.Abstractions.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendPagesAsync*
  commentId: Overload:Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendPagesAsync
  href: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.html#Remora_Discord_Samples_Interactivity_Commands_InteractiveCommands_SendPagesAsync
  name: SendPagesAsync
  nameWithType: InteractiveCommands.SendPagesAsync
  fullName: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendPagesAsync
- uid: System.Threading.Tasks.Task{Remora.Results.IResult}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.IResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IResult>
  nameWithType: Task<IResult>
  fullName: System.Threading.Tasks.Task<Remora.Results.IResult>
  nameWithType.vb: Task(Of IResult)
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.IResult)
  name.vb: Task(Of IResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.IResult
    name: IResult
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.IResult
    name: IResult
    isExternal: true
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendDropdownAsync*
  commentId: Overload:Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendDropdownAsync
  href: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.html#Remora_Discord_Samples_Interactivity_Commands_InteractiveCommands_SendDropdownAsync
  name: SendDropdownAsync
  nameWithType: InteractiveCommands.SendDropdownAsync
  fullName: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendDropdownAsync
- uid: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendTypedDropdownAsync*
  commentId: Overload:Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendTypedDropdownAsync
  href: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.html#Remora_Discord_Samples_Interactivity_Commands_InteractiveCommands_SendTypedDropdownAsync
  name: SendTypedDropdownAsync
  nameWithType: InteractiveCommands.SendTypedDropdownAsync
  fullName: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendTypedDropdownAsync
- uid: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendMentionableDropdownAsync*
  commentId: Overload:Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendMentionableDropdownAsync
  href: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.html#Remora_Discord_Samples_Interactivity_Commands_InteractiveCommands_SendMentionableDropdownAsync
  name: SendMentionableDropdownAsync
  nameWithType: InteractiveCommands.SendMentionableDropdownAsync
  fullName: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendMentionableDropdownAsync
- uid: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.ShowModalAsync*
  commentId: Overload:Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.ShowModalAsync
  href: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.html#Remora_Discord_Samples_Interactivity_Commands_InteractiveCommands_ShowModalAsync
  name: ShowModalAsync
  nameWithType: InteractiveCommands.ShowModalAsync
  fullName: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.ShowModalAsync
- uid: System.Threading.Tasks.Task{Remora.Results.Result}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result>
  nameWithType: Task<Result>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result>
  nameWithType.vb: Task(Of Result)
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result)
  name.vb: Task(Of Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: )
- uid: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.ShowEphemeralModalAsync*
  commentId: Overload:Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.ShowEphemeralModalAsync
  href: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.html#Remora_Discord_Samples_Interactivity_Commands_InteractiveCommands_ShowEphemeralModalAsync
  name: ShowEphemeralModalAsync
  nameWithType: InteractiveCommands.ShowEphemeralModalAsync
  fullName: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.ShowEphemeralModalAsync
- uid: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendStatefulButtonsAsync*
  commentId: Overload:Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendStatefulButtonsAsync
  href: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.html#Remora_Discord_Samples_Interactivity_Commands_InteractiveCommands_SendStatefulButtonsAsync
  name: SendStatefulButtonsAsync
  nameWithType: InteractiveCommands.SendStatefulButtonsAsync
  fullName: Remora.Discord.Samples.Interactivity.Commands.InteractiveCommands.SendStatefulButtonsAsync
