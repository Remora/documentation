### YamlMime:ManagedReference
items:
- uid: Remora.Discord.API.Abstractions.Objects.IEmbedField
  commentId: T:Remora.Discord.API.Abstractions.Objects.IEmbedField
  id: IEmbedField
  parent: Remora.Discord.API.Abstractions.Objects
  children:
  - Remora.Discord.API.Abstractions.Objects.IEmbedField.IsInline
  - Remora.Discord.API.Abstractions.Objects.IEmbedField.Name
  - Remora.Discord.API.Abstractions.Objects.IEmbedField.Value
  langs:
  - csharp
  - vb
  name: IEmbedField
  nameWithType: IEmbedField
  fullName: Remora.Discord.API.Abstractions.Objects.IEmbedField
  type: Interface
  source:
    id: IEmbedField
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Messages\IEmbedField.cs
    startLine: 30
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Represents a field in an embed.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public interface IEmbedField
    content.vb: >-
      <PublicAPI>

      Public Interface IEmbedField
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Abstractions.Objects.IEmbedField.Name
  commentId: P:Remora.Discord.API.Abstractions.Objects.IEmbedField.Name
  id: Name
  parent: Remora.Discord.API.Abstractions.Objects.IEmbedField
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IEmbedField.Name
  fullName: Remora.Discord.API.Abstractions.Objects.IEmbedField.Name
  type: Property
  source:
    id: Name
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Messages\IEmbedField.cs
    startLine: 36
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the name of the field.
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Remora.Discord.API.Abstractions.Objects.IEmbedField.Name*
- uid: Remora.Discord.API.Abstractions.Objects.IEmbedField.Value
  commentId: P:Remora.Discord.API.Abstractions.Objects.IEmbedField.Value
  id: Value
  parent: Remora.Discord.API.Abstractions.Objects.IEmbedField
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: IEmbedField.Value
  fullName: Remora.Discord.API.Abstractions.Objects.IEmbedField.Value
  type: Property
  source:
    id: Value
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Messages\IEmbedField.cs
    startLine: 41
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the value of the field.
  example: []
  syntax:
    content: string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Value As String
  overload: Remora.Discord.API.Abstractions.Objects.IEmbedField.Value*
- uid: Remora.Discord.API.Abstractions.Objects.IEmbedField.IsInline
  commentId: P:Remora.Discord.API.Abstractions.Objects.IEmbedField.IsInline
  id: IsInline
  parent: Remora.Discord.API.Abstractions.Objects.IEmbedField
  langs:
  - csharp
  - vb
  name: IsInline
  nameWithType: IEmbedField.IsInline
  fullName: Remora.Discord.API.Abstractions.Objects.IEmbedField.IsInline
  type: Property
  source:
    id: IsInline
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Messages\IEmbedField.cs
    startLine: 46
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets a value indicating whether the field should display inline.
  example: []
  syntax:
    content: Optional<bool> IsInline { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Boolean}
    content.vb: ReadOnly Property IsInline As [Optional](Of Boolean)
  overload: Remora.Discord.API.Abstractions.Objects.IEmbedField.IsInline*
references:
- uid: Remora.Discord.API.Abstractions.Objects
  commentId: N:Remora.Discord.API.Abstractions.Objects
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Objects
  nameWithType: Remora.Discord.API.Abstractions.Objects
  fullName: Remora.Discord.API.Abstractions.Objects
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
- uid: Remora.Discord.API.Abstractions.Objects.IEmbedField.Name*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IEmbedField.Name
  href: Remora.Discord.API.Abstractions.Objects.IEmbedField.html#Remora_Discord_API_Abstractions_Objects_IEmbedField_Name
  name: Name
  nameWithType: IEmbedField.Name
  fullName: Remora.Discord.API.Abstractions.Objects.IEmbedField.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.API.Abstractions.Objects.IEmbedField.Value*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IEmbedField.Value
  href: Remora.Discord.API.Abstractions.Objects.IEmbedField.html#Remora_Discord_API_Abstractions_Objects_IEmbedField_Value
  name: Value
  nameWithType: IEmbedField.Value
  fullName: Remora.Discord.API.Abstractions.Objects.IEmbedField.Value
- uid: Remora.Discord.API.Abstractions.Objects.IEmbedField.IsInline*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IEmbedField.IsInline
  href: Remora.Discord.API.Abstractions.Objects.IEmbedField.html#Remora_Discord_API_Abstractions_Objects_IEmbedField_IsInline
  name: IsInline
  nameWithType: IEmbedField.IsInline
  fullName: Remora.Discord.API.Abstractions.Objects.IEmbedField.IsInline
- uid: Remora.Rest.Core.Optional{System.Boolean}
  commentId: T:Remora.Rest.Core.Optional{System.Boolean}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Optional<bool>
  nameWithType: Optional<bool>
  fullName: Remora.Rest.Core.Optional<bool>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: Remora.Rest.Core.Optional(Of Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
