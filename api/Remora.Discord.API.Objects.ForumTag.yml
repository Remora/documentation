### YamlMime:ManagedReference
items:
- uid: Remora.Discord.API.Objects.ForumTag
  commentId: T:Remora.Discord.API.Objects.ForumTag
  id: ForumTag
  parent: Remora.Discord.API.Objects
  children:
  - Remora.Discord.API.Objects.ForumTag.#ctor(Remora.Rest.Core.Snowflake,System.String,System.Boolean,Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String})
  - Remora.Discord.API.Objects.ForumTag.EmojiID
  - Remora.Discord.API.Objects.ForumTag.EmojiName
  - Remora.Discord.API.Objects.ForumTag.ID
  - Remora.Discord.API.Objects.ForumTag.IsModerated
  - Remora.Discord.API.Objects.ForumTag.Name
  langs:
  - csharp
  - vb
  name: ForumTag
  nameWithType: ForumTag
  fullName: Remora.Discord.API.Objects.ForumTag
  type: Class
  source:
    id: ForumTag
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\Objects\Channels\ForumTag.cs
    startLine: 29
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API.Objects
  summary: Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public record ForumTag : IForumTag, IPartialForumTag, IEquatable<ForumTag>
    content.vb: >-
      <PublicAPI>

      Public Class ForumTag Implements IForumTag, IPartialForumTag, IEquatable(Of ForumTag)
  inheritance:
  - System.Object
  implements:
  - Remora.Discord.API.Abstractions.Objects.IForumTag
  - Remora.Discord.API.Abstractions.Objects.IPartialForumTag
  - System.IEquatable{Remora.Discord.API.Objects.ForumTag}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Objects.ForumTag.#ctor(Remora.Rest.Core.Snowflake,System.String,System.Boolean,Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String})
  commentId: M:Remora.Discord.API.Objects.ForumTag.#ctor(Remora.Rest.Core.Snowflake,System.String,System.Boolean,Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String})
  id: '#ctor(Remora.Rest.Core.Snowflake,System.String,System.Boolean,Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String})'
  parent: Remora.Discord.API.Objects.ForumTag
  langs:
  - csharp
  - vb
  name: ForumTag(Snowflake, string, bool, Optional<Snowflake?>, Optional<string?>)
  nameWithType: ForumTag.ForumTag(Snowflake, string, bool, Optional<Snowflake?>, Optional<string?>)
  fullName: Remora.Discord.API.Objects.ForumTag.ForumTag(Remora.Rest.Core.Snowflake, string, bool, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>, Remora.Rest.Core.Optional<string?>)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\Objects\Channels\ForumTag.cs
    startLine: 29
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API.Objects
  example: []
  syntax:
    content: public ForumTag(Snowflake ID, string Name, bool IsModerated, Optional<Snowflake?> EmojiID = default, Optional<string?> EmojiName = default)
    parameters:
    - id: ID
      type: Remora.Rest.Core.Snowflake
    - id: Name
      type: System.String
    - id: IsModerated
      type: System.Boolean
    - id: EmojiID
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}}
    - id: EmojiName
      type: Remora.Rest.Core.Optional{System.String}
    content.vb: Public Sub New(ID As Snowflake, Name As String, IsModerated As Boolean, EmojiID As [Optional](Of Snowflake?) = Nothing, EmojiName As [Optional](Of String) = Nothing)
  overload: Remora.Discord.API.Objects.ForumTag.#ctor*
  nameWithType.vb: ForumTag.New(Snowflake, String, Boolean, Optional(Of Snowflake?), Optional(Of String))
  fullName.vb: Remora.Discord.API.Objects.ForumTag.New(Remora.Rest.Core.Snowflake, String, Boolean, Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?), Remora.Rest.Core.Optional(Of String))
  name.vb: New(Snowflake, String, Boolean, Optional(Of Snowflake?), Optional(Of String))
- uid: Remora.Discord.API.Objects.ForumTag.ID
  commentId: P:Remora.Discord.API.Objects.ForumTag.ID
  id: ID
  parent: Remora.Discord.API.Objects.ForumTag
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: ForumTag.ID
  fullName: Remora.Discord.API.Objects.ForumTag.ID
  type: Property
  source:
    id: ID
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\Objects\Channels\ForumTag.cs
    startLine: 32
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API.Objects
  summary: Gets the ID of the tag.
  example: []
  syntax:
    content: public Snowflake ID { get; init; }
    parameters: []
    return:
      type: Remora.Rest.Core.Snowflake
    content.vb: Public Property ID As Snowflake
  overload: Remora.Discord.API.Objects.ForumTag.ID*
  implements:
  - Remora.Discord.API.Abstractions.Objects.IForumTag.ID
- uid: Remora.Discord.API.Objects.ForumTag.Name
  commentId: P:Remora.Discord.API.Objects.ForumTag.Name
  id: Name
  parent: Remora.Discord.API.Objects.ForumTag
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ForumTag.Name
  fullName: Remora.Discord.API.Objects.ForumTag.Name
  type: Property
  source:
    id: Name
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\Objects\Channels\ForumTag.cs
    startLine: 33
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API.Objects
  summary: Gets the name of the tag.
  example: []
  syntax:
    content: public string Name { get; init; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Remora.Discord.API.Objects.ForumTag.Name*
  implements:
  - Remora.Discord.API.Abstractions.Objects.IForumTag.Name
- uid: Remora.Discord.API.Objects.ForumTag.IsModerated
  commentId: P:Remora.Discord.API.Objects.ForumTag.IsModerated
  id: IsModerated
  parent: Remora.Discord.API.Objects.ForumTag
  langs:
  - csharp
  - vb
  name: IsModerated
  nameWithType: ForumTag.IsModerated
  fullName: Remora.Discord.API.Objects.ForumTag.IsModerated
  type: Property
  source:
    id: IsModerated
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\Objects\Channels\ForumTag.cs
    startLine: 34
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API.Objects
  summary: >-
    Gets a value indicating whether the tag can only be added or removed by someone with the

    <xref href="Remora.Discord.API.Abstractions.Objects.DiscordPermission.ManageThreads" data-throw-if-not-resolved="false"></xref> permission.
  example: []
  syntax:
    content: public bool IsModerated { get; init; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsModerated As Boolean
  overload: Remora.Discord.API.Objects.ForumTag.IsModerated*
  implements:
  - Remora.Discord.API.Abstractions.Objects.IForumTag.IsModerated
- uid: Remora.Discord.API.Objects.ForumTag.EmojiID
  commentId: P:Remora.Discord.API.Objects.ForumTag.EmojiID
  id: EmojiID
  parent: Remora.Discord.API.Objects.ForumTag
  langs:
  - csharp
  - vb
  name: EmojiID
  nameWithType: ForumTag.EmojiID
  fullName: Remora.Discord.API.Objects.ForumTag.EmojiID
  type: Property
  source:
    id: EmojiID
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\Objects\Channels\ForumTag.cs
    startLine: 35
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API.Objects
  summary: Gets the ID of the custom guild emoji to use.
  remarks: >-
    Discord's documentation is somewhat unclear as to whether this field is optional, nullable, or both. As as

    result, we're hedging our bets here.
  example: []
  syntax:
    content: public Optional<Snowflake?> EmojiID { get; init; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}}
    content.vb: Public Property EmojiID As [Optional](Of Snowflake?)
  overload: Remora.Discord.API.Objects.ForumTag.EmojiID*
  implements:
  - Remora.Discord.API.Abstractions.Objects.IForumTag.EmojiID
  - Remora.Discord.API.Abstractions.Objects.IPartialForumTag.EmojiID
- uid: Remora.Discord.API.Objects.ForumTag.EmojiName
  commentId: P:Remora.Discord.API.Objects.ForumTag.EmojiName
  id: EmojiName
  parent: Remora.Discord.API.Objects.ForumTag
  langs:
  - csharp
  - vb
  name: EmojiName
  nameWithType: ForumTag.EmojiName
  fullName: Remora.Discord.API.Objects.ForumTag.EmojiName
  type: Property
  source:
    id: EmojiName
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\Objects\Channels\ForumTag.cs
    startLine: 36
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API.Objects
  summary: Gets the unicode string of the emoji to use.
  remarks: >-
    Discord's documentation is somewhat unclear as to whether this field is optional, nullable, or both. As as

    result, we're hedging our bets here.
  example: []
  syntax:
    content: public Optional<string?> EmojiName { get; init; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.String}
    content.vb: Public Property EmojiName As [Optional](Of String)
  overload: Remora.Discord.API.Objects.ForumTag.EmojiName*
  implements:
  - Remora.Discord.API.Abstractions.Objects.IForumTag.EmojiName
  - Remora.Discord.API.Abstractions.Objects.IPartialForumTag.EmojiName
references:
- uid: Remora.Discord.API.Objects
  commentId: N:Remora.Discord.API.Objects
  href: Remora.html
  name: Remora.Discord.API.Objects
  nameWithType: Remora.Discord.API.Objects
  fullName: Remora.Discord.API.Objects
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Objects
    name: Objects
    href: Remora.Discord.API.Objects.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Objects
    name: Objects
    href: Remora.Discord.API.Objects.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.API.Abstractions.Objects.IForumTag
  commentId: T:Remora.Discord.API.Abstractions.Objects.IForumTag
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IForumTag.html
  name: IForumTag
  nameWithType: IForumTag
  fullName: Remora.Discord.API.Abstractions.Objects.IForumTag
- uid: Remora.Discord.API.Abstractions.Objects.IPartialForumTag
  commentId: T:Remora.Discord.API.Abstractions.Objects.IPartialForumTag
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IPartialForumTag.html
  name: IPartialForumTag
  nameWithType: IPartialForumTag
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialForumTag
- uid: System.IEquatable{Remora.Discord.API.Objects.ForumTag}
  commentId: T:System.IEquatable{Remora.Discord.API.Objects.ForumTag}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<ForumTag>
  nameWithType: IEquatable<ForumTag>
  fullName: System.IEquatable<Remora.Discord.API.Objects.ForumTag>
  nameWithType.vb: IEquatable(Of ForumTag)
  fullName.vb: System.IEquatable(Of Remora.Discord.API.Objects.ForumTag)
  name.vb: IEquatable(Of ForumTag)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Remora.Discord.API.Objects.ForumTag
    name: ForumTag
    href: Remora.Discord.API.Objects.ForumTag.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Objects.ForumTag
    name: ForumTag
    href: Remora.Discord.API.Objects.ForumTag.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.API.Abstractions.Objects
  commentId: N:Remora.Discord.API.Abstractions.Objects
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Objects
  nameWithType: Remora.Discord.API.Abstractions.Objects
  fullName: Remora.Discord.API.Abstractions.Objects
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Remora.Discord.API.Objects.ForumTag.#ctor*
  commentId: Overload:Remora.Discord.API.Objects.ForumTag.#ctor
  href: Remora.Discord.API.Objects.ForumTag.html#Remora_Discord_API_Objects_ForumTag__ctor_Remora_Rest_Core_Snowflake_System_String_System_Boolean_Remora_Rest_Core_Optional_System_Nullable_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_String__
  name: ForumTag
  nameWithType: ForumTag.ForumTag
  fullName: Remora.Discord.API.Objects.ForumTag.ForumTag
  nameWithType.vb: ForumTag.New
  fullName.vb: Remora.Discord.API.Objects.ForumTag.New
  name.vb: New
- uid: Remora.Rest.Core.Snowflake
  commentId: T:Remora.Rest.Core.Snowflake
  parent: Remora.Rest.Core
  isExternal: true
  name: Snowflake
  nameWithType: Snowflake
  fullName: Remora.Rest.Core.Snowflake
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}}
  commentId: T:Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  name: Optional<Snowflake?>
  nameWithType: Optional<Snowflake?>
  fullName: Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>
  nameWithType.vb: Optional(Of Snowflake?)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?)
  name.vb: Optional(Of Snowflake?)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: )
- uid: Remora.Rest.Core.Optional{System.String}
  commentId: T:Remora.Rest.Core.Optional{System.String}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Optional<string>
  nameWithType: Optional<string>
  fullName: Remora.Rest.Core.Optional<string>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Remora.Rest.Core.Optional(Of String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Remora.Discord.API.Objects.ForumTag.ID*
  commentId: Overload:Remora.Discord.API.Objects.ForumTag.ID
  href: Remora.Discord.API.Objects.ForumTag.html#Remora_Discord_API_Objects_ForumTag_ID
  name: ID
  nameWithType: ForumTag.ID
  fullName: Remora.Discord.API.Objects.ForumTag.ID
- uid: Remora.Discord.API.Abstractions.Objects.IForumTag.ID
  commentId: P:Remora.Discord.API.Abstractions.Objects.IForumTag.ID
  parent: Remora.Discord.API.Abstractions.Objects.IForumTag
  href: Remora.Discord.API.Abstractions.Objects.IForumTag.html#Remora_Discord_API_Abstractions_Objects_IForumTag_ID
  name: ID
  nameWithType: IForumTag.ID
  fullName: Remora.Discord.API.Abstractions.Objects.IForumTag.ID
- uid: Remora.Discord.API.Objects.ForumTag.Name*
  commentId: Overload:Remora.Discord.API.Objects.ForumTag.Name
  href: Remora.Discord.API.Objects.ForumTag.html#Remora_Discord_API_Objects_ForumTag_Name
  name: Name
  nameWithType: ForumTag.Name
  fullName: Remora.Discord.API.Objects.ForumTag.Name
- uid: Remora.Discord.API.Abstractions.Objects.IForumTag.Name
  commentId: P:Remora.Discord.API.Abstractions.Objects.IForumTag.Name
  parent: Remora.Discord.API.Abstractions.Objects.IForumTag
  href: Remora.Discord.API.Abstractions.Objects.IForumTag.html#Remora_Discord_API_Abstractions_Objects_IForumTag_Name
  name: Name
  nameWithType: IForumTag.Name
  fullName: Remora.Discord.API.Abstractions.Objects.IForumTag.Name
- uid: Remora.Discord.API.Abstractions.Objects.DiscordPermission.ManageThreads
  commentId: F:Remora.Discord.API.Abstractions.Objects.DiscordPermission.ManageThreads
  href: Remora.Discord.API.Abstractions.Objects.DiscordPermission.html#Remora_Discord_API_Abstractions_Objects_DiscordPermission_ManageThreads
  name: ManageThreads
  nameWithType: DiscordPermission.ManageThreads
  fullName: Remora.Discord.API.Abstractions.Objects.DiscordPermission.ManageThreads
- uid: Remora.Discord.API.Objects.ForumTag.IsModerated*
  commentId: Overload:Remora.Discord.API.Objects.ForumTag.IsModerated
  href: Remora.Discord.API.Objects.ForumTag.html#Remora_Discord_API_Objects_ForumTag_IsModerated
  name: IsModerated
  nameWithType: ForumTag.IsModerated
  fullName: Remora.Discord.API.Objects.ForumTag.IsModerated
- uid: Remora.Discord.API.Abstractions.Objects.IForumTag.IsModerated
  commentId: P:Remora.Discord.API.Abstractions.Objects.IForumTag.IsModerated
  parent: Remora.Discord.API.Abstractions.Objects.IForumTag
  href: Remora.Discord.API.Abstractions.Objects.IForumTag.html#Remora_Discord_API_Abstractions_Objects_IForumTag_IsModerated
  name: IsModerated
  nameWithType: IForumTag.IsModerated
  fullName: Remora.Discord.API.Abstractions.Objects.IForumTag.IsModerated
- uid: Remora.Discord.API.Objects.ForumTag.EmojiID*
  commentId: Overload:Remora.Discord.API.Objects.ForumTag.EmojiID
  href: Remora.Discord.API.Objects.ForumTag.html#Remora_Discord_API_Objects_ForumTag_EmojiID
  name: EmojiID
  nameWithType: ForumTag.EmojiID
  fullName: Remora.Discord.API.Objects.ForumTag.EmojiID
- uid: Remora.Discord.API.Abstractions.Objects.IForumTag.EmojiID
  commentId: P:Remora.Discord.API.Abstractions.Objects.IForumTag.EmojiID
  parent: Remora.Discord.API.Abstractions.Objects.IForumTag
  href: Remora.Discord.API.Abstractions.Objects.IForumTag.html#Remora_Discord_API_Abstractions_Objects_IForumTag_EmojiID
  name: EmojiID
  nameWithType: IForumTag.EmojiID
  fullName: Remora.Discord.API.Abstractions.Objects.IForumTag.EmojiID
- uid: Remora.Discord.API.Abstractions.Objects.IPartialForumTag.EmojiID
  commentId: P:Remora.Discord.API.Abstractions.Objects.IPartialForumTag.EmojiID
  parent: Remora.Discord.API.Abstractions.Objects.IPartialForumTag
  href: Remora.Discord.API.Abstractions.Objects.IPartialForumTag.html#Remora_Discord_API_Abstractions_Objects_IPartialForumTag_EmojiID
  name: EmojiID
  nameWithType: IPartialForumTag.EmojiID
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialForumTag.EmojiID
- uid: Remora.Discord.API.Objects.ForumTag.EmojiName*
  commentId: Overload:Remora.Discord.API.Objects.ForumTag.EmojiName
  href: Remora.Discord.API.Objects.ForumTag.html#Remora_Discord_API_Objects_ForumTag_EmojiName
  name: EmojiName
  nameWithType: ForumTag.EmojiName
  fullName: Remora.Discord.API.Objects.ForumTag.EmojiName
- uid: Remora.Discord.API.Abstractions.Objects.IForumTag.EmojiName
  commentId: P:Remora.Discord.API.Abstractions.Objects.IForumTag.EmojiName
  parent: Remora.Discord.API.Abstractions.Objects.IForumTag
  href: Remora.Discord.API.Abstractions.Objects.IForumTag.html#Remora_Discord_API_Abstractions_Objects_IForumTag_EmojiName
  name: EmojiName
  nameWithType: IForumTag.EmojiName
  fullName: Remora.Discord.API.Abstractions.Objects.IForumTag.EmojiName
- uid: Remora.Discord.API.Abstractions.Objects.IPartialForumTag.EmojiName
  commentId: P:Remora.Discord.API.Abstractions.Objects.IPartialForumTag.EmojiName
  parent: Remora.Discord.API.Abstractions.Objects.IPartialForumTag
  href: Remora.Discord.API.Abstractions.Objects.IPartialForumTag.html#Remora_Discord_API_Abstractions_Objects_IPartialForumTag_EmojiName
  name: EmojiName
  nameWithType: IPartialForumTag.EmojiName
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialForumTag.EmojiName
