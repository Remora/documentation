### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Rest.API.DiscordRestStickerAPI
  commentId: T:Remora.Discord.Rest.API.DiscordRestStickerAPI
  id: DiscordRestStickerAPI
  parent: Remora.Discord.Rest.API
  children:
  - Remora.Discord.Rest.API.DiscordRestStickerAPI.#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  - Remora.Discord.Rest.API.DiscordRestStickerAPI.CreateGuildStickerAsync(Remora.Rest.Core.Snowflake,System.String,System.String,System.String,Remora.Discord.API.Abstractions.Rest.FileData,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestStickerAPI.DeleteGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestStickerAPI.GetGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestStickerAPI.GetStickerAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestStickerAPI.ListGuildStickersAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestStickerAPI.ListNitroStickerPacksAsync(System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestStickerAPI.ModifyGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: DiscordRestStickerAPI
  nameWithType: DiscordRestStickerAPI
  fullName: Remora.Discord.Rest.API.DiscordRestStickerAPI
  type: Class
  source:
    id: DiscordRestStickerAPI
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Stickers\DiscordRestStickerAPI.cs
    startLine: 40
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Represents the Discord Sticker API.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public class DiscordRestStickerAPI : AbstractDiscordRestAPI, IRestCustomizable, IDiscordRestStickerAPI
    content.vb: >-
      <PublicAPI>

      Public Class DiscordRestStickerAPI Inherits AbstractDiscordRestAPI Implements IRestCustomizable, IDiscordRestStickerAPI
  inheritance:
  - System.Object
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI
  implements:
  - Remora.Rest.IRestCustomizable
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI
  inheritedMembers:
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.API.DiscordRestStickerAPI.#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  commentId: M:Remora.Discord.Rest.API.DiscordRestStickerAPI.#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  id: '#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)'
  parent: Remora.Discord.Rest.API.DiscordRestStickerAPI
  langs:
  - csharp
  - vb
  name: DiscordRestStickerAPI(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
  nameWithType: DiscordRestStickerAPI.DiscordRestStickerAPI(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
  fullName: Remora.Discord.Rest.API.DiscordRestStickerAPI.DiscordRestStickerAPI(Remora.Rest.IRestHttpClient, System.Text.Json.JsonSerializerOptions, Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Stickers\DiscordRestStickerAPI.cs
    startLine: 49
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Initializes a new instance of the <xref href="Remora.Discord.Rest.API.DiscordRestStickerAPI" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public DiscordRestStickerAPI(IRestHttpClient restHttpClient, JsonSerializerOptions jsonOptions, ICacheProvider rateLimitCache)
    parameters:
    - id: restHttpClient
      type: Remora.Rest.IRestHttpClient
      description: The Discord HTTP client.
    - id: jsonOptions
      type: System.Text.Json.JsonSerializerOptions
      description: The JSON options.
    - id: rateLimitCache
      type: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
      description: The memory cache used for rate limits.
    content.vb: Public Sub New(restHttpClient As IRestHttpClient, jsonOptions As JsonSerializerOptions, rateLimitCache As ICacheProvider)
  overload: Remora.Discord.Rest.API.DiscordRestStickerAPI.#ctor*
  nameWithType.vb: DiscordRestStickerAPI.New(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestStickerAPI.New(Remora.Rest.IRestHttpClient, System.Text.Json.JsonSerializerOptions, Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  name.vb: New(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
- uid: Remora.Discord.Rest.API.DiscordRestStickerAPI.GetStickerAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestStickerAPI.GetStickerAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: GetStickerAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestStickerAPI
  langs:
  - csharp
  - vb
  name: GetStickerAsync(Snowflake, CancellationToken)
  nameWithType: DiscordRestStickerAPI.GetStickerAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestStickerAPI.GetStickerAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetStickerAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Stickers\DiscordRestStickerAPI.cs
    startLine: 60
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets the sticker for the given ID.
  example: []
  syntax:
    content: public virtual Task<Result<ISticker>> GetStickerAsync(Snowflake stickerID, CancellationToken ct = default)
    parameters:
    - id: stickerID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the sticker.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for the operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.ISticker}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function GetStickerAsync(stickerID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of ISticker))
  overload: Remora.Discord.Rest.API.DiscordRestStickerAPI.GetStickerAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.GetStickerAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestStickerAPI.ListNitroStickerPacksAsync(System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestStickerAPI.ListNitroStickerPacksAsync(System.Threading.CancellationToken)
  id: ListNitroStickerPacksAsync(System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestStickerAPI
  langs:
  - csharp
  - vb
  name: ListNitroStickerPacksAsync(CancellationToken)
  nameWithType: DiscordRestStickerAPI.ListNitroStickerPacksAsync(CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestStickerAPI.ListNitroStickerPacksAsync(System.Threading.CancellationToken)
  type: Method
  source:
    id: ListNitroStickerPacksAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Stickers\DiscordRestStickerAPI.cs
    startLine: 71
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets a list of sticker packs available to Nitro subscribers.
  example: []
  syntax:
    content: public virtual Task<Result<INitroStickerPacks>> ListNitroStickerPacksAsync(CancellationToken ct = default)
    parameters:
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for the operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.INitroStickerPacks}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function ListNitroStickerPacksAsync(ct As CancellationToken = Nothing) As Task(Of Result(Of INitroStickerPacks))
  overload: Remora.Discord.Rest.API.DiscordRestStickerAPI.ListNitroStickerPacksAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ListNitroStickerPacksAsync(System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestStickerAPI.ListGuildStickersAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestStickerAPI.ListGuildStickersAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: ListGuildStickersAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestStickerAPI
  langs:
  - csharp
  - vb
  name: ListGuildStickersAsync(Snowflake, CancellationToken)
  nameWithType: DiscordRestStickerAPI.ListGuildStickersAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestStickerAPI.ListGuildStickersAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: ListGuildStickersAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Stickers\DiscordRestStickerAPI.cs
    startLine: 82
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets a list of stickers belonging to the given guild.
  example: []
  syntax:
    content: public virtual Task<Result<IReadOnlyList<ISticker>>> ListGuildStickersAsync(Snowflake guildID, CancellationToken ct = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for the operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ISticker}}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function ListGuildStickersAsync(guildID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of ISticker)))
  overload: Remora.Discord.Rest.API.DiscordRestStickerAPI.ListGuildStickersAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ListGuildStickersAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestStickerAPI.GetGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestStickerAPI.GetGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: GetGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestStickerAPI
  langs:
  - csharp
  - vb
  name: GetGuildStickerAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: DiscordRestStickerAPI.GetGuildStickerAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestStickerAPI.GetGuildStickerAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetGuildStickerAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Stickers\DiscordRestStickerAPI.cs
    startLine: 97
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets a specific sticker from a guild.
  example: []
  syntax:
    content: public virtual Task<Result<ISticker>> GetGuildStickerAsync(Snowflake guildID, Snowflake stickerID, CancellationToken ct = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: stickerID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the sticker.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for the operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.ISticker}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function GetGuildStickerAsync(guildID As Snowflake, stickerID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of ISticker))
  overload: Remora.Discord.Rest.API.DiscordRestStickerAPI.GetGuildStickerAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.GetGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestStickerAPI.CreateGuildStickerAsync(Remora.Rest.Core.Snowflake,System.String,System.String,System.String,Remora.Discord.API.Abstractions.Rest.FileData,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestStickerAPI.CreateGuildStickerAsync(Remora.Rest.Core.Snowflake,System.String,System.String,System.String,Remora.Discord.API.Abstractions.Rest.FileData,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: CreateGuildStickerAsync(Remora.Rest.Core.Snowflake,System.String,System.String,System.String,Remora.Discord.API.Abstractions.Rest.FileData,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestStickerAPI
  langs:
  - csharp
  - vb
  name: CreateGuildStickerAsync(Snowflake, string, string, string, FileData, Optional<string>, CancellationToken)
  nameWithType: DiscordRestStickerAPI.CreateGuildStickerAsync(Snowflake, string, string, string, FileData, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestStickerAPI.CreateGuildStickerAsync(Remora.Rest.Core.Snowflake, string, string, string, Remora.Discord.API.Abstractions.Rest.FileData, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: CreateGuildStickerAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Stickers\DiscordRestStickerAPI.cs
    startLine: 113
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Creates a new sticker in the given guild.
  remarks: >-
    Any streams passed to this method will be disposed of at the end of the call. If you want to reuse the streams

    afterwards, ensure that what you pass is a copy that the method can take ownership of.
  example: []
  syntax:
    content: public virtual Task<Result<ISticker>> CreateGuildStickerAsync(Snowflake guildID, string name, string description, string tags, FileData file, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: name
      type: System.String
      description: The name of the new sticker.
    - id: description
      type: System.String
      description: The description of the new sticker.
    - id: tags
      type: System.String
      description: The tags related to the expression of the sticker. Typically, one would use a single unicode emoji.
    - id: file
      type: Remora.Discord.API.Abstractions.Rest.FileData
      description: The file contents.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for the operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.ISticker}}
      description: A creation result which may or may not have succeeded.
    content.vb: Public Overridable Function CreateGuildStickerAsync(guildID As Snowflake, name As String, description As String, tags As String, file As FileData, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of ISticker))
  overload: Remora.Discord.Rest.API.DiscordRestStickerAPI.CreateGuildStickerAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.CreateGuildStickerAsync(Remora.Rest.Core.Snowflake,System.String,System.String,System.String,Remora.Discord.API.Abstractions.Rest.FileData,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestStickerAPI.CreateGuildStickerAsync(Snowflake, String, String, String, FileData, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestStickerAPI.CreateGuildStickerAsync(Remora.Rest.Core.Snowflake, String, String, String, Remora.Discord.API.Abstractions.Rest.FileData, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: CreateGuildStickerAsync(Snowflake, String, String, String, FileData, Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestStickerAPI.ModifyGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestStickerAPI.ModifyGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: ModifyGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestStickerAPI
  langs:
  - csharp
  - vb
  name: ModifyGuildStickerAsync(Snowflake, Snowflake, Optional<string>, Optional<string?>, Optional<string>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestStickerAPI.ModifyGuildStickerAsync(Snowflake, Snowflake, Optional<string>, Optional<string?>, Optional<string>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestStickerAPI.ModifyGuildStickerAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<string?>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ModifyGuildStickerAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Stickers\DiscordRestStickerAPI.cs
    startLine: 158
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Modifies the given sticker in the given guild.
  example: []
  syntax:
    content: public virtual Task<Result<ISticker>> ModifyGuildStickerAsync(Snowflake guildID, Snowflake stickerID, Optional<string> name = default, Optional<string?> description = default, Optional<string> tags = default, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: stickerID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the sticker.
    - id: name
      type: Remora.Rest.Core.Optional{System.String}
      description: The new name, if any.
    - id: description
      type: Remora.Rest.Core.Optional{System.String}
      description: The new description, if any.
    - id: tags
      type: Remora.Rest.Core.Optional{System.String}
      description: The new tags, if any.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for the operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.ISticker}}
      description: A modification result which may or may not have succeeded.
    content.vb: Public Overridable Function ModifyGuildStickerAsync(guildID As Snowflake, stickerID As Snowflake, name As [Optional](Of String) = Nothing, description As [Optional](Of String) = Nothing, tags As [Optional](Of String) = Nothing, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of ISticker))
  overload: Remora.Discord.Rest.API.DiscordRestStickerAPI.ModifyGuildStickerAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ModifyGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestStickerAPI.ModifyGuildStickerAsync(Snowflake, Snowflake, Optional(Of String), Optional(Of String), Optional(Of String), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestStickerAPI.ModifyGuildStickerAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyGuildStickerAsync(Snowflake, Snowflake, Optional(Of String), Optional(Of String), Optional(Of String), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestStickerAPI.DeleteGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestStickerAPI.DeleteGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: DeleteGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestStickerAPI
  langs:
  - csharp
  - vb
  name: DeleteGuildStickerAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  nameWithType: DiscordRestStickerAPI.DeleteGuildStickerAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestStickerAPI.DeleteGuildStickerAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteGuildStickerAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Stickers\DiscordRestStickerAPI.cs
    startLine: 208
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Deletes the given sticker in the given guild.
  example: []
  syntax:
    content: public virtual Task<Result> DeleteGuildStickerAsync(Snowflake guildID, Snowflake stickerID, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: stickerID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the sticker.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for the operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A deletion result which may or may not have succeeded.
    content.vb: Public Overridable Function DeleteGuildStickerAsync(guildID As Snowflake, stickerID As Snowflake, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestStickerAPI.DeleteGuildStickerAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.DeleteGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestStickerAPI.DeleteGuildStickerAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestStickerAPI.DeleteGuildStickerAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: DeleteGuildStickerAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
references:
- uid: Remora.Discord.Rest.API
  commentId: N:Remora.Discord.Rest.API
  href: Remora.html
  name: Remora.Discord.Rest.API
  nameWithType: Remora.Discord.Rest.API
  fullName: Remora.Discord.Rest.API
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.API
    name: API
    href: Remora.Discord.Rest.API.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.API
    name: API
    href: Remora.Discord.Rest.API.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  commentId: T:Remora.Discord.Rest.API.AbstractDiscordRestAPI
  parent: Remora.Discord.Rest.API
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html
  name: AbstractDiscordRestAPI
  nameWithType: AbstractDiscordRestAPI
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI
- uid: Remora.Rest.IRestCustomizable
  commentId: T:Remora.Rest.IRestCustomizable
  parent: Remora.Rest
  isExternal: true
  name: IRestCustomizable
  nameWithType: IRestCustomizable
  fullName: Remora.Rest.IRestCustomizable
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI
  commentId: T:Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI
  parent: Remora.Discord.API.Abstractions.Rest
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html
  name: IDiscordRestStickerAPI
  nameWithType: IDiscordRestStickerAPI
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
  commentId: P:Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_RestHttpClient
  name: RestHttpClient
  nameWithType: AbstractDiscordRestAPI.RestHttpClient
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
  commentId: P:Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_JsonOptions
  name: JsonOptions
  nameWithType: AbstractDiscordRestAPI.JsonOptions
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
  commentId: P:Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_RateLimitCache
  name: RateLimitCache
  nameWithType: AbstractDiscordRestAPI.RateLimitCache
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
  commentId: M:Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  isExternal: true
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_WithCustomization_System_Action_Remora_Rest_RestRequestBuilder__
  name: WithCustomization(Action<RestRequestBuilder>)
  nameWithType: AbstractDiscordRestAPI.WithCustomization(Action<RestRequestBuilder>)
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action<Remora.Rest.RestRequestBuilder>)
  nameWithType.vb: AbstractDiscordRestAPI.WithCustomization(Action(Of RestRequestBuilder))
  fullName.vb: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action(Of Remora.Rest.RestRequestBuilder))
  name.vb: WithCustomization(Action(Of RestRequestBuilder))
  spec.csharp:
  - uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
    name: WithCustomization
    href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_WithCustomization_System_Action_Remora_Rest_RestRequestBuilder__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Remora.Rest.RestRequestBuilder
    name: RestRequestBuilder
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
    name: WithCustomization
    href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_WithCustomization_System_Action_Remora_Rest_RestRequestBuilder__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.RestRequestBuilder
    name: RestRequestBuilder
    isExternal: true
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Rest
  commentId: N:Remora.Rest
  isExternal: true
  name: Remora.Rest
  nameWithType: Remora.Rest
  fullName: Remora.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
- uid: Remora.Discord.API.Abstractions.Rest
  commentId: N:Remora.Discord.API.Abstractions.Rest
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Rest
  nameWithType: Remora.Discord.API.Abstractions.Rest
  fullName: Remora.Discord.API.Abstractions.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
- uid: Remora.Discord.Rest.API.DiscordRestStickerAPI
  commentId: T:Remora.Discord.Rest.API.DiscordRestStickerAPI
  href: Remora.Discord.Rest.API.DiscordRestStickerAPI.html
  name: DiscordRestStickerAPI
  nameWithType: DiscordRestStickerAPI
  fullName: Remora.Discord.Rest.API.DiscordRestStickerAPI
- uid: Remora.Discord.Rest.API.DiscordRestStickerAPI.#ctor*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestStickerAPI.#ctor
  href: Remora.Discord.Rest.API.DiscordRestStickerAPI.html#Remora_Discord_Rest_API_DiscordRestStickerAPI__ctor_Remora_Rest_IRestHttpClient_System_Text_Json_JsonSerializerOptions_Remora_Discord_Caching_Abstractions_Services_ICacheProvider_
  name: DiscordRestStickerAPI
  nameWithType: DiscordRestStickerAPI.DiscordRestStickerAPI
  fullName: Remora.Discord.Rest.API.DiscordRestStickerAPI.DiscordRestStickerAPI
  nameWithType.vb: DiscordRestStickerAPI.New
  fullName.vb: Remora.Discord.Rest.API.DiscordRestStickerAPI.New
  name.vb: New
- uid: Remora.Rest.IRestHttpClient
  commentId: T:Remora.Rest.IRestHttpClient
  parent: Remora.Rest
  isExternal: true
  name: IRestHttpClient
  nameWithType: IRestHttpClient
  fullName: Remora.Rest.IRestHttpClient
- uid: System.Text.Json.JsonSerializerOptions
  commentId: T:System.Text.Json.JsonSerializerOptions
  parent: System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions
  name: JsonSerializerOptions
  nameWithType: JsonSerializerOptions
  fullName: System.Text.Json.JsonSerializerOptions
- uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  commentId: T:Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  parent: Remora.Discord.Caching.Abstractions.Services
  href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html
  name: ICacheProvider
  nameWithType: ICacheProvider
  fullName: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
- uid: System.Text.Json
  commentId: N:System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.Json
  nameWithType: System.Text.Json
  fullName: System.Text.Json
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
- uid: Remora.Discord.Caching.Abstractions.Services
  commentId: N:Remora.Discord.Caching.Abstractions.Services
  href: Remora.html
  name: Remora.Discord.Caching.Abstractions.Services
  nameWithType: Remora.Discord.Caching.Abstractions.Services
  fullName: Remora.Discord.Caching.Abstractions.Services
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions
    name: Abstractions
    href: Remora.Discord.Caching.Abstractions.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions.Services
    name: Services
    href: Remora.Discord.Caching.Abstractions.Services.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions
    name: Abstractions
    href: Remora.Discord.Caching.Abstractions.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions.Services
    name: Services
    href: Remora.Discord.Caching.Abstractions.Services.html
- uid: Remora.Discord.Rest.API.DiscordRestStickerAPI.GetStickerAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestStickerAPI.GetStickerAsync
  href: Remora.Discord.Rest.API.DiscordRestStickerAPI.html#Remora_Discord_Rest_API_DiscordRestStickerAPI_GetStickerAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetStickerAsync
  nameWithType: DiscordRestStickerAPI.GetStickerAsync
  fullName: Remora.Discord.Rest.API.DiscordRestStickerAPI.GetStickerAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.GetStickerAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.GetStickerAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_GetStickerAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetStickerAsync(Snowflake, CancellationToken)
  nameWithType: IDiscordRestStickerAPI.GetStickerAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.GetStickerAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.GetStickerAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetStickerAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_GetStickerAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.GetStickerAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetStickerAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_GetStickerAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Snowflake
  commentId: T:Remora.Rest.Core.Snowflake
  parent: Remora.Rest.Core
  isExternal: true
  name: Snowflake
  nameWithType: Snowflake
  fullName: Remora.Rest.Core.Snowflake
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.ISticker}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.ISticker}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<ISticker>>
  nameWithType: Task<Result<ISticker>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.ISticker>>
  nameWithType.vb: Task(Of Result(Of ISticker))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.ISticker))
  name.vb: Task(Of Result(Of ISticker))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ISticker
    name: ISticker
    href: Remora.Discord.API.Abstractions.Objects.ISticker.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ISticker
    name: ISticker
    href: Remora.Discord.API.Abstractions.Objects.ISticker.html
  - name: )
  - name: )
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Rest.API.DiscordRestStickerAPI.ListNitroStickerPacksAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestStickerAPI.ListNitroStickerPacksAsync
  href: Remora.Discord.Rest.API.DiscordRestStickerAPI.html#Remora_Discord_Rest_API_DiscordRestStickerAPI_ListNitroStickerPacksAsync_System_Threading_CancellationToken_
  name: ListNitroStickerPacksAsync
  nameWithType: DiscordRestStickerAPI.ListNitroStickerPacksAsync
  fullName: Remora.Discord.Rest.API.DiscordRestStickerAPI.ListNitroStickerPacksAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ListNitroStickerPacksAsync(System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ListNitroStickerPacksAsync(System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_ListNitroStickerPacksAsync_System_Threading_CancellationToken_
  name: ListNitroStickerPacksAsync(CancellationToken)
  nameWithType: IDiscordRestStickerAPI.ListNitroStickerPacksAsync(CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ListNitroStickerPacksAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ListNitroStickerPacksAsync(System.Threading.CancellationToken)
    name: ListNitroStickerPacksAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_ListNitroStickerPacksAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ListNitroStickerPacksAsync(System.Threading.CancellationToken)
    name: ListNitroStickerPacksAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_ListNitroStickerPacksAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.INitroStickerPacks}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.INitroStickerPacks}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<INitroStickerPacks>>
  nameWithType: Task<Result<INitroStickerPacks>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.INitroStickerPacks>>
  nameWithType.vb: Task(Of Result(Of INitroStickerPacks))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.INitroStickerPacks))
  name.vb: Task(Of Result(Of INitroStickerPacks))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.INitroStickerPacks
    name: INitroStickerPacks
    href: Remora.Discord.API.Abstractions.Objects.INitroStickerPacks.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.INitroStickerPacks
    name: INitroStickerPacks
    href: Remora.Discord.API.Abstractions.Objects.INitroStickerPacks.html
  - name: )
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestStickerAPI.ListGuildStickersAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestStickerAPI.ListGuildStickersAsync
  href: Remora.Discord.Rest.API.DiscordRestStickerAPI.html#Remora_Discord_Rest_API_DiscordRestStickerAPI_ListGuildStickersAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: ListGuildStickersAsync
  nameWithType: DiscordRestStickerAPI.ListGuildStickersAsync
  fullName: Remora.Discord.Rest.API.DiscordRestStickerAPI.ListGuildStickersAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ListGuildStickersAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ListGuildStickersAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_ListGuildStickersAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: ListGuildStickersAsync(Snowflake, CancellationToken)
  nameWithType: IDiscordRestStickerAPI.ListGuildStickersAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ListGuildStickersAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ListGuildStickersAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: ListGuildStickersAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_ListGuildStickersAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ListGuildStickersAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: ListGuildStickersAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_ListGuildStickersAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ISticker}}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ISticker}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IReadOnlyList<ISticker>>>
  nameWithType: Task<Result<IReadOnlyList<ISticker>>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.ISticker>>>
  nameWithType.vb: Task(Of Result(Of IReadOnlyList(Of ISticker)))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.ISticker)))
  name.vb: Task(Of Result(Of IReadOnlyList(Of ISticker)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ISticker
    name: ISticker
    href: Remora.Discord.API.Abstractions.Objects.ISticker.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ISticker
    name: ISticker
    href: Remora.Discord.API.Abstractions.Objects.ISticker.html
  - name: )
  - name: )
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestStickerAPI.GetGuildStickerAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestStickerAPI.GetGuildStickerAsync
  href: Remora.Discord.Rest.API.DiscordRestStickerAPI.html#Remora_Discord_Rest_API_DiscordRestStickerAPI_GetGuildStickerAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetGuildStickerAsync
  nameWithType: DiscordRestStickerAPI.GetGuildStickerAsync
  fullName: Remora.Discord.Rest.API.DiscordRestStickerAPI.GetGuildStickerAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.GetGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.GetGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_GetGuildStickerAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetGuildStickerAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: IDiscordRestStickerAPI.GetGuildStickerAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.GetGuildStickerAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.GetGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetGuildStickerAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_GetGuildStickerAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.GetGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetGuildStickerAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_GetGuildStickerAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestStickerAPI.CreateGuildStickerAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestStickerAPI.CreateGuildStickerAsync
  href: Remora.Discord.Rest.API.DiscordRestStickerAPI.html#Remora_Discord_Rest_API_DiscordRestStickerAPI_CreateGuildStickerAsync_Remora_Rest_Core_Snowflake_System_String_System_String_System_String_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: CreateGuildStickerAsync
  nameWithType: DiscordRestStickerAPI.CreateGuildStickerAsync
  fullName: Remora.Discord.Rest.API.DiscordRestStickerAPI.CreateGuildStickerAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.CreateGuildStickerAsync(Remora.Rest.Core.Snowflake,System.String,System.String,System.String,Remora.Discord.API.Abstractions.Rest.FileData,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.CreateGuildStickerAsync(Remora.Rest.Core.Snowflake,System.String,System.String,System.String,Remora.Discord.API.Abstractions.Rest.FileData,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_CreateGuildStickerAsync_Remora_Rest_Core_Snowflake_System_String_System_String_System_String_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: CreateGuildStickerAsync(Snowflake, string, string, string, FileData, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestStickerAPI.CreateGuildStickerAsync(Snowflake, string, string, string, FileData, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.CreateGuildStickerAsync(Remora.Rest.Core.Snowflake, string, string, string, Remora.Discord.API.Abstractions.Rest.FileData, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestStickerAPI.CreateGuildStickerAsync(Snowflake, String, String, String, FileData, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.CreateGuildStickerAsync(Remora.Rest.Core.Snowflake, String, String, String, Remora.Discord.API.Abstractions.Rest.FileData, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: CreateGuildStickerAsync(Snowflake, String, String, String, FileData, Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.CreateGuildStickerAsync(Remora.Rest.Core.Snowflake,System.String,System.String,System.String,Remora.Discord.API.Abstractions.Rest.FileData,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: CreateGuildStickerAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_CreateGuildStickerAsync_Remora_Rest_Core_Snowflake_System_String_System_String_System_String_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.CreateGuildStickerAsync(Remora.Rest.Core.Snowflake,System.String,System.String,System.String,Remora.Discord.API.Abstractions.Rest.FileData,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: CreateGuildStickerAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_CreateGuildStickerAsync_Remora_Rest_Core_Snowflake_System_String_System_String_System_String_Remora_Discord_API_Abstractions_Rest_FileData_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Rest.FileData
    name: FileData
    href: Remora.Discord.API.Abstractions.Rest.FileData.html
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Remora.Discord.API.Abstractions.Rest.FileData
  commentId: T:Remora.Discord.API.Abstractions.Rest.FileData
  parent: Remora.Discord.API.Abstractions.Rest
  href: Remora.Discord.API.Abstractions.Rest.FileData.html
  name: FileData
  nameWithType: FileData
  fullName: Remora.Discord.API.Abstractions.Rest.FileData
- uid: Remora.Rest.Core.Optional{System.String}
  commentId: T:Remora.Rest.Core.Optional{System.String}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Optional<string>
  nameWithType: Optional<string>
  fullName: Remora.Rest.Core.Optional<string>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Remora.Rest.Core.Optional(Of String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestStickerAPI.ModifyGuildStickerAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestStickerAPI.ModifyGuildStickerAsync
  href: Remora.Discord.Rest.API.DiscordRestStickerAPI.html#Remora_Discord_Rest_API_DiscordRestStickerAPI_ModifyGuildStickerAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyGuildStickerAsync
  nameWithType: DiscordRestStickerAPI.ModifyGuildStickerAsync
  fullName: Remora.Discord.Rest.API.DiscordRestStickerAPI.ModifyGuildStickerAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ModifyGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ModifyGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_ModifyGuildStickerAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyGuildStickerAsync(Snowflake, Snowflake, Optional<string>, Optional<string>, Optional<string>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestStickerAPI.ModifyGuildStickerAsync(Snowflake, Snowflake, Optional<string>, Optional<string>, Optional<string>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ModifyGuildStickerAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestStickerAPI.ModifyGuildStickerAsync(Snowflake, Snowflake, Optional(Of String), Optional(Of String), Optional(Of String), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ModifyGuildStickerAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyGuildStickerAsync(Snowflake, Snowflake, Optional(Of String), Optional(Of String), Optional(Of String), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ModifyGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyGuildStickerAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_ModifyGuildStickerAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.ModifyGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyGuildStickerAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_ModifyGuildStickerAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestStickerAPI.DeleteGuildStickerAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestStickerAPI.DeleteGuildStickerAsync
  href: Remora.Discord.Rest.API.DiscordRestStickerAPI.html#Remora_Discord_Rest_API_DiscordRestStickerAPI_DeleteGuildStickerAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: DeleteGuildStickerAsync
  nameWithType: DiscordRestStickerAPI.DeleteGuildStickerAsync
  fullName: Remora.Discord.Rest.API.DiscordRestStickerAPI.DeleteGuildStickerAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.DeleteGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.DeleteGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_DeleteGuildStickerAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: DeleteGuildStickerAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestStickerAPI.DeleteGuildStickerAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.DeleteGuildStickerAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestStickerAPI.DeleteGuildStickerAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.DeleteGuildStickerAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: DeleteGuildStickerAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.DeleteGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: DeleteGuildStickerAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_DeleteGuildStickerAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.DeleteGuildStickerAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: DeleteGuildStickerAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestStickerAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestStickerAPI_DeleteGuildStickerAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result>
  nameWithType: Task<Result>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result>
  nameWithType.vb: Task(Of Result)
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result)
  name.vb: Task(Of Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: )
