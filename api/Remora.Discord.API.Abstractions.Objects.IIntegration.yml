### YamlMime:ManagedReference
items:
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration
  commentId: T:Remora.Discord.API.Abstractions.Objects.IIntegration
  id: IIntegration
  parent: Remora.Discord.API.Abstractions.Objects
  children:
  - Remora.Discord.API.Abstractions.Objects.IIntegration.Account
  - Remora.Discord.API.Abstractions.Objects.IIntegration.Application
  - Remora.Discord.API.Abstractions.Objects.IIntegration.EnableEmoticons
  - Remora.Discord.API.Abstractions.Objects.IIntegration.ExpireBehaviour
  - Remora.Discord.API.Abstractions.Objects.IIntegration.ExpireGracePeriod
  - Remora.Discord.API.Abstractions.Objects.IIntegration.ID
  - Remora.Discord.API.Abstractions.Objects.IIntegration.IsEnabled
  - Remora.Discord.API.Abstractions.Objects.IIntegration.IsRevoked
  - Remora.Discord.API.Abstractions.Objects.IIntegration.IsSyncing
  - Remora.Discord.API.Abstractions.Objects.IIntegration.Name
  - Remora.Discord.API.Abstractions.Objects.IIntegration.RoleID
  - Remora.Discord.API.Abstractions.Objects.IIntegration.Scopes
  - Remora.Discord.API.Abstractions.Objects.IIntegration.SubscriberCount
  - Remora.Discord.API.Abstractions.Objects.IIntegration.SyncedAt
  - Remora.Discord.API.Abstractions.Objects.IIntegration.Type
  - Remora.Discord.API.Abstractions.Objects.IIntegration.User
  langs:
  - csharp
  - vb
  name: IIntegration
  nameWithType: IIntegration
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration
  type: Interface
  source:
    id: IIntegration
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Integrations\IIntegration.cs
    startLine: 32
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Represents an integration object.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public interface IIntegration : IPartialIntegration
    content.vb: >-
      <PublicAPI>

      Public Interface IIntegration Inherits IPartialIntegration
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.ID
  commentId: P:Remora.Discord.API.Abstractions.Objects.IIntegration.ID
  id: ID
  parent: Remora.Discord.API.Abstractions.Objects.IIntegration
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: IIntegration.ID
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.ID
  type: Property
  source:
    id: ID
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Integrations\IIntegration.cs
    startLine: 38
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the ID of the integration.
  example: []
  syntax:
    content: Snowflake ID { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Snowflake
    content.vb: ReadOnly Property ID As Snowflake
  overload: Remora.Discord.API.Abstractions.Objects.IIntegration.ID*
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.Name
  commentId: P:Remora.Discord.API.Abstractions.Objects.IIntegration.Name
  id: Name
  parent: Remora.Discord.API.Abstractions.Objects.IIntegration
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IIntegration.Name
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.Name
  type: Property
  source:
    id: Name
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Integrations\IIntegration.cs
    startLine: 43
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the name of the integration.
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Remora.Discord.API.Abstractions.Objects.IIntegration.Name*
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.Type
  commentId: P:Remora.Discord.API.Abstractions.Objects.IIntegration.Type
  id: Type
  parent: Remora.Discord.API.Abstractions.Objects.IIntegration
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: IIntegration.Type
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.Type
  type: Property
  source:
    id: Type
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Integrations\IIntegration.cs
    startLine: 48
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the type of integration.
  example: []
  syntax:
    content: string Type { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Type As String
  overload: Remora.Discord.API.Abstractions.Objects.IIntegration.Type*
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.IsEnabled
  commentId: P:Remora.Discord.API.Abstractions.Objects.IIntegration.IsEnabled
  id: IsEnabled
  parent: Remora.Discord.API.Abstractions.Objects.IIntegration
  langs:
  - csharp
  - vb
  name: IsEnabled
  nameWithType: IIntegration.IsEnabled
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.IsEnabled
  type: Property
  source:
    id: IsEnabled
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Integrations\IIntegration.cs
    startLine: 53
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets a value indicating whether the integration is enabled.
  example: []
  syntax:
    content: bool IsEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsEnabled As Boolean
  overload: Remora.Discord.API.Abstractions.Objects.IIntegration.IsEnabled*
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.IsSyncing
  commentId: P:Remora.Discord.API.Abstractions.Objects.IIntegration.IsSyncing
  id: IsSyncing
  parent: Remora.Discord.API.Abstractions.Objects.IIntegration
  langs:
  - csharp
  - vb
  name: IsSyncing
  nameWithType: IIntegration.IsSyncing
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.IsSyncing
  type: Property
  source:
    id: IsSyncing
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Integrations\IIntegration.cs
    startLine: 58
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets a value indicating whether the integration is syncing.
  example: []
  syntax:
    content: Optional<bool> IsSyncing { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Boolean}
    content.vb: ReadOnly Property IsSyncing As [Optional](Of Boolean)
  overload: Remora.Discord.API.Abstractions.Objects.IIntegration.IsSyncing*
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.RoleID
  commentId: P:Remora.Discord.API.Abstractions.Objects.IIntegration.RoleID
  id: RoleID
  parent: Remora.Discord.API.Abstractions.Objects.IIntegration
  langs:
  - csharp
  - vb
  name: RoleID
  nameWithType: IIntegration.RoleID
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.RoleID
  type: Property
  source:
    id: RoleID
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Integrations\IIntegration.cs
    startLine: 63
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the ID of the role that this integration uses for subscribers.
  example: []
  syntax:
    content: Optional<Snowflake> RoleID { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
    content.vb: ReadOnly Property RoleID As [Optional](Of Snowflake)
  overload: Remora.Discord.API.Abstractions.Objects.IIntegration.RoleID*
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.EnableEmoticons
  commentId: P:Remora.Discord.API.Abstractions.Objects.IIntegration.EnableEmoticons
  id: EnableEmoticons
  parent: Remora.Discord.API.Abstractions.Objects.IIntegration
  langs:
  - csharp
  - vb
  name: EnableEmoticons
  nameWithType: IIntegration.EnableEmoticons
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.EnableEmoticons
  type: Property
  source:
    id: EnableEmoticons
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Integrations\IIntegration.cs
    startLine: 68
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets a value indicating whether emoticons should be synced for this integration (twitch only, currently).
  example: []
  syntax:
    content: Optional<bool> EnableEmoticons { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Boolean}
    content.vb: ReadOnly Property EnableEmoticons As [Optional](Of Boolean)
  overload: Remora.Discord.API.Abstractions.Objects.IIntegration.EnableEmoticons*
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.ExpireBehaviour
  commentId: P:Remora.Discord.API.Abstractions.Objects.IIntegration.ExpireBehaviour
  id: ExpireBehaviour
  parent: Remora.Discord.API.Abstractions.Objects.IIntegration
  langs:
  - csharp
  - vb
  name: ExpireBehaviour
  nameWithType: IIntegration.ExpireBehaviour
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.ExpireBehaviour
  type: Property
  source:
    id: ExpireBehaviour
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Integrations\IIntegration.cs
    startLine: 73
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the behaviour of expiring subscribers.
  example: []
  syntax:
    content: Optional<IntegrationExpireBehaviour> ExpireBehaviour { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IntegrationExpireBehaviour}
    content.vb: ReadOnly Property ExpireBehaviour As [Optional](Of IntegrationExpireBehaviour)
  overload: Remora.Discord.API.Abstractions.Objects.IIntegration.ExpireBehaviour*
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.ExpireGracePeriod
  commentId: P:Remora.Discord.API.Abstractions.Objects.IIntegration.ExpireGracePeriod
  id: ExpireGracePeriod
  parent: Remora.Discord.API.Abstractions.Objects.IIntegration
  langs:
  - csharp
  - vb
  name: ExpireGracePeriod
  nameWithType: IIntegration.ExpireGracePeriod
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.ExpireGracePeriod
  type: Property
  source:
    id: ExpireGracePeriod
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Integrations\IIntegration.cs
    startLine: 78
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the grace period (in days) before expiring subscribers.
  example: []
  syntax:
    content: Optional<TimeSpan> ExpireGracePeriod { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.TimeSpan}
    content.vb: ReadOnly Property ExpireGracePeriod As [Optional](Of TimeSpan)
  overload: Remora.Discord.API.Abstractions.Objects.IIntegration.ExpireGracePeriod*
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.User
  commentId: P:Remora.Discord.API.Abstractions.Objects.IIntegration.User
  id: User
  parent: Remora.Discord.API.Abstractions.Objects.IIntegration
  langs:
  - csharp
  - vb
  name: User
  nameWithType: IIntegration.User
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.User
  type: Property
  source:
    id: User
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Integrations\IIntegration.cs
    startLine: 83
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the user for this integration.
  example: []
  syntax:
    content: Optional<IUser> User { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IUser}
    content.vb: ReadOnly Property User As [Optional](Of IUser)
  overload: Remora.Discord.API.Abstractions.Objects.IIntegration.User*
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.Account
  commentId: P:Remora.Discord.API.Abstractions.Objects.IIntegration.Account
  id: Account
  parent: Remora.Discord.API.Abstractions.Objects.IIntegration
  langs:
  - csharp
  - vb
  name: Account
  nameWithType: IIntegration.Account
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.Account
  type: Property
  source:
    id: Account
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Integrations\IIntegration.cs
    startLine: 88
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the integration's account information.
  example: []
  syntax:
    content: IIntegrationAccount Account { get; }
    parameters: []
    return:
      type: Remora.Discord.API.Abstractions.Objects.IIntegrationAccount
    content.vb: ReadOnly Property Account As IIntegrationAccount
  overload: Remora.Discord.API.Abstractions.Objects.IIntegration.Account*
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.SyncedAt
  commentId: P:Remora.Discord.API.Abstractions.Objects.IIntegration.SyncedAt
  id: SyncedAt
  parent: Remora.Discord.API.Abstractions.Objects.IIntegration
  langs:
  - csharp
  - vb
  name: SyncedAt
  nameWithType: IIntegration.SyncedAt
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.SyncedAt
  type: Property
  source:
    id: SyncedAt
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Integrations\IIntegration.cs
    startLine: 93
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the time when the integration was last synced.
  example: []
  syntax:
    content: Optional<DateTimeOffset> SyncedAt { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.DateTimeOffset}
    content.vb: ReadOnly Property SyncedAt As [Optional](Of DateTimeOffset)
  overload: Remora.Discord.API.Abstractions.Objects.IIntegration.SyncedAt*
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.SubscriberCount
  commentId: P:Remora.Discord.API.Abstractions.Objects.IIntegration.SubscriberCount
  id: SubscriberCount
  parent: Remora.Discord.API.Abstractions.Objects.IIntegration
  langs:
  - csharp
  - vb
  name: SubscriberCount
  nameWithType: IIntegration.SubscriberCount
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.SubscriberCount
  type: Property
  source:
    id: SubscriberCount
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Integrations\IIntegration.cs
    startLine: 98
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the number of subscribers this integration has.
  example: []
  syntax:
    content: Optional<int> SubscriberCount { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Int32}
    content.vb: ReadOnly Property SubscriberCount As [Optional](Of Integer)
  overload: Remora.Discord.API.Abstractions.Objects.IIntegration.SubscriberCount*
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.IsRevoked
  commentId: P:Remora.Discord.API.Abstractions.Objects.IIntegration.IsRevoked
  id: IsRevoked
  parent: Remora.Discord.API.Abstractions.Objects.IIntegration
  langs:
  - csharp
  - vb
  name: IsRevoked
  nameWithType: IIntegration.IsRevoked
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.IsRevoked
  type: Property
  source:
    id: IsRevoked
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Integrations\IIntegration.cs
    startLine: 103
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets a value indicating whether this integration has been revoked.
  example: []
  syntax:
    content: Optional<bool> IsRevoked { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Boolean}
    content.vb: ReadOnly Property IsRevoked As [Optional](Of Boolean)
  overload: Remora.Discord.API.Abstractions.Objects.IIntegration.IsRevoked*
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.Application
  commentId: P:Remora.Discord.API.Abstractions.Objects.IIntegration.Application
  id: Application
  parent: Remora.Discord.API.Abstractions.Objects.IIntegration
  langs:
  - csharp
  - vb
  name: Application
  nameWithType: IIntegration.Application
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.Application
  type: Property
  source:
    id: Application
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Integrations\IIntegration.cs
    startLine: 108
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the bot/OAuth2 application for Discord integrations.
  example: []
  syntax:
    content: Optional<IIntegrationApplication> Application { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IIntegrationApplication}
    content.vb: ReadOnly Property Application As [Optional](Of IIntegrationApplication)
  overload: Remora.Discord.API.Abstractions.Objects.IIntegration.Application*
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.Scopes
  commentId: P:Remora.Discord.API.Abstractions.Objects.IIntegration.Scopes
  id: Scopes
  parent: Remora.Discord.API.Abstractions.Objects.IIntegration
  langs:
  - csharp
  - vb
  name: Scopes
  nameWithType: IIntegration.Scopes
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.Scopes
  type: Property
  source:
    id: Scopes
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Integrations\IIntegration.cs
    startLine: 113
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the OAuth2 scopes the integration has been authorized for.
  example: []
  syntax:
    content: Optional<IReadOnlyList<string>> Scopes { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{System.String}}
    content.vb: ReadOnly Property Scopes As [Optional](Of IReadOnlyList(Of String))
  overload: Remora.Discord.API.Abstractions.Objects.IIntegration.Scopes*
references:
- uid: Remora.Discord.API.Abstractions.Objects
  commentId: N:Remora.Discord.API.Abstractions.Objects
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Objects
  nameWithType: Remora.Discord.API.Abstractions.Objects
  fullName: Remora.Discord.API.Abstractions.Objects
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.ID*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IIntegration.ID
  href: Remora.Discord.API.Abstractions.Objects.IIntegration.html#Remora_Discord_API_Abstractions_Objects_IIntegration_ID
  name: ID
  nameWithType: IIntegration.ID
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.ID
- uid: Remora.Rest.Core.Snowflake
  commentId: T:Remora.Rest.Core.Snowflake
  parent: Remora.Rest.Core
  isExternal: true
  name: Snowflake
  nameWithType: Snowflake
  fullName: Remora.Rest.Core.Snowflake
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.Name*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IIntegration.Name
  href: Remora.Discord.API.Abstractions.Objects.IIntegration.html#Remora_Discord_API_Abstractions_Objects_IIntegration_Name
  name: Name
  nameWithType: IIntegration.Name
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.Type*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IIntegration.Type
  href: Remora.Discord.API.Abstractions.Objects.IIntegration.html#Remora_Discord_API_Abstractions_Objects_IIntegration_Type
  name: Type
  nameWithType: IIntegration.Type
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.Type
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.IsEnabled*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IIntegration.IsEnabled
  href: Remora.Discord.API.Abstractions.Objects.IIntegration.html#Remora_Discord_API_Abstractions_Objects_IIntegration_IsEnabled
  name: IsEnabled
  nameWithType: IIntegration.IsEnabled
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.IsEnabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.IsSyncing*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IIntegration.IsSyncing
  href: Remora.Discord.API.Abstractions.Objects.IIntegration.html#Remora_Discord_API_Abstractions_Objects_IIntegration_IsSyncing
  name: IsSyncing
  nameWithType: IIntegration.IsSyncing
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.IsSyncing
- uid: Remora.Rest.Core.Optional{System.Boolean}
  commentId: T:Remora.Rest.Core.Optional{System.Boolean}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Optional<bool>
  nameWithType: Optional<bool>
  fullName: Remora.Rest.Core.Optional<bool>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: Remora.Rest.Core.Optional(Of Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.RoleID*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IIntegration.RoleID
  href: Remora.Discord.API.Abstractions.Objects.IIntegration.html#Remora_Discord_API_Abstractions_Objects_IIntegration_RoleID
  name: RoleID
  nameWithType: IIntegration.RoleID
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.RoleID
- uid: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  commentId: T:Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  name: Optional<Snowflake>
  nameWithType: Optional<Snowflake>
  fullName: Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>
  nameWithType.vb: Optional(Of Snowflake)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake)
  name.vb: Optional(Of Snowflake)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.EnableEmoticons*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IIntegration.EnableEmoticons
  href: Remora.Discord.API.Abstractions.Objects.IIntegration.html#Remora_Discord_API_Abstractions_Objects_IIntegration_EnableEmoticons
  name: EnableEmoticons
  nameWithType: IIntegration.EnableEmoticons
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.EnableEmoticons
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.ExpireBehaviour*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IIntegration.ExpireBehaviour
  href: Remora.Discord.API.Abstractions.Objects.IIntegration.html#Remora_Discord_API_Abstractions_Objects_IIntegration_ExpireBehaviour
  name: ExpireBehaviour
  nameWithType: IIntegration.ExpireBehaviour
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.ExpireBehaviour
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IntegrationExpireBehaviour}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IntegrationExpireBehaviour}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.IntegrationExpireBehaviour.html
  name: Optional<IntegrationExpireBehaviour>
  nameWithType: Optional<IntegrationExpireBehaviour>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IntegrationExpireBehaviour>
  nameWithType.vb: Optional(Of IntegrationExpireBehaviour)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IntegrationExpireBehaviour)
  name.vb: Optional(Of IntegrationExpireBehaviour)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IntegrationExpireBehaviour
    name: IntegrationExpireBehaviour
    href: Remora.Discord.API.Abstractions.Objects.IntegrationExpireBehaviour.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IntegrationExpireBehaviour
    name: IntegrationExpireBehaviour
    href: Remora.Discord.API.Abstractions.Objects.IntegrationExpireBehaviour.html
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.ExpireGracePeriod*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IIntegration.ExpireGracePeriod
  href: Remora.Discord.API.Abstractions.Objects.IIntegration.html#Remora_Discord_API_Abstractions_Objects_IIntegration_ExpireGracePeriod
  name: ExpireGracePeriod
  nameWithType: IIntegration.ExpireGracePeriod
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.ExpireGracePeriod
- uid: Remora.Rest.Core.Optional{System.TimeSpan}
  commentId: T:Remora.Rest.Core.Optional{System.TimeSpan}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: Optional<TimeSpan>
  nameWithType: Optional<TimeSpan>
  fullName: Remora.Rest.Core.Optional<System.TimeSpan>
  nameWithType.vb: Optional(Of TimeSpan)
  fullName.vb: Remora.Rest.Core.Optional(Of System.TimeSpan)
  name.vb: Optional(Of TimeSpan)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.User*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IIntegration.User
  href: Remora.Discord.API.Abstractions.Objects.IIntegration.html#Remora_Discord_API_Abstractions_Objects_IIntegration_User
  name: User
  nameWithType: IIntegration.User
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.User
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IUser}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IUser}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.IUser.html
  name: Optional<IUser>
  nameWithType: Optional<IUser>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IUser>
  nameWithType.vb: Optional(Of IUser)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IUser)
  name.vb: Optional(Of IUser)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IUser
    name: IUser
    href: Remora.Discord.API.Abstractions.Objects.IUser.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IUser
    name: IUser
    href: Remora.Discord.API.Abstractions.Objects.IUser.html
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.Account*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IIntegration.Account
  href: Remora.Discord.API.Abstractions.Objects.IIntegration.html#Remora_Discord_API_Abstractions_Objects_IIntegration_Account
  name: Account
  nameWithType: IIntegration.Account
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.Account
- uid: Remora.Discord.API.Abstractions.Objects.IIntegrationAccount
  commentId: T:Remora.Discord.API.Abstractions.Objects.IIntegrationAccount
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.IIntegrationAccount.html
  name: IIntegrationAccount
  nameWithType: IIntegrationAccount
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegrationAccount
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.SyncedAt*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IIntegration.SyncedAt
  href: Remora.Discord.API.Abstractions.Objects.IIntegration.html#Remora_Discord_API_Abstractions_Objects_IIntegration_SyncedAt
  name: SyncedAt
  nameWithType: IIntegration.SyncedAt
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.SyncedAt
- uid: Remora.Rest.Core.Optional{System.DateTimeOffset}
  commentId: T:Remora.Rest.Core.Optional{System.DateTimeOffset}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  name: Optional<DateTimeOffset>
  nameWithType: Optional<DateTimeOffset>
  fullName: Remora.Rest.Core.Optional<System.DateTimeOffset>
  nameWithType.vb: Optional(Of DateTimeOffset)
  fullName.vb: Remora.Rest.Core.Optional(Of System.DateTimeOffset)
  name.vb: Optional(Of DateTimeOffset)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetimeoffset
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.SubscriberCount*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IIntegration.SubscriberCount
  href: Remora.Discord.API.Abstractions.Objects.IIntegration.html#Remora_Discord_API_Abstractions_Objects_IIntegration_SubscriberCount
  name: SubscriberCount
  nameWithType: IIntegration.SubscriberCount
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.SubscriberCount
- uid: Remora.Rest.Core.Optional{System.Int32}
  commentId: T:Remora.Rest.Core.Optional{System.Int32}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Optional<int>
  nameWithType: Optional<int>
  fullName: Remora.Rest.Core.Optional<int>
  nameWithType.vb: Optional(Of Integer)
  fullName.vb: Remora.Rest.Core.Optional(Of Integer)
  name.vb: Optional(Of Integer)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.IsRevoked*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IIntegration.IsRevoked
  href: Remora.Discord.API.Abstractions.Objects.IIntegration.html#Remora_Discord_API_Abstractions_Objects_IIntegration_IsRevoked
  name: IsRevoked
  nameWithType: IIntegration.IsRevoked
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.IsRevoked
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.Application*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IIntegration.Application
  href: Remora.Discord.API.Abstractions.Objects.IIntegration.html#Remora_Discord_API_Abstractions_Objects_IIntegration_Application
  name: Application
  nameWithType: IIntegration.Application
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.Application
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IIntegrationApplication}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IIntegrationApplication}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.IIntegrationApplication.html
  name: Optional<IIntegrationApplication>
  nameWithType: Optional<IIntegrationApplication>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IIntegrationApplication>
  nameWithType.vb: Optional(Of IIntegrationApplication)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IIntegrationApplication)
  name.vb: Optional(Of IIntegrationApplication)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IIntegrationApplication
    name: IIntegrationApplication
    href: Remora.Discord.API.Abstractions.Objects.IIntegrationApplication.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IIntegrationApplication
    name: IIntegrationApplication
    href: Remora.Discord.API.Abstractions.Objects.IIntegrationApplication.html
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.IIntegration.Scopes*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IIntegration.Scopes
  href: Remora.Discord.API.Abstractions.Objects.IIntegration.html#Remora_Discord_API_Abstractions_Objects_IIntegration_Scopes
  name: Scopes
  nameWithType: IIntegration.Scopes
  fullName: Remora.Discord.API.Abstractions.Objects.IIntegration.Scopes
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{System.String}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{System.String}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<string>>
  nameWithType: Optional<IReadOnlyList<string>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<string>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of String))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of String))
  name.vb: Optional(Of IReadOnlyList(Of String))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
