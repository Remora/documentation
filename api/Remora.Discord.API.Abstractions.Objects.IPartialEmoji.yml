### YamlMime:ManagedReference
items:
- uid: Remora.Discord.API.Abstractions.Objects.IPartialEmoji
  commentId: T:Remora.Discord.API.Abstractions.Objects.IPartialEmoji
  id: IPartialEmoji
  parent: Remora.Discord.API.Abstractions.Objects
  children:
  - Remora.Discord.API.Abstractions.Objects.IPartialEmoji.ID
  - Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsAnimated
  - Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsAvailable
  - Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsManaged
  - Remora.Discord.API.Abstractions.Objects.IPartialEmoji.Name
  - Remora.Discord.API.Abstractions.Objects.IPartialEmoji.RequireColons
  - Remora.Discord.API.Abstractions.Objects.IPartialEmoji.Roles
  - Remora.Discord.API.Abstractions.Objects.IPartialEmoji.User
  langs:
  - csharp
  - vb
  name: IPartialEmoji
  nameWithType: IPartialEmoji
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialEmoji
  type: Interface
  source:
    id: IPartialEmoji
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Emojis\IPartialEmoji.cs
    startLine: 31
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Represents a partial emoji.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public interface IPartialEmoji
    content.vb: >-
      <PublicAPI>

      Public Interface IPartialEmoji
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.ID
  commentId: P:Remora.Discord.API.Abstractions.Objects.IPartialEmoji.ID
  id: ID
  parent: Remora.Discord.API.Abstractions.Objects.IPartialEmoji
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: IPartialEmoji.ID
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.ID
  type: Property
  source:
    id: ID
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Emojis\IPartialEmoji.cs
    startLine: 35
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the ID of the emoji.
  example: []
  syntax:
    content: Optional<Snowflake?> ID { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}}
    content.vb: ReadOnly Property ID As [Optional](Of Snowflake?)
  overload: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.ID*
- uid: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.Name
  commentId: P:Remora.Discord.API.Abstractions.Objects.IPartialEmoji.Name
  id: Name
  parent: Remora.Discord.API.Abstractions.Objects.IPartialEmoji
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: IPartialEmoji.Name
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.Name
  type: Property
  source:
    id: Name
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Emojis\IPartialEmoji.cs
    startLine: 38
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the name of the emoji.
  example: []
  syntax:
    content: Optional<string?> Name { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.String}
    content.vb: ReadOnly Property Name As [Optional](Of String)
  overload: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.Name*
- uid: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.Roles
  commentId: P:Remora.Discord.API.Abstractions.Objects.IPartialEmoji.Roles
  id: Roles
  parent: Remora.Discord.API.Abstractions.Objects.IPartialEmoji
  langs:
  - csharp
  - vb
  name: Roles
  nameWithType: IPartialEmoji.Roles
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.Roles
  type: Property
  source:
    id: Roles
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Emojis\IPartialEmoji.cs
    startLine: 41
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets a list of roles this emoji is whitelisted to.
  example: []
  syntax:
    content: Optional<IReadOnlyList<Snowflake>> Roles { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
    content.vb: ReadOnly Property Roles As [Optional](Of IReadOnlyList(Of Snowflake))
  overload: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.Roles*
- uid: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.User
  commentId: P:Remora.Discord.API.Abstractions.Objects.IPartialEmoji.User
  id: User
  parent: Remora.Discord.API.Abstractions.Objects.IPartialEmoji
  langs:
  - csharp
  - vb
  name: User
  nameWithType: IPartialEmoji.User
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.User
  type: Property
  source:
    id: User
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Emojis\IPartialEmoji.cs
    startLine: 44
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the user that created this emoji.
  example: []
  syntax:
    content: Optional<IUser> User { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IUser}
    content.vb: ReadOnly Property User As [Optional](Of IUser)
  overload: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.User*
- uid: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.RequireColons
  commentId: P:Remora.Discord.API.Abstractions.Objects.IPartialEmoji.RequireColons
  id: RequireColons
  parent: Remora.Discord.API.Abstractions.Objects.IPartialEmoji
  langs:
  - csharp
  - vb
  name: RequireColons
  nameWithType: IPartialEmoji.RequireColons
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.RequireColons
  type: Property
  source:
    id: RequireColons
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Emojis\IPartialEmoji.cs
    startLine: 47
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets a value indicating whether this emoji must be wrapped in colons.
  example: []
  syntax:
    content: Optional<bool> RequireColons { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Boolean}
    content.vb: ReadOnly Property RequireColons As [Optional](Of Boolean)
  overload: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.RequireColons*
- uid: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsManaged
  commentId: P:Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsManaged
  id: IsManaged
  parent: Remora.Discord.API.Abstractions.Objects.IPartialEmoji
  langs:
  - csharp
  - vb
  name: IsManaged
  nameWithType: IPartialEmoji.IsManaged
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsManaged
  type: Property
  source:
    id: IsManaged
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Emojis\IPartialEmoji.cs
    startLine: 50
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets a value indicating whether this emoji is managed.
  example: []
  syntax:
    content: Optional<bool> IsManaged { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Boolean}
    content.vb: ReadOnly Property IsManaged As [Optional](Of Boolean)
  overload: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsManaged*
- uid: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsAnimated
  commentId: P:Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsAnimated
  id: IsAnimated
  parent: Remora.Discord.API.Abstractions.Objects.IPartialEmoji
  langs:
  - csharp
  - vb
  name: IsAnimated
  nameWithType: IPartialEmoji.IsAnimated
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsAnimated
  type: Property
  source:
    id: IsAnimated
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Emojis\IPartialEmoji.cs
    startLine: 53
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets a value indicating whether this emoji is animated.
  example: []
  syntax:
    content: Optional<bool> IsAnimated { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Boolean}
    content.vb: ReadOnly Property IsAnimated As [Optional](Of Boolean)
  overload: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsAnimated*
- uid: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsAvailable
  commentId: P:Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsAvailable
  id: IsAvailable
  parent: Remora.Discord.API.Abstractions.Objects.IPartialEmoji
  langs:
  - csharp
  - vb
  name: IsAvailable
  nameWithType: IPartialEmoji.IsAvailable
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsAvailable
  type: Property
  source:
    id: IsAvailable
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Emojis\IPartialEmoji.cs
    startLine: 56
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets a value indicating whether this emoji is available. May be false due to a loss of server boosts.
  example: []
  syntax:
    content: Optional<bool> IsAvailable { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Boolean}
    content.vb: ReadOnly Property IsAvailable As [Optional](Of Boolean)
  overload: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsAvailable*
references:
- uid: Remora.Discord.API.Abstractions.Objects
  commentId: N:Remora.Discord.API.Abstractions.Objects
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Objects
  nameWithType: Remora.Discord.API.Abstractions.Objects
  fullName: Remora.Discord.API.Abstractions.Objects
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
- uid: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.ID*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IPartialEmoji.ID
  href: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.html#Remora_Discord_API_Abstractions_Objects_IPartialEmoji_ID
  name: ID
  nameWithType: IPartialEmoji.ID
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.ID
- uid: Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}}
  commentId: T:Remora.Rest.Core.Optional{System.Nullable{Remora.Rest.Core.Snowflake}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  name: Optional<Snowflake?>
  nameWithType: Optional<Snowflake?>
  fullName: Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake?>
  nameWithType.vb: Optional(Of Snowflake?)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake?)
  name.vb: Optional(Of Snowflake?)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: )
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.Name*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IPartialEmoji.Name
  href: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.html#Remora_Discord_API_Abstractions_Objects_IPartialEmoji_Name
  name: Name
  nameWithType: IPartialEmoji.Name
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.Name
- uid: Remora.Rest.Core.Optional{System.String}
  commentId: T:Remora.Rest.Core.Optional{System.String}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Optional<string>
  nameWithType: Optional<string>
  fullName: Remora.Rest.Core.Optional<string>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Remora.Rest.Core.Optional(Of String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.Roles*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IPartialEmoji.Roles
  href: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.html#Remora_Discord_API_Abstractions_Objects_IPartialEmoji_Roles
  name: Roles
  nameWithType: IPartialEmoji.Roles
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.Roles
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<Snowflake>>
  nameWithType: Optional<IReadOnlyList<Snowflake>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of Snowflake))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake))
  name.vb: Optional(Of IReadOnlyList(Of Snowflake))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.User*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IPartialEmoji.User
  href: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.html#Remora_Discord_API_Abstractions_Objects_IPartialEmoji_User
  name: User
  nameWithType: IPartialEmoji.User
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.User
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IUser}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IUser}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.IUser.html
  name: Optional<IUser>
  nameWithType: Optional<IUser>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IUser>
  nameWithType.vb: Optional(Of IUser)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IUser)
  name.vb: Optional(Of IUser)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IUser
    name: IUser
    href: Remora.Discord.API.Abstractions.Objects.IUser.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IUser
    name: IUser
    href: Remora.Discord.API.Abstractions.Objects.IUser.html
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.RequireColons*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IPartialEmoji.RequireColons
  href: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.html#Remora_Discord_API_Abstractions_Objects_IPartialEmoji_RequireColons
  name: RequireColons
  nameWithType: IPartialEmoji.RequireColons
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.RequireColons
- uid: Remora.Rest.Core.Optional{System.Boolean}
  commentId: T:Remora.Rest.Core.Optional{System.Boolean}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Optional<bool>
  nameWithType: Optional<bool>
  fullName: Remora.Rest.Core.Optional<bool>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: Remora.Rest.Core.Optional(Of Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsManaged*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsManaged
  href: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.html#Remora_Discord_API_Abstractions_Objects_IPartialEmoji_IsManaged
  name: IsManaged
  nameWithType: IPartialEmoji.IsManaged
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsManaged
- uid: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsAnimated*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsAnimated
  href: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.html#Remora_Discord_API_Abstractions_Objects_IPartialEmoji_IsAnimated
  name: IsAnimated
  nameWithType: IPartialEmoji.IsAnimated
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsAnimated
- uid: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsAvailable*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsAvailable
  href: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.html#Remora_Discord_API_Abstractions_Objects_IPartialEmoji_IsAvailable
  name: IsAvailable
  nameWithType: IPartialEmoji.IsAvailable
  fullName: Remora.Discord.API.Abstractions.Objects.IPartialEmoji.IsAvailable
