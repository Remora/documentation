### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Rest.API.DiscordRestEmojiAPI
  commentId: T:Remora.Discord.Rest.API.DiscordRestEmojiAPI
  id: DiscordRestEmojiAPI
  parent: Remora.Discord.Rest.API
  children:
  - Remora.Discord.Rest.API.DiscordRestEmojiAPI.#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  - Remora.Discord.Rest.API.DiscordRestEmojiAPI.CreateGuildEmojiAsync(Remora.Rest.Core.Snowflake,System.String,System.IO.Stream,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestEmojiAPI.DeleteGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestEmojiAPI.GetGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestEmojiAPI.ListGuildEmojisAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestEmojiAPI.ModifyGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: DiscordRestEmojiAPI
  nameWithType: DiscordRestEmojiAPI
  fullName: Remora.Discord.Rest.API.DiscordRestEmojiAPI
  type: Class
  source:
    id: DiscordRestEmojiAPI
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Emoji\DiscordRestEmojiAPI.cs
    startLine: 41
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Represents the Discord Emoji API.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public class DiscordRestEmojiAPI : AbstractDiscordRestAPI, IRestCustomizable, IDiscordRestEmojiAPI
    content.vb: >-
      <PublicAPI>

      Public Class DiscordRestEmojiAPI Inherits AbstractDiscordRestAPI Implements IRestCustomizable, IDiscordRestEmojiAPI
  inheritance:
  - System.Object
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI
  implements:
  - Remora.Rest.IRestCustomizable
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI
  inheritedMembers:
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.API.DiscordRestEmojiAPI.#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  commentId: M:Remora.Discord.Rest.API.DiscordRestEmojiAPI.#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  id: '#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)'
  parent: Remora.Discord.Rest.API.DiscordRestEmojiAPI
  langs:
  - csharp
  - vb
  name: DiscordRestEmojiAPI(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
  nameWithType: DiscordRestEmojiAPI.DiscordRestEmojiAPI(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
  fullName: Remora.Discord.Rest.API.DiscordRestEmojiAPI.DiscordRestEmojiAPI(Remora.Rest.IRestHttpClient, System.Text.Json.JsonSerializerOptions, Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Emoji\DiscordRestEmojiAPI.cs
    startLine: 50
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Initializes a new instance of the <xref href="Remora.Discord.Rest.API.DiscordRestEmojiAPI" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public DiscordRestEmojiAPI(IRestHttpClient restHttpClient, JsonSerializerOptions jsonOptions, ICacheProvider rateLimitCache)
    parameters:
    - id: restHttpClient
      type: Remora.Rest.IRestHttpClient
      description: The Discord HTTP client.
    - id: jsonOptions
      type: System.Text.Json.JsonSerializerOptions
      description: The JSON options.
    - id: rateLimitCache
      type: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
      description: The memory cache used for rate limits.
    content.vb: Public Sub New(restHttpClient As IRestHttpClient, jsonOptions As JsonSerializerOptions, rateLimitCache As ICacheProvider)
  overload: Remora.Discord.Rest.API.DiscordRestEmojiAPI.#ctor*
  nameWithType.vb: DiscordRestEmojiAPI.New(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestEmojiAPI.New(Remora.Rest.IRestHttpClient, System.Text.Json.JsonSerializerOptions, Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  name.vb: New(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
- uid: Remora.Discord.Rest.API.DiscordRestEmojiAPI.ListGuildEmojisAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestEmojiAPI.ListGuildEmojisAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: ListGuildEmojisAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestEmojiAPI
  langs:
  - csharp
  - vb
  name: ListGuildEmojisAsync(Snowflake, CancellationToken)
  nameWithType: DiscordRestEmojiAPI.ListGuildEmojisAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestEmojiAPI.ListGuildEmojisAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: ListGuildEmojisAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Emoji\DiscordRestEmojiAPI.cs
    startLine: 61
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets a list of emojis for the given guild.
  example: []
  syntax:
    content: public virtual Task<Result<IReadOnlyList<IEmoji>>> ListGuildEmojisAsync(Snowflake guildID, CancellationToken ct = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmoji}}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function ListGuildEmojisAsync(guildID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of IEmoji)))
  overload: Remora.Discord.Rest.API.DiscordRestEmojiAPI.ListGuildEmojisAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.ListGuildEmojisAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestEmojiAPI.GetGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestEmojiAPI.GetGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: GetGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestEmojiAPI
  langs:
  - csharp
  - vb
  name: GetGuildEmojiAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: DiscordRestEmojiAPI.GetGuildEmojiAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestEmojiAPI.GetGuildEmojiAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: GetGuildEmojiAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Emoji\DiscordRestEmojiAPI.cs
    startLine: 76
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets the emoji on the given guild with the given ID.
  example: []
  syntax:
    content: public virtual Task<Result<IEmoji>> GetGuildEmojiAsync(Snowflake guildID, Snowflake emojiID, CancellationToken ct = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: emojiID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the emoji.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IEmoji}}
      description: A retrieval result which may or may not have succeeded.
    content.vb: Public Overridable Function GetGuildEmojiAsync(guildID As Snowflake, emojiID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IEmoji))
  overload: Remora.Discord.Rest.API.DiscordRestEmojiAPI.GetGuildEmojiAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.GetGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestEmojiAPI.CreateGuildEmojiAsync(Remora.Rest.Core.Snowflake,System.String,System.IO.Stream,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestEmojiAPI.CreateGuildEmojiAsync(Remora.Rest.Core.Snowflake,System.String,System.IO.Stream,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: CreateGuildEmojiAsync(Remora.Rest.Core.Snowflake,System.String,System.IO.Stream,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestEmojiAPI
  langs:
  - csharp
  - vb
  name: CreateGuildEmojiAsync(Snowflake, string, Stream, IReadOnlyList<Snowflake>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestEmojiAPI.CreateGuildEmojiAsync(Snowflake, string, Stream, IReadOnlyList<Snowflake>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestEmojiAPI.CreateGuildEmojiAsync(Remora.Rest.Core.Snowflake, string, System.IO.Stream, System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: CreateGuildEmojiAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Emoji\DiscordRestEmojiAPI.cs
    startLine: 92
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Creates a new emoji for the given guild with the given parameters.
  remarks: >-
    Any streams passed to this method will be disposed of at the end of the call. If you want to reuse the streams

    afterwards, ensure that what you pass is a copy that the method can take ownership of.
  example: []
  syntax:
    content: public virtual Task<Result<IEmoji>> CreateGuildEmojiAsync(Snowflake guildID, string name, Stream image, IReadOnlyList<Snowflake> roles, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: name
      type: System.String
      description: The name of the new emoji.
    - id: image
      type: System.IO.Stream
      description: The image data.
    - id: roles
      type: System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}
      description: The roles that the emoji will be restricted to.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IEmoji}}
      description: A creation result which may or may not have succeeded.
    content.vb: Public Overridable Function CreateGuildEmojiAsync(guildID As Snowflake, name As String, image As Stream, roles As IReadOnlyList(Of Snowflake), reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IEmoji))
  overload: Remora.Discord.Rest.API.DiscordRestEmojiAPI.CreateGuildEmojiAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.CreateGuildEmojiAsync(Remora.Rest.Core.Snowflake,System.String,System.IO.Stream,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestEmojiAPI.CreateGuildEmojiAsync(Snowflake, String, Stream, IReadOnlyList(Of Snowflake), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestEmojiAPI.CreateGuildEmojiAsync(Remora.Rest.Core.Snowflake, String, System.IO.Stream, System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: CreateGuildEmojiAsync(Snowflake, String, Stream, IReadOnlyList(Of Snowflake), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestEmojiAPI.ModifyGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestEmojiAPI.ModifyGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: ModifyGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestEmojiAPI
  langs:
  - csharp
  - vb
  name: ModifyGuildEmojiAsync(Snowflake, Snowflake, Optional<string>, Optional<IReadOnlyList<Snowflake>?>, Optional<string>, CancellationToken)
  nameWithType: DiscordRestEmojiAPI.ModifyGuildEmojiAsync(Snowflake, Snowflake, Optional<string>, Optional<IReadOnlyList<Snowflake>?>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestEmojiAPI.ModifyGuildEmojiAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>?>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ModifyGuildEmojiAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Emoji\DiscordRestEmojiAPI.cs
    startLine: 137
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Modifies the given emoji.
  example: []
  syntax:
    content: public virtual Task<Result<IEmoji>> ModifyGuildEmojiAsync(Snowflake guildID, Snowflake emojiID, Optional<string> name = default, Optional<IReadOnlyList<Snowflake>?> roles = default, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: emojiID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the emoji.
    - id: name
      type: Remora.Rest.Core.Optional{System.String}
      description: The new name of the emoji.
    - id: roles
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
      description: The new restricted roles.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IEmoji}}
      description: A modification result which may or may not have succeeded.
    content.vb: Public Overridable Function ModifyGuildEmojiAsync(guildID As Snowflake, emojiID As Snowflake, name As [Optional](Of String) = Nothing, roles As [Optional](Of IReadOnlyList(Of Snowflake)) = Nothing, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IEmoji))
  overload: Remora.Discord.Rest.API.DiscordRestEmojiAPI.ModifyGuildEmojiAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.ModifyGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestEmojiAPI.ModifyGuildEmojiAsync(Snowflake, Snowflake, Optional(Of String), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestEmojiAPI.ModifyGuildEmojiAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyGuildEmojiAsync(Snowflake, Snowflake, Optional(Of String), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of String), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestEmojiAPI.DeleteGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestEmojiAPI.DeleteGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  id: DeleteGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestEmojiAPI
  langs:
  - csharp
  - vb
  name: DeleteGuildEmojiAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  nameWithType: DiscordRestEmojiAPI.DeleteGuildEmojiAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestEmojiAPI.DeleteGuildEmojiAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteGuildEmojiAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Emoji\DiscordRestEmojiAPI.cs
    startLine: 166
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Deletes the given emoji.
  example: []
  syntax:
    content: public virtual Task<Result> DeleteGuildEmojiAsync(Snowflake guildID, Snowflake emojiID, Optional<string> reason = default, CancellationToken ct = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild.
    - id: emojiID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the emoji.
    - id: reason
      type: Remora.Rest.Core.Optional{System.String}
      description: The reason to mark the action in the audit log with.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A deletion result which may or may not have succeeded.
    content.vb: Public Overridable Function DeleteGuildEmojiAsync(guildID As Snowflake, emojiID As Snowflake, reason As [Optional](Of String) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestEmojiAPI.DeleteGuildEmojiAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.DeleteGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestEmojiAPI.DeleteGuildEmojiAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestEmojiAPI.DeleteGuildEmojiAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: DeleteGuildEmojiAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
references:
- uid: Remora.Discord.Rest.API
  commentId: N:Remora.Discord.Rest.API
  href: Remora.html
  name: Remora.Discord.Rest.API
  nameWithType: Remora.Discord.Rest.API
  fullName: Remora.Discord.Rest.API
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.API
    name: API
    href: Remora.Discord.Rest.API.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.API
    name: API
    href: Remora.Discord.Rest.API.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  commentId: T:Remora.Discord.Rest.API.AbstractDiscordRestAPI
  parent: Remora.Discord.Rest.API
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html
  name: AbstractDiscordRestAPI
  nameWithType: AbstractDiscordRestAPI
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI
- uid: Remora.Rest.IRestCustomizable
  commentId: T:Remora.Rest.IRestCustomizable
  parent: Remora.Rest
  isExternal: true
  name: IRestCustomizable
  nameWithType: IRestCustomizable
  fullName: Remora.Rest.IRestCustomizable
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI
  commentId: T:Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI
  parent: Remora.Discord.API.Abstractions.Rest
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.html
  name: IDiscordRestEmojiAPI
  nameWithType: IDiscordRestEmojiAPI
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
  commentId: P:Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_RestHttpClient
  name: RestHttpClient
  nameWithType: AbstractDiscordRestAPI.RestHttpClient
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
  commentId: P:Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_JsonOptions
  name: JsonOptions
  nameWithType: AbstractDiscordRestAPI.JsonOptions
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
  commentId: P:Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_RateLimitCache
  name: RateLimitCache
  nameWithType: AbstractDiscordRestAPI.RateLimitCache
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
  commentId: M:Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  isExternal: true
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_WithCustomization_System_Action_Remora_Rest_RestRequestBuilder__
  name: WithCustomization(Action<RestRequestBuilder>)
  nameWithType: AbstractDiscordRestAPI.WithCustomization(Action<RestRequestBuilder>)
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action<Remora.Rest.RestRequestBuilder>)
  nameWithType.vb: AbstractDiscordRestAPI.WithCustomization(Action(Of RestRequestBuilder))
  fullName.vb: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action(Of Remora.Rest.RestRequestBuilder))
  name.vb: WithCustomization(Action(Of RestRequestBuilder))
  spec.csharp:
  - uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
    name: WithCustomization
    href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_WithCustomization_System_Action_Remora_Rest_RestRequestBuilder__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Remora.Rest.RestRequestBuilder
    name: RestRequestBuilder
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
    name: WithCustomization
    href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_WithCustomization_System_Action_Remora_Rest_RestRequestBuilder__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.RestRequestBuilder
    name: RestRequestBuilder
    isExternal: true
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Rest
  commentId: N:Remora.Rest
  isExternal: true
  name: Remora.Rest
  nameWithType: Remora.Rest
  fullName: Remora.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
- uid: Remora.Discord.API.Abstractions.Rest
  commentId: N:Remora.Discord.API.Abstractions.Rest
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Rest
  nameWithType: Remora.Discord.API.Abstractions.Rest
  fullName: Remora.Discord.API.Abstractions.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
- uid: Remora.Discord.Rest.API.DiscordRestEmojiAPI
  commentId: T:Remora.Discord.Rest.API.DiscordRestEmojiAPI
  href: Remora.Discord.Rest.API.DiscordRestEmojiAPI.html
  name: DiscordRestEmojiAPI
  nameWithType: DiscordRestEmojiAPI
  fullName: Remora.Discord.Rest.API.DiscordRestEmojiAPI
- uid: Remora.Discord.Rest.API.DiscordRestEmojiAPI.#ctor*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestEmojiAPI.#ctor
  href: Remora.Discord.Rest.API.DiscordRestEmojiAPI.html#Remora_Discord_Rest_API_DiscordRestEmojiAPI__ctor_Remora_Rest_IRestHttpClient_System_Text_Json_JsonSerializerOptions_Remora_Discord_Caching_Abstractions_Services_ICacheProvider_
  name: DiscordRestEmojiAPI
  nameWithType: DiscordRestEmojiAPI.DiscordRestEmojiAPI
  fullName: Remora.Discord.Rest.API.DiscordRestEmojiAPI.DiscordRestEmojiAPI
  nameWithType.vb: DiscordRestEmojiAPI.New
  fullName.vb: Remora.Discord.Rest.API.DiscordRestEmojiAPI.New
  name.vb: New
- uid: Remora.Rest.IRestHttpClient
  commentId: T:Remora.Rest.IRestHttpClient
  parent: Remora.Rest
  isExternal: true
  name: IRestHttpClient
  nameWithType: IRestHttpClient
  fullName: Remora.Rest.IRestHttpClient
- uid: System.Text.Json.JsonSerializerOptions
  commentId: T:System.Text.Json.JsonSerializerOptions
  parent: System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions
  name: JsonSerializerOptions
  nameWithType: JsonSerializerOptions
  fullName: System.Text.Json.JsonSerializerOptions
- uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  commentId: T:Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  parent: Remora.Discord.Caching.Abstractions.Services
  href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html
  name: ICacheProvider
  nameWithType: ICacheProvider
  fullName: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
- uid: System.Text.Json
  commentId: N:System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.Json
  nameWithType: System.Text.Json
  fullName: System.Text.Json
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
- uid: Remora.Discord.Caching.Abstractions.Services
  commentId: N:Remora.Discord.Caching.Abstractions.Services
  href: Remora.html
  name: Remora.Discord.Caching.Abstractions.Services
  nameWithType: Remora.Discord.Caching.Abstractions.Services
  fullName: Remora.Discord.Caching.Abstractions.Services
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions
    name: Abstractions
    href: Remora.Discord.Caching.Abstractions.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions.Services
    name: Services
    href: Remora.Discord.Caching.Abstractions.Services.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions
    name: Abstractions
    href: Remora.Discord.Caching.Abstractions.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions.Services
    name: Services
    href: Remora.Discord.Caching.Abstractions.Services.html
- uid: Remora.Discord.Rest.API.DiscordRestEmojiAPI.ListGuildEmojisAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestEmojiAPI.ListGuildEmojisAsync
  href: Remora.Discord.Rest.API.DiscordRestEmojiAPI.html#Remora_Discord_Rest_API_DiscordRestEmojiAPI_ListGuildEmojisAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: ListGuildEmojisAsync
  nameWithType: DiscordRestEmojiAPI.ListGuildEmojisAsync
  fullName: Remora.Discord.Rest.API.DiscordRestEmojiAPI.ListGuildEmojisAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.ListGuildEmojisAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.ListGuildEmojisAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestEmojiAPI_ListGuildEmojisAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: ListGuildEmojisAsync(Snowflake, CancellationToken)
  nameWithType: IDiscordRestEmojiAPI.ListGuildEmojisAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.ListGuildEmojisAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.ListGuildEmojisAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: ListGuildEmojisAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestEmojiAPI_ListGuildEmojisAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.ListGuildEmojisAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: ListGuildEmojisAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestEmojiAPI_ListGuildEmojisAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Snowflake
  commentId: T:Remora.Rest.Core.Snowflake
  parent: Remora.Rest.Core
  isExternal: true
  name: Snowflake
  nameWithType: Snowflake
  fullName: Remora.Rest.Core.Snowflake
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmoji}}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEmoji}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IReadOnlyList<IEmoji>>>
  nameWithType: Task<Result<IReadOnlyList<IEmoji>>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEmoji>>>
  nameWithType.vb: Task(Of Result(Of IReadOnlyList(Of IEmoji)))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEmoji)))
  name.vb: Task(Of Result(Of IReadOnlyList(Of IEmoji)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IEmoji
    name: IEmoji
    href: Remora.Discord.API.Abstractions.Objects.IEmoji.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IEmoji
    name: IEmoji
    href: Remora.Discord.API.Abstractions.Objects.IEmoji.html
  - name: )
  - name: )
  - name: )
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Rest.API.DiscordRestEmojiAPI.GetGuildEmojiAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestEmojiAPI.GetGuildEmojiAsync
  href: Remora.Discord.Rest.API.DiscordRestEmojiAPI.html#Remora_Discord_Rest_API_DiscordRestEmojiAPI_GetGuildEmojiAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetGuildEmojiAsync
  nameWithType: DiscordRestEmojiAPI.GetGuildEmojiAsync
  fullName: Remora.Discord.Rest.API.DiscordRestEmojiAPI.GetGuildEmojiAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.GetGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.GetGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestEmojiAPI_GetGuildEmojiAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: GetGuildEmojiAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: IDiscordRestEmojiAPI.GetGuildEmojiAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.GetGuildEmojiAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.GetGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetGuildEmojiAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestEmojiAPI_GetGuildEmojiAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.GetGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: GetGuildEmojiAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestEmojiAPI_GetGuildEmojiAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IEmoji}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IEmoji}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IEmoji>>
  nameWithType: Task<Result<IEmoji>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IEmoji>>
  nameWithType.vb: Task(Of Result(Of IEmoji))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IEmoji))
  name.vb: Task(Of Result(Of IEmoji))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IEmoji
    name: IEmoji
    href: Remora.Discord.API.Abstractions.Objects.IEmoji.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IEmoji
    name: IEmoji
    href: Remora.Discord.API.Abstractions.Objects.IEmoji.html
  - name: )
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestEmojiAPI.CreateGuildEmojiAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestEmojiAPI.CreateGuildEmojiAsync
  href: Remora.Discord.Rest.API.DiscordRestEmojiAPI.html#Remora_Discord_Rest_API_DiscordRestEmojiAPI_CreateGuildEmojiAsync_Remora_Rest_Core_Snowflake_System_String_System_IO_Stream_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: CreateGuildEmojiAsync
  nameWithType: DiscordRestEmojiAPI.CreateGuildEmojiAsync
  fullName: Remora.Discord.Rest.API.DiscordRestEmojiAPI.CreateGuildEmojiAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.CreateGuildEmojiAsync(Remora.Rest.Core.Snowflake,System.String,System.IO.Stream,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.CreateGuildEmojiAsync(Remora.Rest.Core.Snowflake,System.String,System.IO.Stream,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestEmojiAPI_CreateGuildEmojiAsync_Remora_Rest_Core_Snowflake_System_String_System_IO_Stream_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: CreateGuildEmojiAsync(Snowflake, string, Stream, IReadOnlyList<Snowflake>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestEmojiAPI.CreateGuildEmojiAsync(Snowflake, string, Stream, IReadOnlyList<Snowflake>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.CreateGuildEmojiAsync(Remora.Rest.Core.Snowflake, string, System.IO.Stream, System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestEmojiAPI.CreateGuildEmojiAsync(Snowflake, String, Stream, IReadOnlyList(Of Snowflake), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.CreateGuildEmojiAsync(Remora.Rest.Core.Snowflake, String, System.IO.Stream, System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: CreateGuildEmojiAsync(Snowflake, String, Stream, IReadOnlyList(Of Snowflake), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.CreateGuildEmojiAsync(Remora.Rest.Core.Snowflake,System.String,System.IO.Stream,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: CreateGuildEmojiAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestEmojiAPI_CreateGuildEmojiAsync_Remora_Rest_Core_Snowflake_System_String_System_IO_Stream_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.CreateGuildEmojiAsync(Remora.Rest.Core.Snowflake,System.String,System.IO.Stream,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: CreateGuildEmojiAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestEmojiAPI_CreateGuildEmojiAsync_Remora_Rest_Core_Snowflake_System_String_System_IO_Stream_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}
  commentId: T:System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<Snowflake>
  nameWithType: IReadOnlyList<Snowflake>
  fullName: System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>
  nameWithType.vb: IReadOnlyList(Of Snowflake)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)
  name.vb: IReadOnlyList(Of Snowflake)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
- uid: Remora.Rest.Core.Optional{System.String}
  commentId: T:Remora.Rest.Core.Optional{System.String}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Optional<string>
  nameWithType: Optional<string>
  fullName: Remora.Rest.Core.Optional<string>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Remora.Rest.Core.Optional(Of String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestEmojiAPI.ModifyGuildEmojiAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestEmojiAPI.ModifyGuildEmojiAsync
  href: Remora.Discord.Rest.API.DiscordRestEmojiAPI.html#Remora_Discord_Rest_API_DiscordRestEmojiAPI_ModifyGuildEmojiAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyGuildEmojiAsync
  nameWithType: DiscordRestEmojiAPI.ModifyGuildEmojiAsync
  fullName: Remora.Discord.Rest.API.DiscordRestEmojiAPI.ModifyGuildEmojiAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.ModifyGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.ModifyGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestEmojiAPI_ModifyGuildEmojiAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: ModifyGuildEmojiAsync(Snowflake, Snowflake, Optional<string>, Optional<IReadOnlyList<Snowflake>>, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestEmojiAPI.ModifyGuildEmojiAsync(Snowflake, Snowflake, Optional<string>, Optional<IReadOnlyList<Snowflake>>, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.ModifyGuildEmojiAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestEmojiAPI.ModifyGuildEmojiAsync(Snowflake, Snowflake, Optional(Of String), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.ModifyGuildEmojiAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)), Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: ModifyGuildEmojiAsync(Snowflake, Snowflake, Optional(Of String), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.ModifyGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyGuildEmojiAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestEmojiAPI_ModifyGuildEmojiAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.ModifyGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: ModifyGuildEmojiAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestEmojiAPI_ModifyGuildEmojiAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<Snowflake>>
  nameWithType: Optional<IReadOnlyList<Snowflake>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of Snowflake))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake))
  name.vb: Optional(Of IReadOnlyList(Of Snowflake))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestEmojiAPI.DeleteGuildEmojiAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestEmojiAPI.DeleteGuildEmojiAsync
  href: Remora.Discord.Rest.API.DiscordRestEmojiAPI.html#Remora_Discord_Rest_API_DiscordRestEmojiAPI_DeleteGuildEmojiAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: DeleteGuildEmojiAsync
  nameWithType: DiscordRestEmojiAPI.DeleteGuildEmojiAsync
  fullName: Remora.Discord.Rest.API.DiscordRestEmojiAPI.DeleteGuildEmojiAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.DeleteGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.DeleteGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestEmojiAPI_DeleteGuildEmojiAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  name: DeleteGuildEmojiAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  nameWithType: IDiscordRestEmojiAPI.DeleteGuildEmojiAsync(Snowflake, Snowflake, Optional<string>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.DeleteGuildEmojiAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<string>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestEmojiAPI.DeleteGuildEmojiAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.DeleteGuildEmojiAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of String), System.Threading.CancellationToken)
  name.vb: DeleteGuildEmojiAsync(Snowflake, Snowflake, Optional(Of String), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.DeleteGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: DeleteGuildEmojiAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestEmojiAPI_DeleteGuildEmojiAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.DeleteGuildEmojiAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.String},System.Threading.CancellationToken)
    name: DeleteGuildEmojiAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestEmojiAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestEmojiAPI_DeleteGuildEmojiAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_String__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result>
  nameWithType: Task<Result>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result>
  nameWithType.vb: Task(Of Result)
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result)
  name.vb: Task(Of Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: )
