### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Rest.API.DiscordRestMonetizationAPI
  commentId: T:Remora.Discord.Rest.API.DiscordRestMonetizationAPI
  id: DiscordRestMonetizationAPI
  parent: Remora.Discord.Rest.API
  children:
  - Remora.Discord.Rest.API.DiscordRestMonetizationAPI.#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  - Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ConsumeEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestMonetizationAPI.CreateTestEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestMonetizationAPI.DeleteTestEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ListEntitlementsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Boolean},System.Threading.CancellationToken)
  - Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ListSKUsAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: DiscordRestMonetizationAPI
  nameWithType: DiscordRestMonetizationAPI
  fullName: Remora.Discord.Rest.API.DiscordRestMonetizationAPI
  type: Class
  source:
    id: DiscordRestMonetizationAPI
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Monetization\DiscordRestMonetizationAPI.cs
    startLine: 40
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Represents the Discord Monetization API.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public class DiscordRestMonetizationAPI : AbstractDiscordRestAPI, IRestCustomizable, IDiscordRestMonetizationAPI
    content.vb: >-
      <PublicAPI>

      Public Class DiscordRestMonetizationAPI Inherits AbstractDiscordRestAPI Implements IRestCustomizable, IDiscordRestMonetizationAPI
  inheritance:
  - System.Object
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI
  implements:
  - Remora.Rest.IRestCustomizable
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI
  inheritedMembers:
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
  - Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  commentId: M:Remora.Discord.Rest.API.DiscordRestMonetizationAPI.#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  id: '#ctor(Remora.Rest.IRestHttpClient,System.Text.Json.JsonSerializerOptions,Remora.Discord.Caching.Abstractions.Services.ICacheProvider)'
  parent: Remora.Discord.Rest.API.DiscordRestMonetizationAPI
  langs:
  - csharp
  - vb
  name: DiscordRestMonetizationAPI(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
  nameWithType: DiscordRestMonetizationAPI.DiscordRestMonetizationAPI(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
  fullName: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.DiscordRestMonetizationAPI(Remora.Rest.IRestHttpClient, System.Text.Json.JsonSerializerOptions, Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Monetization\DiscordRestMonetizationAPI.cs
    startLine: 49
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Initializes a new instance of the <xref href="Remora.Discord.Rest.API.DiscordRestMonetizationAPI" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public DiscordRestMonetizationAPI(IRestHttpClient restHttpClient, JsonSerializerOptions jsonOptions, ICacheProvider rateLimitCache)
    parameters:
    - id: restHttpClient
      type: Remora.Rest.IRestHttpClient
      description: The Discord HTTP client.
    - id: jsonOptions
      type: System.Text.Json.JsonSerializerOptions
      description: The JSON options.
    - id: rateLimitCache
      type: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
      description: The memory cache used for rate limits.
    content.vb: Public Sub New(restHttpClient As IRestHttpClient, jsonOptions As JsonSerializerOptions, rateLimitCache As ICacheProvider)
  overload: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.#ctor*
  nameWithType.vb: DiscordRestMonetizationAPI.New(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.New(Remora.Rest.IRestHttpClient, System.Text.Json.JsonSerializerOptions, Remora.Discord.Caching.Abstractions.Services.ICacheProvider)
  name.vb: New(IRestHttpClient, JsonSerializerOptions, ICacheProvider)
- uid: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ListEntitlementsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ListEntitlementsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Boolean},System.Threading.CancellationToken)
  id: ListEntitlementsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Boolean},System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestMonetizationAPI
  langs:
  - csharp
  - vb
  name: ListEntitlementsAsync(Snowflake, Optional<Snowflake>, Optional<IReadOnlyList<Snowflake>>, Optional<Snowflake>, Optional<Snowflake>, Optional<int>, Optional<Snowflake>, Optional<bool>, CancellationToken)
  nameWithType: DiscordRestMonetizationAPI.ListEntitlementsAsync(Snowflake, Optional<Snowflake>, Optional<IReadOnlyList<Snowflake>>, Optional<Snowflake>, Optional<Snowflake>, Optional<int>, Optional<Snowflake>, Optional<bool>, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ListEntitlementsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<int>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<bool>, System.Threading.CancellationToken)
  type: Method
  source:
    id: ListEntitlementsAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Monetization\DiscordRestMonetizationAPI.cs
    startLine: 60
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets all entitlements for a given application.
  example: []
  syntax:
    content: public Task<Result<IReadOnlyList<IEntitlement>>> ListEntitlementsAsync(Snowflake applicationID, Optional<Snowflake> userID = default, Optional<IReadOnlyList<Snowflake>> skuIDs = default, Optional<Snowflake> before = default, Optional<Snowflake> after = default, Optional<int> limit = default, Optional<Snowflake> guildID = default, Optional<bool> excludeEnded = default, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the application.
    - id: userID
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: The ID of the user to limit the search to.
    - id: skuIDs
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
      description: The SKUs to limit the search to.
    - id: before
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: The entitlement to search before.
    - id: after
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: The entitlement to search after.
    - id: limit
      type: Remora.Rest.Core.Optional{System.Int32}
      description: The maximum number of entitlements to return (1-100). Defaults to 100.
    - id: guildID
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
      description: The ID of the guild to limit the search to.
    - id: excludeEnded
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: Whether to exclude expired entitlements.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEntitlement}}}
      description: The entitlements.
    content.vb: Public Function ListEntitlementsAsync(applicationID As Snowflake, userID As [Optional](Of Snowflake) = Nothing, skuIDs As [Optional](Of IReadOnlyList(Of Snowflake)) = Nothing, before As [Optional](Of Snowflake) = Nothing, after As [Optional](Of Snowflake) = Nothing, limit As [Optional](Of Integer) = Nothing, guildID As [Optional](Of Snowflake) = Nothing, excludeEnded As [Optional](Of Boolean) = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of IEntitlement)))
  overload: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ListEntitlementsAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ListEntitlementsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Boolean},System.Threading.CancellationToken)
  nameWithType.vb: DiscordRestMonetizationAPI.ListEntitlementsAsync(Snowflake, Optional(Of Snowflake), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of Snowflake), Optional(Of Snowflake), Optional(Of Integer), Optional(Of Snowflake), Optional(Of Boolean), CancellationToken)
  fullName.vb: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ListEntitlementsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Integer), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Boolean), System.Threading.CancellationToken)
  name.vb: ListEntitlementsAsync(Snowflake, Optional(Of Snowflake), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of Snowflake), Optional(Of Snowflake), Optional(Of Integer), Optional(Of Snowflake), Optional(Of Boolean), CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ConsumeEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ConsumeEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: ConsumeEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestMonetizationAPI
  langs:
  - csharp
  - vb
  name: ConsumeEntitlementAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: DiscordRestMonetizationAPI.ConsumeEntitlementAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ConsumeEntitlementAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: ConsumeEntitlementAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Monetization\DiscordRestMonetizationAPI.cs
    startLine: 87
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Marks the given one-time purchase item as consumed.
  example: []
  syntax:
    content: public Task<Result> ConsumeEntitlementAsync(Snowflake applicationID, Snowflake entitlementID, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the application.
    - id: entitlementID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the entitlement.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A value representing the result of the operation.
    content.vb: Public Function ConsumeEntitlementAsync(applicationID As Snowflake, entitlementID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ConsumeEntitlementAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ConsumeEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.CreateTestEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestMonetizationAPI.CreateTestEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType,System.Threading.CancellationToken)
  id: CreateTestEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestMonetizationAPI
  langs:
  - csharp
  - vb
  name: CreateTestEntitlementAsync(Snowflake, Snowflake, Snowflake, EntitlementOwnerType, CancellationToken)
  nameWithType: DiscordRestMonetizationAPI.CreateTestEntitlementAsync(Snowflake, Snowflake, Snowflake, EntitlementOwnerType, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.CreateTestEntitlementAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType, System.Threading.CancellationToken)
  type: Method
  source:
    id: CreateTestEntitlementAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Monetization\DiscordRestMonetizationAPI.cs
    startLine: 100
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Creates a test entitlement to a given SKU for a given guild or user.
  example: []
  syntax:
    content: public Task<Result<IPartialEntitlement>> CreateTestEntitlementAsync(Snowflake applicationID, Snowflake skuID, Snowflake ownerID, EntitlementOwnerType ownerType, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the application.
    - id: skuID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the SKU to grant the entitlement for.
    - id: ownerID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild or user to grant the entitlement to.
    - id: ownerType
      type: Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType
      description: The type of the owner.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IPartialEntitlement}}
      description: The test entitlement.
    content.vb: Public Function CreateTestEntitlementAsync(applicationID As Snowflake, skuID As Snowflake, ownerID As Snowflake, ownerType As EntitlementOwnerType, ct As CancellationToken = Nothing) As Task(Of Result(Of IPartialEntitlement))
  overload: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.CreateTestEntitlementAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.CreateTestEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.DeleteTestEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestMonetizationAPI.DeleteTestEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: DeleteTestEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestMonetizationAPI
  langs:
  - csharp
  - vb
  name: DeleteTestEntitlementAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: DiscordRestMonetizationAPI.DeleteTestEntitlementAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.DeleteTestEntitlementAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: DeleteTestEntitlementAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Monetization\DiscordRestMonetizationAPI.cs
    startLine: 125
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Deletes the given test entitlement.
  example: []
  syntax:
    content: public Task<Result> DeleteTestEntitlementAsync(Snowflake applicationID, Snowflake entitlementID, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the application.
    - id: entitlementID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the entitlement.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A value representing the result of the operation.
    content.vb: Public Function DeleteTestEntitlementAsync(applicationID As Snowflake, entitlementID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.DeleteTestEntitlementAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.DeleteTestEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
- uid: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ListSKUsAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ListSKUsAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  id: ListSKUsAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.Rest.API.DiscordRestMonetizationAPI
  langs:
  - csharp
  - vb
  name: ListSKUsAsync(Snowflake, CancellationToken)
  nameWithType: DiscordRestMonetizationAPI.ListSKUsAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ListSKUsAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  type: Method
  source:
    id: ListSKUsAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.Rest\API\Monetization\DiscordRestMonetizationAPI.cs
    startLine: 138
  assemblies:
  - Remora.Discord.Rest
  namespace: Remora.Discord.Rest.API
  summary: Gets all SKUs for the given application.
  example: []
  syntax:
    content: public Task<Result<IReadOnlyList<ISKU>>> ListSKUsAsync(Snowflake applicationID, CancellationToken ct = default)
    parameters:
    - id: applicationID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the application.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ISKU}}}
      description: The SKUs.
    content.vb: Public Function ListSKUsAsync(applicationID As Snowflake, ct As CancellationToken = Nothing) As Task(Of Result(Of IReadOnlyList(Of ISKU)))
  overload: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ListSKUsAsync*
  implements:
  - Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ListSKUsAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
references:
- uid: Remora.Discord.Rest.API
  commentId: N:Remora.Discord.Rest.API
  href: Remora.html
  name: Remora.Discord.Rest.API
  nameWithType: Remora.Discord.Rest.API
  fullName: Remora.Discord.Rest.API
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.API
    name: API
    href: Remora.Discord.Rest.API.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Rest
    name: Rest
    href: Remora.Discord.Rest.html
  - name: .
  - uid: Remora.Discord.Rest.API
    name: API
    href: Remora.Discord.Rest.API.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  commentId: T:Remora.Discord.Rest.API.AbstractDiscordRestAPI
  parent: Remora.Discord.Rest.API
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html
  name: AbstractDiscordRestAPI
  nameWithType: AbstractDiscordRestAPI
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI
- uid: Remora.Rest.IRestCustomizable
  commentId: T:Remora.Rest.IRestCustomizable
  parent: Remora.Rest
  isExternal: true
  name: IRestCustomizable
  nameWithType: IRestCustomizable
  fullName: Remora.Rest.IRestCustomizable
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI
  commentId: T:Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI
  parent: Remora.Discord.API.Abstractions.Rest
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.html
  name: IDiscordRestMonetizationAPI
  nameWithType: IDiscordRestMonetizationAPI
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
  commentId: P:Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_RestHttpClient
  name: RestHttpClient
  nameWithType: AbstractDiscordRestAPI.RestHttpClient
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RestHttpClient
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
  commentId: P:Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_JsonOptions
  name: JsonOptions
  nameWithType: AbstractDiscordRestAPI.JsonOptions
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.JsonOptions
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
  commentId: P:Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_RateLimitCache
  name: RateLimitCache
  nameWithType: AbstractDiscordRestAPI.RateLimitCache
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.RateLimitCache
- uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
  commentId: M:Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
  parent: Remora.Discord.Rest.API.AbstractDiscordRestAPI
  isExternal: true
  href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_WithCustomization_System_Action_Remora_Rest_RestRequestBuilder__
  name: WithCustomization(Action<RestRequestBuilder>)
  nameWithType: AbstractDiscordRestAPI.WithCustomization(Action<RestRequestBuilder>)
  fullName: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action<Remora.Rest.RestRequestBuilder>)
  nameWithType.vb: AbstractDiscordRestAPI.WithCustomization(Action(Of RestRequestBuilder))
  fullName.vb: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action(Of Remora.Rest.RestRequestBuilder))
  name.vb: WithCustomization(Action(Of RestRequestBuilder))
  spec.csharp:
  - uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
    name: WithCustomization
    href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_WithCustomization_System_Action_Remora_Rest_RestRequestBuilder__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: Remora.Rest.RestRequestBuilder
    name: RestRequestBuilder
    isExternal: true
  - name: '>'
  - name: )
  spec.vb:
  - uid: Remora.Discord.Rest.API.AbstractDiscordRestAPI.WithCustomization(System.Action{Remora.Rest.RestRequestBuilder})
    name: WithCustomization
    href: Remora.Discord.Rest.API.AbstractDiscordRestAPI.html#Remora_Discord_Rest_API_AbstractDiscordRestAPI_WithCustomization_System_Action_Remora_Rest_RestRequestBuilder__
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.RestRequestBuilder
    name: RestRequestBuilder
    isExternal: true
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Rest
  commentId: N:Remora.Rest
  isExternal: true
  name: Remora.Rest
  nameWithType: Remora.Rest
  fullName: Remora.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
- uid: Remora.Discord.API.Abstractions.Rest
  commentId: N:Remora.Discord.API.Abstractions.Rest
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Rest
  nameWithType: Remora.Discord.API.Abstractions.Rest
  fullName: Remora.Discord.API.Abstractions.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
- uid: Remora.Discord.Rest.API.DiscordRestMonetizationAPI
  commentId: T:Remora.Discord.Rest.API.DiscordRestMonetizationAPI
  href: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.html
  name: DiscordRestMonetizationAPI
  nameWithType: DiscordRestMonetizationAPI
  fullName: Remora.Discord.Rest.API.DiscordRestMonetizationAPI
- uid: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.#ctor*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestMonetizationAPI.#ctor
  href: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.html#Remora_Discord_Rest_API_DiscordRestMonetizationAPI__ctor_Remora_Rest_IRestHttpClient_System_Text_Json_JsonSerializerOptions_Remora_Discord_Caching_Abstractions_Services_ICacheProvider_
  name: DiscordRestMonetizationAPI
  nameWithType: DiscordRestMonetizationAPI.DiscordRestMonetizationAPI
  fullName: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.DiscordRestMonetizationAPI
  nameWithType.vb: DiscordRestMonetizationAPI.New
  fullName.vb: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.New
  name.vb: New
- uid: Remora.Rest.IRestHttpClient
  commentId: T:Remora.Rest.IRestHttpClient
  parent: Remora.Rest
  isExternal: true
  name: IRestHttpClient
  nameWithType: IRestHttpClient
  fullName: Remora.Rest.IRestHttpClient
- uid: System.Text.Json.JsonSerializerOptions
  commentId: T:System.Text.Json.JsonSerializerOptions
  parent: System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.json.jsonserializeroptions
  name: JsonSerializerOptions
  nameWithType: JsonSerializerOptions
  fullName: System.Text.Json.JsonSerializerOptions
- uid: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  commentId: T:Remora.Discord.Caching.Abstractions.Services.ICacheProvider
  parent: Remora.Discord.Caching.Abstractions.Services
  href: Remora.Discord.Caching.Abstractions.Services.ICacheProvider.html
  name: ICacheProvider
  nameWithType: ICacheProvider
  fullName: Remora.Discord.Caching.Abstractions.Services.ICacheProvider
- uid: System.Text.Json
  commentId: N:System.Text.Json
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.Json
  nameWithType: System.Text.Json
  fullName: System.Text.Json
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.Json
    name: Json
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.json
- uid: Remora.Discord.Caching.Abstractions.Services
  commentId: N:Remora.Discord.Caching.Abstractions.Services
  href: Remora.html
  name: Remora.Discord.Caching.Abstractions.Services
  nameWithType: Remora.Discord.Caching.Abstractions.Services
  fullName: Remora.Discord.Caching.Abstractions.Services
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions
    name: Abstractions
    href: Remora.Discord.Caching.Abstractions.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions.Services
    name: Services
    href: Remora.Discord.Caching.Abstractions.Services.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Caching
    name: Caching
    href: Remora.Discord.Caching.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions
    name: Abstractions
    href: Remora.Discord.Caching.Abstractions.html
  - name: .
  - uid: Remora.Discord.Caching.Abstractions.Services
    name: Services
    href: Remora.Discord.Caching.Abstractions.Services.html
- uid: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ListEntitlementsAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ListEntitlementsAsync
  href: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.html#Remora_Discord_Rest_API_DiscordRestMonetizationAPI_ListEntitlementsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Boolean__System_Threading_CancellationToken_
  name: ListEntitlementsAsync
  nameWithType: DiscordRestMonetizationAPI.ListEntitlementsAsync
  fullName: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ListEntitlementsAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ListEntitlementsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Boolean},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ListEntitlementsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Boolean},System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestMonetizationAPI_ListEntitlementsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Boolean__System_Threading_CancellationToken_
  name: ListEntitlementsAsync(Snowflake, Optional<Snowflake>, Optional<IReadOnlyList<Snowflake>>, Optional<Snowflake>, Optional<Snowflake>, Optional<int>, Optional<Snowflake>, Optional<bool>, CancellationToken)
  nameWithType: IDiscordRestMonetizationAPI.ListEntitlementsAsync(Snowflake, Optional<Snowflake>, Optional<IReadOnlyList<Snowflake>>, Optional<Snowflake>, Optional<Snowflake>, Optional<int>, Optional<Snowflake>, Optional<bool>, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ListEntitlementsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<int>, Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<bool>, System.Threading.CancellationToken)
  nameWithType.vb: IDiscordRestMonetizationAPI.ListEntitlementsAsync(Snowflake, Optional(Of Snowflake), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of Snowflake), Optional(Of Snowflake), Optional(Of Integer), Optional(Of Snowflake), Optional(Of Boolean), CancellationToken)
  fullName.vb: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ListEntitlementsAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Integer), Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Boolean), System.Threading.CancellationToken)
  name.vb: ListEntitlementsAsync(Snowflake, Optional(Of Snowflake), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of Snowflake), Optional(Of Snowflake), Optional(Of Integer), Optional(Of Snowflake), Optional(Of Boolean), CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ListEntitlementsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Boolean},System.Threading.CancellationToken)
    name: ListEntitlementsAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestMonetizationAPI_ListEntitlementsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Boolean__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ListEntitlementsAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Boolean},System.Threading.CancellationToken)
    name: ListEntitlementsAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestMonetizationAPI_ListEntitlementsAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_Remora_Rest_Core_Snowflake__Remora_Rest_Core_Optional_System_Boolean__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Snowflake
  commentId: T:Remora.Rest.Core.Snowflake
  parent: Remora.Rest.Core
  isExternal: true
  name: Snowflake
  nameWithType: Snowflake
  fullName: Remora.Rest.Core.Snowflake
- uid: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  commentId: T:Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  name: Optional<Snowflake>
  nameWithType: Optional<Snowflake>
  fullName: Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>
  nameWithType.vb: Optional(Of Snowflake)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake)
  name.vb: Optional(Of Snowflake)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<Snowflake>>
  nameWithType: Optional<IReadOnlyList<Snowflake>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of Snowflake))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake))
  name.vb: Optional(Of IReadOnlyList(Of Snowflake))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Rest.Core.Optional{System.Int32}
  commentId: T:Remora.Rest.Core.Optional{System.Int32}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Optional<int>
  nameWithType: Optional<int>
  fullName: Remora.Rest.Core.Optional<int>
  nameWithType.vb: Optional(Of Integer)
  fullName.vb: Remora.Rest.Core.Optional(Of Integer)
  name.vb: Optional(Of Integer)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Remora.Rest.Core.Optional{System.Boolean}
  commentId: T:Remora.Rest.Core.Optional{System.Boolean}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Optional<bool>
  nameWithType: Optional<bool>
  fullName: Remora.Rest.Core.Optional<bool>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: Remora.Rest.Core.Optional(Of Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEntitlement}}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.IEntitlement}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IReadOnlyList<IEntitlement>>>
  nameWithType: Task<Result<IReadOnlyList<IEntitlement>>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.IEntitlement>>>
  nameWithType.vb: Task(Of Result(Of IReadOnlyList(Of IEntitlement)))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.IEntitlement)))
  name.vb: Task(Of Result(Of IReadOnlyList(Of IEntitlement)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IEntitlement
    name: IEntitlement
    href: Remora.Discord.API.Abstractions.Objects.IEntitlement.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IEntitlement
    name: IEntitlement
    href: Remora.Discord.API.Abstractions.Objects.IEntitlement.html
  - name: )
  - name: )
  - name: )
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ConsumeEntitlementAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ConsumeEntitlementAsync
  href: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.html#Remora_Discord_Rest_API_DiscordRestMonetizationAPI_ConsumeEntitlementAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: ConsumeEntitlementAsync
  nameWithType: DiscordRestMonetizationAPI.ConsumeEntitlementAsync
  fullName: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ConsumeEntitlementAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ConsumeEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ConsumeEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestMonetizationAPI_ConsumeEntitlementAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: ConsumeEntitlementAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: IDiscordRestMonetizationAPI.ConsumeEntitlementAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ConsumeEntitlementAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ConsumeEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: ConsumeEntitlementAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestMonetizationAPI_ConsumeEntitlementAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ConsumeEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: ConsumeEntitlementAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestMonetizationAPI_ConsumeEntitlementAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result>
  nameWithType: Task<Result>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result>
  nameWithType.vb: Task(Of Result)
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result)
  name.vb: Task(Of Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.CreateTestEntitlementAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestMonetizationAPI.CreateTestEntitlementAsync
  href: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.html#Remora_Discord_Rest_API_DiscordRestMonetizationAPI_CreateTestEntitlementAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Discord_API_Abstractions_Objects_EntitlementOwnerType_System_Threading_CancellationToken_
  name: CreateTestEntitlementAsync
  nameWithType: DiscordRestMonetizationAPI.CreateTestEntitlementAsync
  fullName: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.CreateTestEntitlementAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.CreateTestEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.CreateTestEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestMonetizationAPI_CreateTestEntitlementAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Discord_API_Abstractions_Objects_EntitlementOwnerType_System_Threading_CancellationToken_
  name: CreateTestEntitlementAsync(Snowflake, Snowflake, Snowflake, EntitlementOwnerType, CancellationToken)
  nameWithType: IDiscordRestMonetizationAPI.CreateTestEntitlementAsync(Snowflake, Snowflake, Snowflake, EntitlementOwnerType, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.CreateTestEntitlementAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.CreateTestEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType,System.Threading.CancellationToken)
    name: CreateTestEntitlementAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestMonetizationAPI_CreateTestEntitlementAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Discord_API_Abstractions_Objects_EntitlementOwnerType_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType
    name: EntitlementOwnerType
    href: Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.CreateTestEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType,System.Threading.CancellationToken)
    name: CreateTestEntitlementAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestMonetizationAPI_CreateTestEntitlementAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_Remora_Discord_API_Abstractions_Objects_EntitlementOwnerType_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType
    name: EntitlementOwnerType
    href: Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType
  commentId: T:Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType.html
  name: EntitlementOwnerType
  nameWithType: EntitlementOwnerType
  fullName: Remora.Discord.API.Abstractions.Objects.EntitlementOwnerType
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IPartialEntitlement}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IPartialEntitlement}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IPartialEntitlement>>
  nameWithType: Task<Result<IPartialEntitlement>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IPartialEntitlement>>
  nameWithType.vb: Task(Of Result(Of IPartialEntitlement))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IPartialEntitlement))
  name.vb: Task(Of Result(Of IPartialEntitlement))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialEntitlement
    name: IPartialEntitlement
    href: Remora.Discord.API.Abstractions.Objects.IPartialEntitlement.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IPartialEntitlement
    name: IPartialEntitlement
    href: Remora.Discord.API.Abstractions.Objects.IPartialEntitlement.html
  - name: )
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects
  commentId: N:Remora.Discord.API.Abstractions.Objects
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Objects
  nameWithType: Remora.Discord.API.Abstractions.Objects
  fullName: Remora.Discord.API.Abstractions.Objects
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
- uid: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.DeleteTestEntitlementAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestMonetizationAPI.DeleteTestEntitlementAsync
  href: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.html#Remora_Discord_Rest_API_DiscordRestMonetizationAPI_DeleteTestEntitlementAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: DeleteTestEntitlementAsync
  nameWithType: DiscordRestMonetizationAPI.DeleteTestEntitlementAsync
  fullName: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.DeleteTestEntitlementAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.DeleteTestEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.DeleteTestEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestMonetizationAPI_DeleteTestEntitlementAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: DeleteTestEntitlementAsync(Snowflake, Snowflake, CancellationToken)
  nameWithType: IDiscordRestMonetizationAPI.DeleteTestEntitlementAsync(Snowflake, Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.DeleteTestEntitlementAsync(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.DeleteTestEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: DeleteTestEntitlementAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestMonetizationAPI_DeleteTestEntitlementAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.DeleteTestEntitlementAsync(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: DeleteTestEntitlementAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestMonetizationAPI_DeleteTestEntitlementAsync_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ListSKUsAsync*
  commentId: Overload:Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ListSKUsAsync
  href: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.html#Remora_Discord_Rest_API_DiscordRestMonetizationAPI_ListSKUsAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: ListSKUsAsync
  nameWithType: DiscordRestMonetizationAPI.ListSKUsAsync
  fullName: Remora.Discord.Rest.API.DiscordRestMonetizationAPI.ListSKUsAsync
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ListSKUsAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ListSKUsAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
  parent: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI
  isExternal: true
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestMonetizationAPI_ListSKUsAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  name: ListSKUsAsync(Snowflake, CancellationToken)
  nameWithType: IDiscordRestMonetizationAPI.ListSKUsAsync(Snowflake, CancellationToken)
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ListSKUsAsync(Remora.Rest.Core.Snowflake, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ListSKUsAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: ListSKUsAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestMonetizationAPI_ListSKUsAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.ListSKUsAsync(Remora.Rest.Core.Snowflake,System.Threading.CancellationToken)
    name: ListSKUsAsync
    href: Remora.Discord.API.Abstractions.Rest.IDiscordRestMonetizationAPI.html#Remora_Discord_API_Abstractions_Rest_IDiscordRestMonetizationAPI_ListSKUsAsync_Remora_Rest_Core_Snowflake_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ISKU}}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{System.Collections.Generic.IReadOnlyList{Remora.Discord.API.Abstractions.Objects.ISKU}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IReadOnlyList<ISKU>>>
  nameWithType: Task<Result<IReadOnlyList<ISKU>>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<System.Collections.Generic.IReadOnlyList<Remora.Discord.API.Abstractions.Objects.ISKU>>>
  nameWithType.vb: Task(Of Result(Of IReadOnlyList(Of ISKU)))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of System.Collections.Generic.IReadOnlyList(Of Remora.Discord.API.Abstractions.Objects.ISKU)))
  name.vb: Task(Of Result(Of IReadOnlyList(Of ISKU)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.ISKU
    name: ISKU
    href: Remora.Discord.API.Abstractions.Objects.ISKU.html
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.ISKU
    name: ISKU
    href: Remora.Discord.API.Abstractions.Objects.ISKU.html
  - name: )
  - name: )
  - name: )
