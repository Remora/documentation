### YamlMime:ManagedReference
items:
- uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers
  commentId: T:Remora.Discord.API.Gateway.Commands.RequestGuildMembers
  id: RequestGuildMembers
  parent: Remora.Discord.API.Gateway.Commands
  children:
  - Remora.Discord.API.Gateway.Commands.RequestGuildMembers.#ctor(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String})
  - Remora.Discord.API.Gateway.Commands.RequestGuildMembers.#ctor(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String})
  - Remora.Discord.API.Gateway.Commands.RequestGuildMembers.#ctor(Remora.Rest.Core.Snowflake,System.String,System.Int32,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String})
  - Remora.Discord.API.Gateway.Commands.RequestGuildMembers.GuildID
  - Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Limit
  - Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Nonce
  - Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Presences
  - Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Query
  - Remora.Discord.API.Gateway.Commands.RequestGuildMembers.UserIDs
  langs:
  - csharp
  - vb
  name: RequestGuildMembers
  nameWithType: RequestGuildMembers
  fullName: Remora.Discord.API.Gateway.Commands.RequestGuildMembers
  type: Class
  source:
    id: RequestGuildMembers
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\Gateway\Commands\RequestGuildMembers.cs
    startLine: 39
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API.Gateway.Commands
  summary: Represents a command used to request guild members.
  remarks: >-
    This command has some special requirements related to the presence or absence of certain members in the data

    payload. Please read <a href="https://discord.com/developers/docs/topics/gateway#request-guild-members">https://discord.com/developers/docs/topics/gateway#request-guild-members</a> for

    more information before use, as misuse may cause Discord to terminate the gateway connection.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public record RequestGuildMembers : IRequestGuildMembers, IGatewayCommand, IGatewayPayloadData, IEquatable<RequestGuildMembers>
    content.vb: >-
      <PublicAPI>

      Public Class RequestGuildMembers Implements IRequestGuildMembers, IGatewayCommand, IGatewayPayloadData, IEquatable(Of RequestGuildMembers)
  inheritance:
  - System.Object
  implements:
  - Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers
  - Remora.Discord.API.Abstractions.Gateway.Commands.IGatewayCommand
  - Remora.Discord.API.Abstractions.Gateway.IGatewayPayloadData
  - System.IEquatable{Remora.Discord.API.Gateway.Commands.RequestGuildMembers}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.#ctor(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String})
  commentId: M:Remora.Discord.API.Gateway.Commands.RequestGuildMembers.#ctor(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String})
  id: '#ctor(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String},Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}},Remora.Rest.Core.Optional{System.String})'
  parent: Remora.Discord.API.Gateway.Commands.RequestGuildMembers
  langs:
  - csharp
  - vb
  name: RequestGuildMembers(Snowflake, Optional<int>, Optional<bool>, Optional<string>, Optional<IReadOnlyList<Snowflake>>, Optional<string>)
  nameWithType: RequestGuildMembers.RequestGuildMembers(Snowflake, Optional<int>, Optional<bool>, Optional<string>, Optional<IReadOnlyList<Snowflake>>, Optional<string>)
  fullName: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.RequestGuildMembers(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional<int>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<string>, Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>, Remora.Rest.Core.Optional<string>)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\Gateway\Commands\RequestGuildMembers.cs
    startLine: 39
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API.Gateway.Commands
  summary: Represents a command used to request guild members.
  remarks: >-
    This command has some special requirements related to the presence or absence of certain members in the data

    payload. Please read <a href="https://discord.com/developers/docs/topics/gateway#request-guild-members">https://discord.com/developers/docs/topics/gateway#request-guild-members</a> for

    more information before use, as misuse may cause Discord to terminate the gateway connection.
  example: []
  syntax:
    content: public RequestGuildMembers(Snowflake GuildID, Optional<int> Limit, Optional<bool> Presences, Optional<string> Query, Optional<IReadOnlyList<Snowflake>> UserIDs, Optional<string> Nonce)
    parameters:
    - id: GuildID
      type: Remora.Rest.Core.Snowflake
    - id: Limit
      type: Remora.Rest.Core.Optional{System.Int32}
    - id: Presences
      type: Remora.Rest.Core.Optional{System.Boolean}
    - id: Query
      type: Remora.Rest.Core.Optional{System.String}
    - id: UserIDs
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
    - id: Nonce
      type: Remora.Rest.Core.Optional{System.String}
    content.vb: Public Sub New(GuildID As Snowflake, Limit As [Optional](Of Integer), Presences As [Optional](Of Boolean), Query As [Optional](Of String), UserIDs As [Optional](Of IReadOnlyList(Of Snowflake)), Nonce As [Optional](Of String))
  overload: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.#ctor*
  nameWithType.vb: RequestGuildMembers.New(Snowflake, Optional(Of Integer), Optional(Of Boolean), Optional(Of String), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of String))
  fullName.vb: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.New(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Optional(Of Integer), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of String), Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)), Remora.Rest.Core.Optional(Of String))
  name.vb: New(Snowflake, Optional(Of Integer), Optional(Of Boolean), Optional(Of String), Optional(Of IReadOnlyList(Of Snowflake)), Optional(Of String))
- uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.GuildID
  commentId: P:Remora.Discord.API.Gateway.Commands.RequestGuildMembers.GuildID
  id: GuildID
  parent: Remora.Discord.API.Gateway.Commands.RequestGuildMembers
  langs:
  - csharp
  - vb
  name: GuildID
  nameWithType: RequestGuildMembers.GuildID
  fullName: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.GuildID
  type: Property
  source:
    id: GuildID
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\Gateway\Commands\RequestGuildMembers.cs
    startLine: 42
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API.Gateway.Commands
  summary: Gets the ID of the guild that members should be requested from.
  example: []
  syntax:
    content: public Snowflake GuildID { get; init; }
    parameters: []
    return:
      type: Remora.Rest.Core.Snowflake
    content.vb: Public Property GuildID As Snowflake
  overload: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.GuildID*
  implements:
  - Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.GuildID
- uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Limit
  commentId: P:Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Limit
  id: Limit
  parent: Remora.Discord.API.Gateway.Commands.RequestGuildMembers
  langs:
  - csharp
  - vb
  name: Limit
  nameWithType: RequestGuildMembers.Limit
  fullName: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Limit
  type: Property
  source:
    id: Limit
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\Gateway\Commands\RequestGuildMembers.cs
    startLine: 43
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API.Gateway.Commands
  summary: Gets a limiting number of users to fetch.
  example: []
  syntax:
    content: public Optional<int> Limit { get; init; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Int32}
    content.vb: Public Property Limit As [Optional](Of Integer)
  overload: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Limit*
  implements:
  - Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.Limit
- uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Presences
  commentId: P:Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Presences
  id: Presences
  parent: Remora.Discord.API.Gateway.Commands.RequestGuildMembers
  langs:
  - csharp
  - vb
  name: Presences
  nameWithType: RequestGuildMembers.Presences
  fullName: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Presences
  type: Property
  source:
    id: Presences
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\Gateway\Commands\RequestGuildMembers.cs
    startLine: 44
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API.Gateway.Commands
  summary: Gets a value indicating whether we want to fetch the presences of the users.
  example: []
  syntax:
    content: public Optional<bool> Presences { get; init; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Boolean}
    content.vb: Public Property Presences As [Optional](Of Boolean)
  overload: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Presences*
  implements:
  - Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.Presences
- uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Query
  commentId: P:Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Query
  id: Query
  parent: Remora.Discord.API.Gateway.Commands.RequestGuildMembers
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: RequestGuildMembers.Query
  fullName: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Query
  type: Property
  source:
    id: Query
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\Gateway\Commands\RequestGuildMembers.cs
    startLine: 45
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API.Gateway.Commands
  summary: Gets a query string that the requested usernames should start with.
  example: []
  syntax:
    content: public Optional<string> Query { get; init; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.String}
    content.vb: Public Property Query As [Optional](Of String)
  overload: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Query*
  implements:
  - Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.Query
- uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.UserIDs
  commentId: P:Remora.Discord.API.Gateway.Commands.RequestGuildMembers.UserIDs
  id: UserIDs
  parent: Remora.Discord.API.Gateway.Commands.RequestGuildMembers
  langs:
  - csharp
  - vb
  name: UserIDs
  nameWithType: RequestGuildMembers.UserIDs
  fullName: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.UserIDs
  type: Property
  source:
    id: UserIDs
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\Gateway\Commands\RequestGuildMembers.cs
    startLine: 46
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API.Gateway.Commands
  summary: Gets a collection of user IDs that should be fetched.
  example: []
  syntax:
    content: public Optional<IReadOnlyList<Snowflake>> UserIDs { get; init; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
    content.vb: Public Property UserIDs As [Optional](Of IReadOnlyList(Of Snowflake))
  overload: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.UserIDs*
  implements:
  - Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.UserIDs
- uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Nonce
  commentId: P:Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Nonce
  id: Nonce
  parent: Remora.Discord.API.Gateway.Commands.RequestGuildMembers
  langs:
  - csharp
  - vb
  name: Nonce
  nameWithType: RequestGuildMembers.Nonce
  fullName: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Nonce
  type: Property
  source:
    id: Nonce
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\Gateway\Commands\RequestGuildMembers.cs
    startLine: 47
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API.Gateway.Commands
  summary: Gets a nonce (unique string) to identify the incoming guild member chunks after the request has been accepted.
  example: []
  syntax:
    content: public Optional<string> Nonce { get; init; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.String}
    content.vb: Public Property Nonce As [Optional](Of String)
  overload: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Nonce*
  implements:
  - Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.Nonce
- uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.#ctor(Remora.Rest.Core.Snowflake,System.String,System.Int32,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String})
  commentId: M:Remora.Discord.API.Gateway.Commands.RequestGuildMembers.#ctor(Remora.Rest.Core.Snowflake,System.String,System.Int32,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String})
  id: '#ctor(Remora.Rest.Core.Snowflake,System.String,System.Int32,Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String})'
  parent: Remora.Discord.API.Gateway.Commands.RequestGuildMembers
  langs:
  - csharp
  - vb
  name: RequestGuildMembers(Snowflake, string, int, Optional<bool>, Optional<string>)
  nameWithType: RequestGuildMembers.RequestGuildMembers(Snowflake, string, int, Optional<bool>, Optional<string>)
  fullName: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.RequestGuildMembers(Remora.Rest.Core.Snowflake, string, int, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<string>)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\Gateway\Commands\RequestGuildMembers.cs
    startLine: 63
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API.Gateway.Commands
  summary: Initializes a new instance of the <xref href="Remora.Discord.API.Gateway.Commands.RequestGuildMembers" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public RequestGuildMembers(Snowflake guildID, string query = "", int limit = 0, Optional<bool> withPresences = default, Optional<string> nonce = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild to query.
    - id: query
      type: System.String
      description: >-
        The string to filter usernames on (that is, usernames should start with this string). Defaults to the empty

        string, which matches all members.
    - id: limit
      type: System.Int32
      description: The maximum number of members to return. Defaults to 0, which signifies a request for all members.
    - id: withPresences
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: true if member presence data should be included; otherwise, false.
    - id: nonce
      type: Remora.Rest.Core.Optional{System.String}
      description: A nonce to identify response chunks by.
    content.vb: Public Sub New(guildID As Snowflake, query As String = "", limit As Integer = 0, withPresences As [Optional](Of Boolean) = Nothing, nonce As [Optional](Of String) = Nothing)
  overload: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.#ctor*
  nameWithType.vb: RequestGuildMembers.New(Snowflake, String, Integer, Optional(Of Boolean), Optional(Of String))
  fullName.vb: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.New(Remora.Rest.Core.Snowflake, String, Integer, Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of String))
  name.vb: New(Snowflake, String, Integer, Optional(Of Boolean), Optional(Of String))
- uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.#ctor(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String})
  commentId: M:Remora.Discord.API.Gateway.Commands.RequestGuildMembers.#ctor(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String})
  id: '#ctor(Remora.Rest.Core.Snowflake,System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake},Remora.Rest.Core.Optional{System.Int32},Remora.Rest.Core.Optional{System.Boolean},Remora.Rest.Core.Optional{System.String})'
  parent: Remora.Discord.API.Gateway.Commands.RequestGuildMembers
  langs:
  - csharp
  - vb
  name: RequestGuildMembers(Snowflake, IReadOnlyList<Snowflake>, Optional<int>, Optional<bool>, Optional<string>)
  nameWithType: RequestGuildMembers.RequestGuildMembers(Snowflake, IReadOnlyList<Snowflake>, Optional<int>, Optional<bool>, Optional<string>)
  fullName: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.RequestGuildMembers(Remora.Rest.Core.Snowflake, System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>, Remora.Rest.Core.Optional<int>, Remora.Rest.Core.Optional<bool>, Remora.Rest.Core.Optional<string>)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API\API\Gateway\Commands\RequestGuildMembers.cs
    startLine: 85
  assemblies:
  - Remora.Discord.API
  namespace: Remora.Discord.API.Gateway.Commands
  summary: Initializes a new instance of the <xref href="Remora.Discord.API.Gateway.Commands.RequestGuildMembers" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public RequestGuildMembers(Snowflake guildID, IReadOnlyList<Snowflake> userIDs, Optional<int> limit = default, Optional<bool> withPresences = default, Optional<string> nonce = default)
    parameters:
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild to query.
    - id: userIDs
      type: System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}
      description: The IDs of the users to retrieve.
    - id: limit
      type: Remora.Rest.Core.Optional{System.Int32}
      description: The maximum number of members to return. Defaults to 0, which signifies a request for all members.
    - id: withPresences
      type: Remora.Rest.Core.Optional{System.Boolean}
      description: true if member presence data should be included; otherwise, false.
    - id: nonce
      type: Remora.Rest.Core.Optional{System.String}
      description: A nonce to identify response chunks by.
    content.vb: Public Sub New(guildID As Snowflake, userIDs As IReadOnlyList(Of Snowflake), limit As [Optional](Of Integer) = Nothing, withPresences As [Optional](Of Boolean) = Nothing, nonce As [Optional](Of String) = Nothing)
  overload: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.#ctor*
  nameWithType.vb: RequestGuildMembers.New(Snowflake, IReadOnlyList(Of Snowflake), Optional(Of Integer), Optional(Of Boolean), Optional(Of String))
  fullName.vb: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.New(Remora.Rest.Core.Snowflake, System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake), Remora.Rest.Core.Optional(Of Integer), Remora.Rest.Core.Optional(Of Boolean), Remora.Rest.Core.Optional(Of String))
  name.vb: New(Snowflake, IReadOnlyList(Of Snowflake), Optional(Of Integer), Optional(Of Boolean), Optional(Of String))
references:
- uid: Remora.Discord.API.Gateway.Commands
  commentId: N:Remora.Discord.API.Gateway.Commands
  href: Remora.html
  name: Remora.Discord.API.Gateway.Commands
  nameWithType: Remora.Discord.API.Gateway.Commands
  fullName: Remora.Discord.API.Gateway.Commands
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Gateway
    name: Gateway
    href: Remora.Discord.API.Gateway.html
  - name: .
  - uid: Remora.Discord.API.Gateway.Commands
    name: Commands
    href: Remora.Discord.API.Gateway.Commands.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Gateway
    name: Gateway
    href: Remora.Discord.API.Gateway.html
  - name: .
  - uid: Remora.Discord.API.Gateway.Commands
    name: Commands
    href: Remora.Discord.API.Gateway.Commands.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers
  commentId: T:Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers
  parent: Remora.Discord.API.Abstractions.Gateway.Commands
  href: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.html
  name: IRequestGuildMembers
  nameWithType: IRequestGuildMembers
  fullName: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers
- uid: Remora.Discord.API.Abstractions.Gateway.Commands.IGatewayCommand
  commentId: T:Remora.Discord.API.Abstractions.Gateway.Commands.IGatewayCommand
  parent: Remora.Discord.API.Abstractions.Gateway.Commands
  href: Remora.Discord.API.Abstractions.Gateway.Commands.IGatewayCommand.html
  name: IGatewayCommand
  nameWithType: IGatewayCommand
  fullName: Remora.Discord.API.Abstractions.Gateway.Commands.IGatewayCommand
- uid: Remora.Discord.API.Abstractions.Gateway.IGatewayPayloadData
  commentId: T:Remora.Discord.API.Abstractions.Gateway.IGatewayPayloadData
  parent: Remora.Discord.API.Abstractions.Gateway
  href: Remora.Discord.API.Abstractions.Gateway.IGatewayPayloadData.html
  name: IGatewayPayloadData
  nameWithType: IGatewayPayloadData
  fullName: Remora.Discord.API.Abstractions.Gateway.IGatewayPayloadData
- uid: System.IEquatable{Remora.Discord.API.Gateway.Commands.RequestGuildMembers}
  commentId: T:System.IEquatable{Remora.Discord.API.Gateway.Commands.RequestGuildMembers}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<RequestGuildMembers>
  nameWithType: IEquatable<RequestGuildMembers>
  fullName: System.IEquatable<Remora.Discord.API.Gateway.Commands.RequestGuildMembers>
  nameWithType.vb: IEquatable(Of RequestGuildMembers)
  fullName.vb: System.IEquatable(Of Remora.Discord.API.Gateway.Commands.RequestGuildMembers)
  name.vb: IEquatable(Of RequestGuildMembers)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers
    name: RequestGuildMembers
    href: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers
    name: RequestGuildMembers
    href: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.API.Abstractions.Gateway.Commands
  commentId: N:Remora.Discord.API.Abstractions.Gateway.Commands
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Gateway.Commands
  nameWithType: Remora.Discord.API.Abstractions.Gateway.Commands
  fullName: Remora.Discord.API.Abstractions.Gateway.Commands
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway
    name: Gateway
    href: Remora.Discord.API.Abstractions.Gateway.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway.Commands
    name: Commands
    href: Remora.Discord.API.Abstractions.Gateway.Commands.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway
    name: Gateway
    href: Remora.Discord.API.Abstractions.Gateway.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway.Commands
    name: Commands
    href: Remora.Discord.API.Abstractions.Gateway.Commands.html
- uid: Remora.Discord.API.Abstractions.Gateway
  commentId: N:Remora.Discord.API.Abstractions.Gateway
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Gateway
  nameWithType: Remora.Discord.API.Abstractions.Gateway
  fullName: Remora.Discord.API.Abstractions.Gateway
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway
    name: Gateway
    href: Remora.Discord.API.Abstractions.Gateway.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway
    name: Gateway
    href: Remora.Discord.API.Abstractions.Gateway.html
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.#ctor*
  commentId: Overload:Remora.Discord.API.Gateway.Commands.RequestGuildMembers.#ctor
  href: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.html#Remora_Discord_API_Gateway_Commands_RequestGuildMembers__ctor_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Optional_System_Int32__Remora_Rest_Core_Optional_System_Boolean__Remora_Rest_Core_Optional_System_String__Remora_Rest_Core_Optional_System_Collections_Generic_IReadOnlyList_Remora_Rest_Core_Snowflake___Remora_Rest_Core_Optional_System_String__
  name: RequestGuildMembers
  nameWithType: RequestGuildMembers.RequestGuildMembers
  fullName: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.RequestGuildMembers
  nameWithType.vb: RequestGuildMembers.New
  fullName.vb: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.New
  name.vb: New
- uid: Remora.Rest.Core.Snowflake
  commentId: T:Remora.Rest.Core.Snowflake
  parent: Remora.Rest.Core
  isExternal: true
  name: Snowflake
  nameWithType: Snowflake
  fullName: Remora.Rest.Core.Snowflake
- uid: Remora.Rest.Core.Optional{System.Int32}
  commentId: T:Remora.Rest.Core.Optional{System.Int32}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Optional<int>
  nameWithType: Optional<int>
  fullName: Remora.Rest.Core.Optional<int>
  nameWithType.vb: Optional(Of Integer)
  fullName.vb: Remora.Rest.Core.Optional(Of Integer)
  name.vb: Optional(Of Integer)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Remora.Rest.Core.Optional{System.Boolean}
  commentId: T:Remora.Rest.Core.Optional{System.Boolean}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Optional<bool>
  nameWithType: Optional<bool>
  fullName: Remora.Rest.Core.Optional<bool>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: Remora.Rest.Core.Optional(Of Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Remora.Rest.Core.Optional{System.String}
  commentId: T:Remora.Rest.Core.Optional{System.String}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Optional<string>
  nameWithType: Optional<string>
  fullName: Remora.Rest.Core.Optional<string>
  nameWithType.vb: Optional(Of String)
  fullName.vb: Remora.Rest.Core.Optional(Of String)
  name.vb: Optional(Of String)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
  commentId: T:Remora.Rest.Core.Optional{System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: Optional<IReadOnlyList<Snowflake>>
  nameWithType: Optional<IReadOnlyList<Snowflake>>
  fullName: Remora.Rest.Core.Optional<System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>>
  nameWithType.vb: Optional(Of IReadOnlyList(Of Snowflake))
  fullName.vb: Remora.Rest.Core.Optional(Of System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake))
  name.vb: Optional(Of IReadOnlyList(Of Snowflake))
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
  - name: )
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.GuildID*
  commentId: Overload:Remora.Discord.API.Gateway.Commands.RequestGuildMembers.GuildID
  href: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.html#Remora_Discord_API_Gateway_Commands_RequestGuildMembers_GuildID
  name: GuildID
  nameWithType: RequestGuildMembers.GuildID
  fullName: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.GuildID
- uid: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.GuildID
  commentId: P:Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.GuildID
  parent: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers
  href: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.html#Remora_Discord_API_Abstractions_Gateway_Commands_IRequestGuildMembers_GuildID
  name: GuildID
  nameWithType: IRequestGuildMembers.GuildID
  fullName: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.GuildID
- uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Limit*
  commentId: Overload:Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Limit
  href: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.html#Remora_Discord_API_Gateway_Commands_RequestGuildMembers_Limit
  name: Limit
  nameWithType: RequestGuildMembers.Limit
  fullName: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Limit
- uid: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.Limit
  commentId: P:Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.Limit
  parent: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers
  href: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.html#Remora_Discord_API_Abstractions_Gateway_Commands_IRequestGuildMembers_Limit
  name: Limit
  nameWithType: IRequestGuildMembers.Limit
  fullName: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.Limit
- uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Presences*
  commentId: Overload:Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Presences
  href: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.html#Remora_Discord_API_Gateway_Commands_RequestGuildMembers_Presences
  name: Presences
  nameWithType: RequestGuildMembers.Presences
  fullName: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Presences
- uid: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.Presences
  commentId: P:Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.Presences
  parent: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers
  href: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.html#Remora_Discord_API_Abstractions_Gateway_Commands_IRequestGuildMembers_Presences
  name: Presences
  nameWithType: IRequestGuildMembers.Presences
  fullName: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.Presences
- uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Query*
  commentId: Overload:Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Query
  href: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.html#Remora_Discord_API_Gateway_Commands_RequestGuildMembers_Query
  name: Query
  nameWithType: RequestGuildMembers.Query
  fullName: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Query
- uid: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.Query
  commentId: P:Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.Query
  parent: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers
  href: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.html#Remora_Discord_API_Abstractions_Gateway_Commands_IRequestGuildMembers_Query
  name: Query
  nameWithType: IRequestGuildMembers.Query
  fullName: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.Query
- uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.UserIDs*
  commentId: Overload:Remora.Discord.API.Gateway.Commands.RequestGuildMembers.UserIDs
  href: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.html#Remora_Discord_API_Gateway_Commands_RequestGuildMembers_UserIDs
  name: UserIDs
  nameWithType: RequestGuildMembers.UserIDs
  fullName: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.UserIDs
- uid: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.UserIDs
  commentId: P:Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.UserIDs
  parent: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers
  href: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.html#Remora_Discord_API_Abstractions_Gateway_Commands_IRequestGuildMembers_UserIDs
  name: UserIDs
  nameWithType: IRequestGuildMembers.UserIDs
  fullName: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.UserIDs
- uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Nonce*
  commentId: Overload:Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Nonce
  href: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.html#Remora_Discord_API_Gateway_Commands_RequestGuildMembers_Nonce
  name: Nonce
  nameWithType: RequestGuildMembers.Nonce
  fullName: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.Nonce
- uid: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.Nonce
  commentId: P:Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.Nonce
  parent: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers
  href: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.html#Remora_Discord_API_Abstractions_Gateway_Commands_IRequestGuildMembers_Nonce
  name: Nonce
  nameWithType: IRequestGuildMembers.Nonce
  fullName: Remora.Discord.API.Abstractions.Gateway.Commands.IRequestGuildMembers.Nonce
- uid: Remora.Discord.API.Gateway.Commands.RequestGuildMembers
  commentId: T:Remora.Discord.API.Gateway.Commands.RequestGuildMembers
  href: Remora.Discord.API.Gateway.Commands.RequestGuildMembers.html
  name: RequestGuildMembers
  nameWithType: RequestGuildMembers
  fullName: Remora.Discord.API.Gateway.Commands.RequestGuildMembers
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}
  commentId: T:System.Collections.Generic.IReadOnlyList{Remora.Rest.Core.Snowflake}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<Snowflake>
  nameWithType: IReadOnlyList<Snowflake>
  fullName: System.Collections.Generic.IReadOnlyList<Remora.Rest.Core.Snowflake>
  nameWithType.vb: IReadOnlyList(Of Snowflake)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of Remora.Rest.Core.Snowflake)
  name.vb: IReadOnlyList(Of Snowflake)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
