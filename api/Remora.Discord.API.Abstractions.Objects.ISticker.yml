### YamlMime:ManagedReference
items:
- uid: Remora.Discord.API.Abstractions.Objects.ISticker
  commentId: T:Remora.Discord.API.Abstractions.Objects.ISticker
  id: ISticker
  parent: Remora.Discord.API.Abstractions.Objects
  children:
  - Remora.Discord.API.Abstractions.Objects.ISticker.Description
  - Remora.Discord.API.Abstractions.Objects.ISticker.FormatType
  - Remora.Discord.API.Abstractions.Objects.ISticker.GuildID
  - Remora.Discord.API.Abstractions.Objects.ISticker.ID
  - Remora.Discord.API.Abstractions.Objects.ISticker.IsAvailable
  - Remora.Discord.API.Abstractions.Objects.ISticker.Name
  - Remora.Discord.API.Abstractions.Objects.ISticker.PackID
  - Remora.Discord.API.Abstractions.Objects.ISticker.SortValue
  - Remora.Discord.API.Abstractions.Objects.ISticker.Tags
  - Remora.Discord.API.Abstractions.Objects.ISticker.Type
  - Remora.Discord.API.Abstractions.Objects.ISticker.User
  langs:
  - csharp
  - vb
  name: ISticker
  nameWithType: ISticker
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker
  type: Interface
  source:
    id: ISticker
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Stickers\ISticker.cs
    startLine: 30
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Represents a sticker.
  example: []
  syntax:
    content: >-
      [PublicAPI]

      public interface ISticker
    content.vb: >-
      <PublicAPI>

      Public Interface ISticker
  attributes:
  - type: JetBrains.Annotations.PublicAPIAttribute
    ctor: JetBrains.Annotations.PublicAPIAttribute.#ctor
    arguments: []
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.ID
  commentId: P:Remora.Discord.API.Abstractions.Objects.ISticker.ID
  id: ID
  parent: Remora.Discord.API.Abstractions.Objects.ISticker
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: ISticker.ID
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.ID
  type: Property
  source:
    id: ID
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Stickers\ISticker.cs
    startLine: 36
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the ID of the sticker.
  example: []
  syntax:
    content: Snowflake ID { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Snowflake
    content.vb: ReadOnly Property ID As Snowflake
  overload: Remora.Discord.API.Abstractions.Objects.ISticker.ID*
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.PackID
  commentId: P:Remora.Discord.API.Abstractions.Objects.ISticker.PackID
  id: PackID
  parent: Remora.Discord.API.Abstractions.Objects.ISticker
  langs:
  - csharp
  - vb
  name: PackID
  nameWithType: ISticker.PackID
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.PackID
  type: Property
  source:
    id: PackID
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Stickers\ISticker.cs
    startLine: 41
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the ID of the sticker pack.
  example: []
  syntax:
    content: Optional<Snowflake> PackID { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
    content.vb: ReadOnly Property PackID As [Optional](Of Snowflake)
  overload: Remora.Discord.API.Abstractions.Objects.ISticker.PackID*
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.Name
  commentId: P:Remora.Discord.API.Abstractions.Objects.ISticker.Name
  id: Name
  parent: Remora.Discord.API.Abstractions.Objects.ISticker
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ISticker.Name
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.Name
  type: Property
  source:
    id: Name
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Stickers\ISticker.cs
    startLine: 46
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the name of the sticker.
  example: []
  syntax:
    content: string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Name As String
  overload: Remora.Discord.API.Abstractions.Objects.ISticker.Name*
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.Description
  commentId: P:Remora.Discord.API.Abstractions.Objects.ISticker.Description
  id: Description
  parent: Remora.Discord.API.Abstractions.Objects.ISticker
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ISticker.Description
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.Description
  type: Property
  source:
    id: Description
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Stickers\ISticker.cs
    startLine: 51
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the description of the sticker.
  example: []
  syntax:
    content: string? Description { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Description As String
  overload: Remora.Discord.API.Abstractions.Objects.ISticker.Description*
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.Tags
  commentId: P:Remora.Discord.API.Abstractions.Objects.ISticker.Tags
  id: Tags
  parent: Remora.Discord.API.Abstractions.Objects.ISticker
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: ISticker.Tags
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.Tags
  type: Property
  source:
    id: Tags
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Stickers\ISticker.cs
    startLine: 57
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: >-
    Gets the autocomplete/suggestion tags for the sticker. By convention, this tends to be a comma-separated

    list.
  example: []
  syntax:
    content: string Tags { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Tags As String
  overload: Remora.Discord.API.Abstractions.Objects.ISticker.Tags*
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.Type
  commentId: P:Remora.Discord.API.Abstractions.Objects.ISticker.Type
  id: Type
  parent: Remora.Discord.API.Abstractions.Objects.ISticker
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ISticker.Type
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.Type
  type: Property
  source:
    id: Type
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Stickers\ISticker.cs
    startLine: 62
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the type of the sticker.
  example: []
  syntax:
    content: StickerType Type { get; }
    parameters: []
    return:
      type: Remora.Discord.API.Abstractions.Objects.StickerType
    content.vb: ReadOnly Property Type As StickerType
  overload: Remora.Discord.API.Abstractions.Objects.ISticker.Type*
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.FormatType
  commentId: P:Remora.Discord.API.Abstractions.Objects.ISticker.FormatType
  id: FormatType
  parent: Remora.Discord.API.Abstractions.Objects.ISticker
  langs:
  - csharp
  - vb
  name: FormatType
  nameWithType: ISticker.FormatType
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.FormatType
  type: Property
  source:
    id: FormatType
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Stickers\ISticker.cs
    startLine: 67
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the format of the sticker.
  example: []
  syntax:
    content: StickerFormatType FormatType { get; }
    parameters: []
    return:
      type: Remora.Discord.API.Abstractions.Objects.StickerFormatType
    content.vb: ReadOnly Property FormatType As StickerFormatType
  overload: Remora.Discord.API.Abstractions.Objects.ISticker.FormatType*
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.IsAvailable
  commentId: P:Remora.Discord.API.Abstractions.Objects.ISticker.IsAvailable
  id: IsAvailable
  parent: Remora.Discord.API.Abstractions.Objects.ISticker
  langs:
  - csharp
  - vb
  name: IsAvailable
  nameWithType: ISticker.IsAvailable
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.IsAvailable
  type: Property
  source:
    id: IsAvailable
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Stickers\ISticker.cs
    startLine: 72
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets a value indicating whether the sticker is available.
  example: []
  syntax:
    content: Optional<bool> IsAvailable { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Boolean}
    content.vb: ReadOnly Property IsAvailable As [Optional](Of Boolean)
  overload: Remora.Discord.API.Abstractions.Objects.ISticker.IsAvailable*
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.GuildID
  commentId: P:Remora.Discord.API.Abstractions.Objects.ISticker.GuildID
  id: GuildID
  parent: Remora.Discord.API.Abstractions.Objects.ISticker
  langs:
  - csharp
  - vb
  name: GuildID
  nameWithType: ISticker.GuildID
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.GuildID
  type: Property
  source:
    id: GuildID
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Stickers\ISticker.cs
    startLine: 77
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the ID of the guild the sticker belongs to.
  example: []
  syntax:
    content: Optional<Snowflake> GuildID { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
    content.vb: ReadOnly Property GuildID As [Optional](Of Snowflake)
  overload: Remora.Discord.API.Abstractions.Objects.ISticker.GuildID*
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.User
  commentId: P:Remora.Discord.API.Abstractions.Objects.ISticker.User
  id: User
  parent: Remora.Discord.API.Abstractions.Objects.ISticker
  langs:
  - csharp
  - vb
  name: User
  nameWithType: ISticker.User
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.User
  type: Property
  source:
    id: User
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Stickers\ISticker.cs
    startLine: 82
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the user that uploaded the sticker.
  example: []
  syntax:
    content: Optional<IUser> User { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IUser}
    content.vb: ReadOnly Property User As [Optional](Of IUser)
  overload: Remora.Discord.API.Abstractions.Objects.ISticker.User*
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.SortValue
  commentId: P:Remora.Discord.API.Abstractions.Objects.ISticker.SortValue
  id: SortValue
  parent: Remora.Discord.API.Abstractions.Objects.ISticker
  langs:
  - csharp
  - vb
  name: SortValue
  nameWithType: ISticker.SortValue
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.SortValue
  type: Property
  source:
    id: SortValue
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Backend\Remora.Discord.API.Abstractions\API\Objects\Stickers\ISticker.cs
    startLine: 87
  assemblies:
  - Remora.Discord.API.Abstractions
  namespace: Remora.Discord.API.Abstractions.Objects
  summary: Gets the sticker's sorting order within a sticker pack.
  example: []
  syntax:
    content: Optional<int> SortValue { get; }
    parameters: []
    return:
      type: Remora.Rest.Core.Optional{System.Int32}
    content.vb: ReadOnly Property SortValue As [Optional](Of Integer)
  overload: Remora.Discord.API.Abstractions.Objects.ISticker.SortValue*
references:
- uid: Remora.Discord.API.Abstractions.Objects
  commentId: N:Remora.Discord.API.Abstractions.Objects
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Objects
  nameWithType: Remora.Discord.API.Abstractions.Objects
  fullName: Remora.Discord.API.Abstractions.Objects
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Objects
    name: Objects
    href: Remora.Discord.API.Abstractions.Objects.html
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.ID*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.ISticker.ID
  href: Remora.Discord.API.Abstractions.Objects.ISticker.html#Remora_Discord_API_Abstractions_Objects_ISticker_ID
  name: ID
  nameWithType: ISticker.ID
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.ID
- uid: Remora.Rest.Core.Snowflake
  commentId: T:Remora.Rest.Core.Snowflake
  parent: Remora.Rest.Core
  isExternal: true
  name: Snowflake
  nameWithType: Snowflake
  fullName: Remora.Rest.Core.Snowflake
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.PackID*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.ISticker.PackID
  href: Remora.Discord.API.Abstractions.Objects.ISticker.html#Remora_Discord_API_Abstractions_Objects_ISticker_PackID
  name: PackID
  nameWithType: ISticker.PackID
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.PackID
- uid: Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  commentId: T:Remora.Rest.Core.Optional{Remora.Rest.Core.Snowflake}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  name: Optional<Snowflake>
  nameWithType: Optional<Snowflake>
  fullName: Remora.Rest.Core.Optional<Remora.Rest.Core.Snowflake>
  nameWithType.vb: Optional(Of Snowflake)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Rest.Core.Snowflake)
  name.vb: Optional(Of Snowflake)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: )
- uid: Remora.Rest.Core.Optional`1
  commentId: T:Remora.Rest.Core.Optional`1
  isExternal: true
  name: Optional<TValue>
  nameWithType: Optional<TValue>
  fullName: Remora.Rest.Core.Optional<TValue>
  nameWithType.vb: Optional(Of TValue)
  fullName.vb: Remora.Rest.Core.Optional(Of TValue)
  name.vb: Optional(Of TValue)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.Name*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.ISticker.Name
  href: Remora.Discord.API.Abstractions.Objects.ISticker.html#Remora_Discord_API_Abstractions_Objects_ISticker_Name
  name: Name
  nameWithType: ISticker.Name
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.Description*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.ISticker.Description
  href: Remora.Discord.API.Abstractions.Objects.ISticker.html#Remora_Discord_API_Abstractions_Objects_ISticker_Description
  name: Description
  nameWithType: ISticker.Description
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.Description
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.Tags*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.ISticker.Tags
  href: Remora.Discord.API.Abstractions.Objects.ISticker.html#Remora_Discord_API_Abstractions_Objects_ISticker_Tags
  name: Tags
  nameWithType: ISticker.Tags
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.Tags
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.Type*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.ISticker.Type
  href: Remora.Discord.API.Abstractions.Objects.ISticker.html#Remora_Discord_API_Abstractions_Objects_ISticker_Type
  name: Type
  nameWithType: ISticker.Type
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.Type
- uid: Remora.Discord.API.Abstractions.Objects.StickerType
  commentId: T:Remora.Discord.API.Abstractions.Objects.StickerType
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.StickerType.html
  name: StickerType
  nameWithType: StickerType
  fullName: Remora.Discord.API.Abstractions.Objects.StickerType
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.FormatType*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.ISticker.FormatType
  href: Remora.Discord.API.Abstractions.Objects.ISticker.html#Remora_Discord_API_Abstractions_Objects_ISticker_FormatType
  name: FormatType
  nameWithType: ISticker.FormatType
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.FormatType
- uid: Remora.Discord.API.Abstractions.Objects.StickerFormatType
  commentId: T:Remora.Discord.API.Abstractions.Objects.StickerFormatType
  parent: Remora.Discord.API.Abstractions.Objects
  href: Remora.Discord.API.Abstractions.Objects.StickerFormatType.html
  name: StickerFormatType
  nameWithType: StickerFormatType
  fullName: Remora.Discord.API.Abstractions.Objects.StickerFormatType
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.IsAvailable*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.ISticker.IsAvailable
  href: Remora.Discord.API.Abstractions.Objects.ISticker.html#Remora_Discord_API_Abstractions_Objects_ISticker_IsAvailable
  name: IsAvailable
  nameWithType: ISticker.IsAvailable
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.IsAvailable
- uid: Remora.Rest.Core.Optional{System.Boolean}
  commentId: T:Remora.Rest.Core.Optional{System.Boolean}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Optional<bool>
  nameWithType: Optional<bool>
  fullName: Remora.Rest.Core.Optional<bool>
  nameWithType.vb: Optional(Of Boolean)
  fullName.vb: Remora.Rest.Core.Optional(Of Boolean)
  name.vb: Optional(Of Boolean)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.GuildID*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.ISticker.GuildID
  href: Remora.Discord.API.Abstractions.Objects.ISticker.html#Remora_Discord_API_Abstractions_Objects_ISticker_GuildID
  name: GuildID
  nameWithType: ISticker.GuildID
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.GuildID
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.User*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.ISticker.User
  href: Remora.Discord.API.Abstractions.Objects.ISticker.html#Remora_Discord_API_Abstractions_Objects_ISticker_User
  name: User
  nameWithType: ISticker.User
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.User
- uid: Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IUser}
  commentId: T:Remora.Rest.Core.Optional{Remora.Discord.API.Abstractions.Objects.IUser}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: Remora.Discord.API.Abstractions.Objects.IUser.html
  name: Optional<IUser>
  nameWithType: Optional<IUser>
  fullName: Remora.Rest.Core.Optional<Remora.Discord.API.Abstractions.Objects.IUser>
  nameWithType.vb: Optional(Of IUser)
  fullName.vb: Remora.Rest.Core.Optional(Of Remora.Discord.API.Abstractions.Objects.IUser)
  name.vb: Optional(Of IUser)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IUser
    name: IUser
    href: Remora.Discord.API.Abstractions.Objects.IUser.html
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IUser
    name: IUser
    href: Remora.Discord.API.Abstractions.Objects.IUser.html
  - name: )
- uid: Remora.Discord.API.Abstractions.Objects.ISticker.SortValue*
  commentId: Overload:Remora.Discord.API.Abstractions.Objects.ISticker.SortValue
  href: Remora.Discord.API.Abstractions.Objects.ISticker.html#Remora_Discord_API_Abstractions_Objects_ISticker_SortValue
  name: SortValue
  nameWithType: ISticker.SortValue
  fullName: Remora.Discord.API.Abstractions.Objects.ISticker.SortValue
- uid: Remora.Rest.Core.Optional{System.Int32}
  commentId: T:Remora.Rest.Core.Optional{System.Int32}
  parent: Remora.Rest.Core
  definition: Remora.Rest.Core.Optional`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Optional<int>
  nameWithType: Optional<int>
  fullName: Remora.Rest.Core.Optional<int>
  nameWithType.vb: Optional(Of Integer)
  fullName.vb: Remora.Rest.Core.Optional(Of Integer)
  name.vb: Optional(Of Integer)
  spec.csharp:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: Remora.Rest.Core.Optional`1
    name: Optional
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
