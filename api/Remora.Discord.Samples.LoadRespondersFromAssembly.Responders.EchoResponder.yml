### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder
  commentId: T:Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder
  id: EchoResponder
  parent: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders
  children:
  - Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.#ctor(Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)
  - Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: EchoResponder
  nameWithType: EchoResponder
  fullName: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder
  type: Class
  source:
    id: EchoResponder
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Samples\LoadRespondersFromAssembly\Responders\EchoResponder.cs
    startLine: 18
  assemblies:
  - LoadRespondersFromAssembly
  namespace: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders
  summary: A Responder that sends all messages received back to where they were received.
  example: []
  syntax:
    content: 'public class EchoResponder : IResponder<IMessageCreate>, IResponder'
    content.vb: Public Class EchoResponder Implements IResponder(Of IMessageCreate), IResponder
  inheritance:
  - System.Object
  implements:
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate}
  - Remora.Discord.Gateway.Responders.IResponder
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.#ctor(Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)
  commentId: M:Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.#ctor(Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)
  id: '#ctor(Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)'
  parent: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder
  langs:
  - csharp
  - vb
  name: EchoResponder(IDiscordRestChannelAPI)
  nameWithType: EchoResponder.EchoResponder(IDiscordRestChannelAPI)
  fullName: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.EchoResponder(Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Samples\LoadRespondersFromAssembly\Responders\EchoResponder.cs
    startLine: 26
  assemblies:
  - LoadRespondersFromAssembly
  namespace: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders
  summary: Initializes a new instance of the <xref href="Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public EchoResponder(IDiscordRestChannelAPI channelAPI)
    parameters:
    - id: channelAPI
      type: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
      description: The <xref href="Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub New(channelAPI As IDiscordRestChannelAPI)
  overload: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.#ctor*
  nameWithType.vb: EchoResponder.New(IDiscordRestChannelAPI)
  fullName.vb: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.New(Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)
  name.vb: New(IDiscordRestChannelAPI)
- uid: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate,System.Threading.CancellationToken)
  id: RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate,System.Threading.CancellationToken)
  parent: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder
  langs:
  - csharp
  - vb
  name: RespondAsync(IMessageCreate, CancellationToken)
  nameWithType: EchoResponder.RespondAsync(IMessageCreate, CancellationToken)
  fullName: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate, System.Threading.CancellationToken)
  type: Method
  source:
    id: RespondAsync
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Samples\LoadRespondersFromAssembly\Responders\EchoResponder.cs
    startLine: 32
  assemblies:
  - LoadRespondersFromAssembly
  namespace: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders
  summary: Responds to the given gateway event, handling it asynchronously.
  example: []
  syntax:
    content: public Task<Result> RespondAsync(IMessageCreate gatewayEvent, CancellationToken ct = default)
    parameters:
    - id: gatewayEvent
      type: Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate
      description: The event to respond to.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result}
      description: A response result which may or may not have succeeded.
    content.vb: Public Function RespondAsync(gatewayEvent As IMessageCreate, ct As CancellationToken = Nothing) As Task(Of Result)
  overload: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.RespondAsync*
  implements:
  - Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate,System.Threading.CancellationToken)
references:
- uid: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders
  commentId: N:Remora.Discord.Samples.LoadRespondersFromAssembly.Responders
  href: Remora.html
  name: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders
  nameWithType: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders
  fullName: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Samples
    name: Samples
    href: Remora.Discord.Samples.html
  - name: .
  - uid: Remora.Discord.Samples.LoadRespondersFromAssembly
    name: LoadRespondersFromAssembly
    href: Remora.Discord.Samples.LoadRespondersFromAssembly.html
  - name: .
  - uid: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders
    name: Responders
    href: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Samples
    name: Samples
    href: Remora.Discord.Samples.html
  - name: .
  - uid: Remora.Discord.Samples.LoadRespondersFromAssembly
    name: LoadRespondersFromAssembly
    href: Remora.Discord.Samples.LoadRespondersFromAssembly.html
  - name: .
  - uid: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders
    name: Responders
    href: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate}
  commentId: T:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate}
  parent: Remora.Discord.Gateway.Responders
  definition: Remora.Discord.Gateway.Responders.IResponder`1
  href: Remora.Discord.Gateway.Responders.IResponder-1.html
  name: IResponder<IMessageCreate>
  nameWithType: IResponder<IMessageCreate>
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate>
  nameWithType.vb: IResponder(Of IMessageCreate)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate)
  name.vb: IResponder(Of IMessageCreate)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: <
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate
    name: IMessageCreate
    href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate.html
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate
    name: IMessageCreate
    href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate.html
  - name: )
- uid: Remora.Discord.Gateway.Responders.IResponder
  commentId: T:Remora.Discord.Gateway.Responders.IResponder
  parent: Remora.Discord.Gateway.Responders
  href: Remora.Discord.Gateway.Responders.IResponder.html
  name: IResponder
  nameWithType: IResponder
  fullName: Remora.Discord.Gateway.Responders.IResponder
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Gateway.Responders.IResponder`1
  commentId: T:Remora.Discord.Gateway.Responders.IResponder`1
  href: Remora.Discord.Gateway.Responders.IResponder-1.html
  name: IResponder<TGatewayEvent>
  nameWithType: IResponder<TGatewayEvent>
  fullName: Remora.Discord.Gateway.Responders.IResponder<TGatewayEvent>
  nameWithType.vb: IResponder(Of TGatewayEvent)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of TGatewayEvent)
  name.vb: IResponder(Of TGatewayEvent)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: <
  - name: TGatewayEvent
  - name: '>'
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1
    name: IResponder
    href: Remora.Discord.Gateway.Responders.IResponder-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TGatewayEvent
  - name: )
- uid: Remora.Discord.Gateway.Responders
  commentId: N:Remora.Discord.Gateway.Responders
  href: Remora.html
  name: Remora.Discord.Gateway.Responders
  nameWithType: Remora.Discord.Gateway.Responders
  fullName: Remora.Discord.Gateway.Responders
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Responders
    name: Responders
    href: Remora.Discord.Gateway.Responders.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Gateway
    name: Gateway
    href: Remora.Discord.Gateway.html
  - name: .
  - uid: Remora.Discord.Gateway.Responders
    name: Responders
    href: Remora.Discord.Gateway.Responders.html
- uid: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder
  commentId: T:Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder
  href: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.html
  name: EchoResponder
  nameWithType: EchoResponder
  fullName: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  commentId: T:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  parent: Remora.Discord.API.Abstractions.Rest
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html
  name: IDiscordRestChannelAPI
  nameWithType: IDiscordRestChannelAPI
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
- uid: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.#ctor*
  commentId: Overload:Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.#ctor
  href: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.html#Remora_Discord_Samples_LoadRespondersFromAssembly_Responders_EchoResponder__ctor_Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_
  name: EchoResponder
  nameWithType: EchoResponder.EchoResponder
  fullName: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.EchoResponder
  nameWithType.vb: EchoResponder.New
  fullName.vb: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.New
  name.vb: New
- uid: Remora.Discord.API.Abstractions.Rest
  commentId: N:Remora.Discord.API.Abstractions.Rest
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Rest
  nameWithType: Remora.Discord.API.Abstractions.Rest
  fullName: Remora.Discord.API.Abstractions.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
- uid: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.RespondAsync*
  commentId: Overload:Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.RespondAsync
  href: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.html#Remora_Discord_Samples_LoadRespondersFromAssembly_Responders_EchoResponder_RespondAsync_Remora_Discord_API_Abstractions_Gateway_Events_IMessageCreate_System_Threading_CancellationToken_
  name: RespondAsync
  nameWithType: EchoResponder.RespondAsync
  fullName: Remora.Discord.Samples.LoadRespondersFromAssembly.Responders.EchoResponder.RespondAsync
- uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate,System.Threading.CancellationToken)
  parent: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate}
  definition: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
  href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  name: RespondAsync(IMessageCreate, CancellationToken)
  nameWithType: IResponder<IMessageCreate>.RespondAsync(IMessageCreate, CancellationToken)
  fullName: Remora.Discord.Gateway.Responders.IResponder<Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate>.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate, System.Threading.CancellationToken)
  nameWithType.vb: IResponder(Of IMessageCreate).RespondAsync(IMessageCreate, CancellationToken)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate).RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate
    name: IMessageCreate
    href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder{Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate}.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate
    name: IMessageCreate
    href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate
  commentId: T:Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate
  parent: Remora.Discord.API.Abstractions.Gateway.Events
  href: Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate.html
  name: IMessageCreate
  nameWithType: IMessageCreate
  fullName: Remora.Discord.API.Abstractions.Gateway.Events.IMessageCreate
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Remora.Results.Result}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result>
  nameWithType: Task<Result>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result>
  nameWithType.vb: Task(Of Result)
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result)
  name.vb: Task(Of Result)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result
    name: Result
    isExternal: true
  - name: )
- uid: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  name: RespondAsync(TGatewayEvent, CancellationToken)
  nameWithType: IResponder<TGatewayEvent>.RespondAsync(TGatewayEvent, CancellationToken)
  fullName: Remora.Discord.Gateway.Responders.IResponder<TGatewayEvent>.RespondAsync(TGatewayEvent, System.Threading.CancellationToken)
  nameWithType.vb: IResponder(Of TGatewayEvent).RespondAsync(TGatewayEvent, CancellationToken)
  fullName.vb: Remora.Discord.Gateway.Responders.IResponder(Of TGatewayEvent).RespondAsync(TGatewayEvent, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - name: TGatewayEvent
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Gateway.Responders.IResponder`1.RespondAsync(`0,System.Threading.CancellationToken)
    name: RespondAsync
    href: Remora.Discord.Gateway.Responders.IResponder-1.html#Remora_Discord_Gateway_Responders_IResponder_1_RespondAsync__0_System_Threading_CancellationToken_
  - name: (
  - name: TGatewayEvent
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.API.Abstractions.Gateway.Events
  commentId: N:Remora.Discord.API.Abstractions.Gateway.Events
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Gateway.Events
  nameWithType: Remora.Discord.API.Abstractions.Gateway.Events
  fullName: Remora.Discord.API.Abstractions.Gateway.Events
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway
    name: Gateway
    href: Remora.Discord.API.Abstractions.Gateway.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway.Events
    name: Events
    href: Remora.Discord.API.Abstractions.Gateway.Events.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway
    name: Gateway
    href: Remora.Discord.API.Abstractions.Gateway.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Gateway.Events
    name: Events
    href: Remora.Discord.API.Abstractions.Gateway.Events.html
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
