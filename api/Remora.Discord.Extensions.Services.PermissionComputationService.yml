### YamlMime:ManagedReference
items:
- uid: Remora.Discord.Extensions.Services.PermissionComputationService
  commentId: T:Remora.Discord.Extensions.Services.PermissionComputationService
  id: PermissionComputationService
  parent: Remora.Discord.Extensions.Services
  children:
  - Remora.Discord.Extensions.Services.PermissionComputationService.#ctor(Remora.Discord.Commands.Services.ContextInjectionService,Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI,Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)
  - Remora.Discord.Extensions.Services.PermissionComputationService.ComputeContextualMemberPermissions(Remora.Rest.Core.Snowflake,System.Boolean,System.Threading.CancellationToken)
  - Remora.Discord.Extensions.Services.PermissionComputationService.ComputeContextualRolePermissions(Remora.Rest.Core.Snowflake,System.Boolean,System.Threading.CancellationToken)
  - Remora.Discord.Extensions.Services.PermissionComputationService.ComputeMemberPermissions(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Nullable{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  - Remora.Discord.Extensions.Services.PermissionComputationService.ComputeRolePermissions(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Nullable{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: PermissionComputationService
  nameWithType: PermissionComputationService
  fullName: Remora.Discord.Extensions.Services.PermissionComputationService
  type: Class
  source:
    id: PermissionComputationService
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Remora.Discord.Extensions\Services\PermissionComputationService.cs
    startLine: 38
  assemblies:
  - Remora.Discord.Extensions
  namespace: Remora.Discord.Extensions.Services
  summary: Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy.
  example: []
  syntax:
    content: 'public class PermissionComputationService : IPermissionComputationService'
    content.vb: Public Class PermissionComputationService Implements IPermissionComputationService
  inheritance:
  - System.Object
  implements:
  - Remora.Discord.Extensions.Services.IPermissionComputationService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Remora.Discord.Extensions.Services.PermissionComputationService.#ctor(Remora.Discord.Commands.Services.ContextInjectionService,Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI,Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)
  commentId: M:Remora.Discord.Extensions.Services.PermissionComputationService.#ctor(Remora.Discord.Commands.Services.ContextInjectionService,Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI,Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)
  id: '#ctor(Remora.Discord.Commands.Services.ContextInjectionService,Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI,Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)'
  parent: Remora.Discord.Extensions.Services.PermissionComputationService
  langs:
  - csharp
  - vb
  name: PermissionComputationService(ContextInjectionService, IDiscordRestGuildAPI, IDiscordRestChannelAPI)
  nameWithType: PermissionComputationService.PermissionComputationService(ContextInjectionService, IDiscordRestGuildAPI, IDiscordRestChannelAPI)
  fullName: Remora.Discord.Extensions.Services.PermissionComputationService.PermissionComputationService(Remora.Discord.Commands.Services.ContextInjectionService, Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI, Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)
  type: Constructor
  source:
    id: .ctor
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Remora.Discord.Extensions\Services\PermissionComputationService.cs
    startLine: 50
  assemblies:
  - Remora.Discord.Extensions
  namespace: Remora.Discord.Extensions.Services
  summary: Initializes a new instance of the <xref href="Remora.Discord.Extensions.Services.PermissionComputationService" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public PermissionComputationService(ContextInjectionService contextInjection, IDiscordRestGuildAPI guildAPI, IDiscordRestChannelAPI channelAPI)
    parameters:
    - id: contextInjection
      type: Remora.Discord.Commands.Services.ContextInjectionService
      description: The context injection service.
    - id: guildAPI
      type: Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI
      description: The guild API.
    - id: channelAPI
      type: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
      description: The channel API.
    content.vb: Public Sub New(contextInjection As ContextInjectionService, guildAPI As IDiscordRestGuildAPI, channelAPI As IDiscordRestChannelAPI)
  overload: Remora.Discord.Extensions.Services.PermissionComputationService.#ctor*
  nameWithType.vb: PermissionComputationService.New(ContextInjectionService, IDiscordRestGuildAPI, IDiscordRestChannelAPI)
  fullName.vb: Remora.Discord.Extensions.Services.PermissionComputationService.New(Remora.Discord.Commands.Services.ContextInjectionService, Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI, Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI)
  name.vb: New(ContextInjectionService, IDiscordRestGuildAPI, IDiscordRestChannelAPI)
- uid: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeMemberPermissions(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Nullable{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Extensions.Services.PermissionComputationService.ComputeMemberPermissions(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Nullable{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  id: ComputeMemberPermissions(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Nullable{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  parent: Remora.Discord.Extensions.Services.PermissionComputationService
  langs:
  - csharp
  - vb
  name: ComputeMemberPermissions(Snowflake, Snowflake, Snowflake?, CancellationToken)
  nameWithType: PermissionComputationService.ComputeMemberPermissions(Snowflake, Snowflake, Snowflake?, CancellationToken)
  fullName: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeMemberPermissions(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake?, System.Threading.CancellationToken)
  type: Method
  source:
    id: ComputeMemberPermissions
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Remora.Discord.Extensions\Services\PermissionComputationService.cs
    startLine: 63
  assemblies:
  - Remora.Discord.Extensions
  namespace: Remora.Discord.Extensions.Services
  summary: Computes the effective permissions for the user with the given ID.
  remarks: >-
    <code class="paramref">channelID</code> controls whether permission overwrite in any particular channel are taken into
     account. If it is omitted, the computed permissions are valid anywhere in the server where a permission
     overwrite does not otherwise modify the permissions.

     If you want to compute effective permissions for some kind of user action, it's likely that you want to set this
     parameter to an appropriate value.
  example: []
  syntax:
    content: public Task<Result<IDiscordPermissionSet>> ComputeMemberPermissions(Snowflake userID, Snowflake guildID, Snowflake? channelID = null, CancellationToken ct = default)
    parameters:
    - id: userID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the user.
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild the user is in.
    - id: channelID
      type: System.Nullable{Remora.Rest.Core.Snowflake}
      description: The ID of the channel the user is in.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}
      description: The computed permissions.
    content.vb: Public Function ComputeMemberPermissions(userID As Snowflake, guildID As Snowflake, channelID As Snowflake? = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IDiscordPermissionSet))
  overload: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeMemberPermissions*
  implements:
  - Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeMemberPermissions(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Nullable{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
- uid: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeContextualMemberPermissions(Remora.Rest.Core.Snowflake,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Extensions.Services.PermissionComputationService.ComputeContextualMemberPermissions(Remora.Rest.Core.Snowflake,System.Boolean,System.Threading.CancellationToken)
  id: ComputeContextualMemberPermissions(Remora.Rest.Core.Snowflake,System.Boolean,System.Threading.CancellationToken)
  parent: Remora.Discord.Extensions.Services.PermissionComputationService
  langs:
  - csharp
  - vb
  name: ComputeContextualMemberPermissions(Snowflake, bool, CancellationToken)
  nameWithType: PermissionComputationService.ComputeContextualMemberPermissions(Snowflake, bool, CancellationToken)
  fullName: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeContextualMemberPermissions(Remora.Rest.Core.Snowflake, bool, System.Threading.CancellationToken)
  type: Method
  source:
    id: ComputeContextualMemberPermissions
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Remora.Discord.Extensions\Services\PermissionComputationService.cs
    startLine: 106
  assemblies:
  - Remora.Discord.Extensions
  namespace: Remora.Discord.Extensions.Services
  summary: Computes the effective permissions for the user with the given ID in the context of the current operation.
  remarks: This method uses the guild and channel ID from an available <xref href="Remora.Discord.Commands.Contexts.IOperationContext" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Task<Result<IDiscordPermissionSet>> ComputeContextualMemberPermissions(Snowflake userID, bool inChannel = true, CancellationToken ct = default)
    parameters:
    - id: userID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the user.
    - id: inChannel
      type: System.Boolean
      description: Whether the computation should use the channel ID from the context.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}
      description: The computed permissions.
    content.vb: Public Function ComputeContextualMemberPermissions(userID As Snowflake, inChannel As Boolean = True, ct As CancellationToken = Nothing) As Task(Of Result(Of IDiscordPermissionSet))
  overload: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeContextualMemberPermissions*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if no context is available or it does not have the required information.
  implements:
  - Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeContextualMemberPermissions(Remora.Rest.Core.Snowflake,System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: PermissionComputationService.ComputeContextualMemberPermissions(Snowflake, Boolean, CancellationToken)
  fullName.vb: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeContextualMemberPermissions(Remora.Rest.Core.Snowflake, Boolean, System.Threading.CancellationToken)
  name.vb: ComputeContextualMemberPermissions(Snowflake, Boolean, CancellationToken)
- uid: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeRolePermissions(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Nullable{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Extensions.Services.PermissionComputationService.ComputeRolePermissions(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Nullable{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  id: ComputeRolePermissions(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Nullable{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  parent: Remora.Discord.Extensions.Services.PermissionComputationService
  langs:
  - csharp
  - vb
  name: ComputeRolePermissions(Snowflake, Snowflake, Snowflake?, CancellationToken)
  nameWithType: PermissionComputationService.ComputeRolePermissions(Snowflake, Snowflake, Snowflake?, CancellationToken)
  fullName: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeRolePermissions(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake?, System.Threading.CancellationToken)
  type: Method
  source:
    id: ComputeRolePermissions
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Remora.Discord.Extensions\Services\PermissionComputationService.cs
    startLine: 134
  assemblies:
  - Remora.Discord.Extensions
  namespace: Remora.Discord.Extensions.Services
  summary: Computes the effective permissions for the role with the given ID.
  remarks: >-
    <code class="paramref">channelID</code> controls whether permission overwrite in any particular channel are taken into
     account. If it is omitted, the computed permissions are valid anywhere in the server where a permission
     overwrite does not otherwise modify the permissions.

     If you want to compute effective permissions for some kind of user action, it's likely that you want to set this
     parameter to an appropriate value.
  example: []
  syntax:
    content: public Task<Result<IDiscordPermissionSet>> ComputeRolePermissions(Snowflake roleID, Snowflake guildID, Snowflake? channelID = null, CancellationToken ct = default)
    parameters:
    - id: roleID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the role.
    - id: guildID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the guild the user is in.
    - id: channelID
      type: System.Nullable{Remora.Rest.Core.Snowflake}
      description: The ID of the channel the user is in.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}
      description: The computed permissions.
    content.vb: Public Function ComputeRolePermissions(roleID As Snowflake, guildID As Snowflake, channelID As Snowflake? = Nothing, ct As CancellationToken = Nothing) As Task(Of Result(Of IDiscordPermissionSet))
  overload: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeRolePermissions*
  implements:
  - Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeRolePermissions(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Nullable{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
- uid: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeContextualRolePermissions(Remora.Rest.Core.Snowflake,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Extensions.Services.PermissionComputationService.ComputeContextualRolePermissions(Remora.Rest.Core.Snowflake,System.Boolean,System.Threading.CancellationToken)
  id: ComputeContextualRolePermissions(Remora.Rest.Core.Snowflake,System.Boolean,System.Threading.CancellationToken)
  parent: Remora.Discord.Extensions.Services.PermissionComputationService
  langs:
  - csharp
  - vb
  name: ComputeContextualRolePermissions(Snowflake, bool, CancellationToken)
  nameWithType: PermissionComputationService.ComputeContextualRolePermissions(Snowflake, bool, CancellationToken)
  fullName: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeContextualRolePermissions(Remora.Rest.Core.Snowflake, bool, System.Threading.CancellationToken)
  type: Method
  source:
    id: ComputeContextualRolePermissions
    path: D:\Projects\apps\Remora\documentation\src\Remora.Discord\Remora.Discord.Extensions\Services\PermissionComputationService.cs
    startLine: 171
  assemblies:
  - Remora.Discord.Extensions
  namespace: Remora.Discord.Extensions.Services
  summary: Computes the effective permissions for the role with the given ID in the context of the current operation.
  remarks: This method uses the guild and channel ID from an available <xref href="Remora.Discord.Commands.Contexts.IOperationContext" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Task<Result<IDiscordPermissionSet>> ComputeContextualRolePermissions(Snowflake roleID, bool inChannel = true, CancellationToken ct = default)
    parameters:
    - id: roleID
      type: Remora.Rest.Core.Snowflake
      description: The ID of the role.
    - id: inChannel
      type: System.Boolean
      description: Whether the computation should use the channel ID from the context.
    - id: ct
      type: System.Threading.CancellationToken
      description: The cancellation token for this operation.
    return:
      type: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}
      description: The computed permissions.
    content.vb: Public Function ComputeContextualRolePermissions(roleID As Snowflake, inChannel As Boolean = True, ct As CancellationToken = Nothing) As Task(Of Result(Of IDiscordPermissionSet))
  overload: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeContextualRolePermissions*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown if no context is available or it does not have the required information.
  implements:
  - Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeContextualRolePermissions(Remora.Rest.Core.Snowflake,System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: PermissionComputationService.ComputeContextualRolePermissions(Snowflake, Boolean, CancellationToken)
  fullName.vb: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeContextualRolePermissions(Remora.Rest.Core.Snowflake, Boolean, System.Threading.CancellationToken)
  name.vb: ComputeContextualRolePermissions(Snowflake, Boolean, CancellationToken)
references:
- uid: Remora.Discord.Extensions.Services
  commentId: N:Remora.Discord.Extensions.Services
  href: Remora.html
  name: Remora.Discord.Extensions.Services
  nameWithType: Remora.Discord.Extensions.Services
  fullName: Remora.Discord.Extensions.Services
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Extensions
    name: Extensions
    href: Remora.Discord.Extensions.html
  - name: .
  - uid: Remora.Discord.Extensions.Services
    name: Services
    href: Remora.Discord.Extensions.Services.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Extensions
    name: Extensions
    href: Remora.Discord.Extensions.html
  - name: .
  - uid: Remora.Discord.Extensions.Services
    name: Services
    href: Remora.Discord.Extensions.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Remora.Discord.Extensions.Services.IPermissionComputationService
  commentId: T:Remora.Discord.Extensions.Services.IPermissionComputationService
  parent: Remora.Discord.Extensions.Services
  href: Remora.Discord.Extensions.Services.IPermissionComputationService.html
  name: IPermissionComputationService
  nameWithType: IPermissionComputationService
  fullName: Remora.Discord.Extensions.Services.IPermissionComputationService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Remora.Discord.Extensions.Services.PermissionComputationService
  commentId: T:Remora.Discord.Extensions.Services.PermissionComputationService
  href: Remora.Discord.Extensions.Services.PermissionComputationService.html
  name: PermissionComputationService
  nameWithType: PermissionComputationService
  fullName: Remora.Discord.Extensions.Services.PermissionComputationService
- uid: Remora.Discord.Extensions.Services.PermissionComputationService.#ctor*
  commentId: Overload:Remora.Discord.Extensions.Services.PermissionComputationService.#ctor
  href: Remora.Discord.Extensions.Services.PermissionComputationService.html#Remora_Discord_Extensions_Services_PermissionComputationService__ctor_Remora_Discord_Commands_Services_ContextInjectionService_Remora_Discord_API_Abstractions_Rest_IDiscordRestGuildAPI_Remora_Discord_API_Abstractions_Rest_IDiscordRestChannelAPI_
  name: PermissionComputationService
  nameWithType: PermissionComputationService.PermissionComputationService
  fullName: Remora.Discord.Extensions.Services.PermissionComputationService.PermissionComputationService
  nameWithType.vb: PermissionComputationService.New
  fullName.vb: Remora.Discord.Extensions.Services.PermissionComputationService.New
  name.vb: New
- uid: Remora.Discord.Commands.Services.ContextInjectionService
  commentId: T:Remora.Discord.Commands.Services.ContextInjectionService
  parent: Remora.Discord.Commands.Services
  href: Remora.Discord.Commands.Services.ContextInjectionService.html
  name: ContextInjectionService
  nameWithType: ContextInjectionService
  fullName: Remora.Discord.Commands.Services.ContextInjectionService
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI
  commentId: T:Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI
  parent: Remora.Discord.API.Abstractions.Rest
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI.html
  name: IDiscordRestGuildAPI
  nameWithType: IDiscordRestGuildAPI
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestGuildAPI
- uid: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  commentId: T:Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
  parent: Remora.Discord.API.Abstractions.Rest
  href: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI.html
  name: IDiscordRestChannelAPI
  nameWithType: IDiscordRestChannelAPI
  fullName: Remora.Discord.API.Abstractions.Rest.IDiscordRestChannelAPI
- uid: Remora.Discord.Commands.Services
  commentId: N:Remora.Discord.Commands.Services
  href: Remora.html
  name: Remora.Discord.Commands.Services
  nameWithType: Remora.Discord.Commands.Services
  fullName: Remora.Discord.Commands.Services
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Services
    name: Services
    href: Remora.Discord.Commands.Services.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Services
    name: Services
    href: Remora.Discord.Commands.Services.html
- uid: Remora.Discord.API.Abstractions.Rest
  commentId: N:Remora.Discord.API.Abstractions.Rest
  href: Remora.html
  name: Remora.Discord.API.Abstractions.Rest
  nameWithType: Remora.Discord.API.Abstractions.Rest
  fullName: Remora.Discord.API.Abstractions.Rest
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.API
    name: API
    href: Remora.Discord.API.html
  - name: .
  - uid: Remora.Discord.API.Abstractions
    name: Abstractions
    href: Remora.Discord.API.Abstractions.html
  - name: .
  - uid: Remora.Discord.API.Abstractions.Rest
    name: Rest
    href: Remora.Discord.API.Abstractions.Rest.html
- uid: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeMemberPermissions*
  commentId: Overload:Remora.Discord.Extensions.Services.PermissionComputationService.ComputeMemberPermissions
  href: Remora.Discord.Extensions.Services.PermissionComputationService.html#Remora_Discord_Extensions_Services_PermissionComputationService_ComputeMemberPermissions_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Nullable_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  name: ComputeMemberPermissions
  nameWithType: PermissionComputationService.ComputeMemberPermissions
  fullName: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeMemberPermissions
- uid: Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeMemberPermissions(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Nullable{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeMemberPermissions(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Nullable{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  parent: Remora.Discord.Extensions.Services.IPermissionComputationService
  isExternal: true
  href: Remora.Discord.Extensions.Services.IPermissionComputationService.html#Remora_Discord_Extensions_Services_IPermissionComputationService_ComputeMemberPermissions_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Nullable_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  name: ComputeMemberPermissions(Snowflake, Snowflake, Snowflake?, CancellationToken)
  nameWithType: IPermissionComputationService.ComputeMemberPermissions(Snowflake, Snowflake, Snowflake?, CancellationToken)
  fullName: Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeMemberPermissions(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake?, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeMemberPermissions(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Nullable{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
    name: ComputeMemberPermissions
    href: Remora.Discord.Extensions.Services.IPermissionComputationService.html#Remora_Discord_Extensions_Services_IPermissionComputationService_ComputeMemberPermissions_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Nullable_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeMemberPermissions(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Nullable{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
    name: ComputeMemberPermissions
    href: Remora.Discord.Extensions.Services.IPermissionComputationService.html#Remora_Discord_Extensions_Services_IPermissionComputationService_ComputeMemberPermissions_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Nullable_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Rest.Core.Snowflake
  commentId: T:Remora.Rest.Core.Snowflake
  parent: Remora.Rest.Core
  isExternal: true
  name: Snowflake
  nameWithType: Snowflake
  fullName: Remora.Rest.Core.Snowflake
- uid: System.Nullable{Remora.Rest.Core.Snowflake}
  commentId: T:System.Nullable{Remora.Rest.Core.Snowflake}
  parent: System
  definition: System.Nullable`1
  name: Snowflake?
  nameWithType: Snowflake?
  fullName: Remora.Rest.Core.Snowflake?
  spec.csharp:
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}
  commentId: T:System.Threading.Tasks.Task{Remora.Results.Result{Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Result<IDiscordPermissionSet>>
  nameWithType: Task<Result<IDiscordPermissionSet>>
  fullName: System.Threading.Tasks.Task<Remora.Results.Result<Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet>>
  nameWithType.vb: Task(Of Result(Of IDiscordPermissionSet))
  fullName.vb: System.Threading.Tasks.Task(Of Remora.Results.Result(Of Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet))
  name.vb: Task(Of Result(Of IDiscordPermissionSet))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: <
  - uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
    name: IDiscordPermissionSet
    href: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Results.Result`1
    name: Result
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet
    name: IDiscordPermissionSet
    href: Remora.Discord.API.Abstractions.Objects.IDiscordPermissionSet.html
  - name: )
  - name: )
- uid: Remora.Rest.Core
  commentId: N:Remora.Rest.Core
  isExternal: true
  name: Remora.Rest.Core
  nameWithType: Remora.Rest.Core
  fullName: Remora.Rest.Core
  spec.csharp:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
  spec.vb:
  - uid: Remora
    name: Remora
    isExternal: true
  - name: .
  - uid: Remora.Rest
    name: Rest
    isExternal: true
  - name: .
  - uid: Remora.Rest.Core
    name: Core
    isExternal: true
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Remora.Discord.Commands.Contexts.IOperationContext
  commentId: T:Remora.Discord.Commands.Contexts.IOperationContext
  parent: Remora.Discord.Commands.Contexts
  href: Remora.Discord.Commands.Contexts.IOperationContext.html
  name: IOperationContext
  nameWithType: IOperationContext
  fullName: Remora.Discord.Commands.Contexts.IOperationContext
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeContextualMemberPermissions*
  commentId: Overload:Remora.Discord.Extensions.Services.PermissionComputationService.ComputeContextualMemberPermissions
  href: Remora.Discord.Extensions.Services.PermissionComputationService.html#Remora_Discord_Extensions_Services_PermissionComputationService_ComputeContextualMemberPermissions_Remora_Rest_Core_Snowflake_System_Boolean_System_Threading_CancellationToken_
  name: ComputeContextualMemberPermissions
  nameWithType: PermissionComputationService.ComputeContextualMemberPermissions
  fullName: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeContextualMemberPermissions
- uid: Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeContextualMemberPermissions(Remora.Rest.Core.Snowflake,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeContextualMemberPermissions(Remora.Rest.Core.Snowflake,System.Boolean,System.Threading.CancellationToken)
  parent: Remora.Discord.Extensions.Services.IPermissionComputationService
  isExternal: true
  href: Remora.Discord.Extensions.Services.IPermissionComputationService.html#Remora_Discord_Extensions_Services_IPermissionComputationService_ComputeContextualMemberPermissions_Remora_Rest_Core_Snowflake_System_Boolean_System_Threading_CancellationToken_
  name: ComputeContextualMemberPermissions(Snowflake, bool, CancellationToken)
  nameWithType: IPermissionComputationService.ComputeContextualMemberPermissions(Snowflake, bool, CancellationToken)
  fullName: Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeContextualMemberPermissions(Remora.Rest.Core.Snowflake, bool, System.Threading.CancellationToken)
  nameWithType.vb: IPermissionComputationService.ComputeContextualMemberPermissions(Snowflake, Boolean, CancellationToken)
  fullName.vb: Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeContextualMemberPermissions(Remora.Rest.Core.Snowflake, Boolean, System.Threading.CancellationToken)
  name.vb: ComputeContextualMemberPermissions(Snowflake, Boolean, CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeContextualMemberPermissions(Remora.Rest.Core.Snowflake,System.Boolean,System.Threading.CancellationToken)
    name: ComputeContextualMemberPermissions
    href: Remora.Discord.Extensions.Services.IPermissionComputationService.html#Remora_Discord_Extensions_Services_IPermissionComputationService_ComputeContextualMemberPermissions_Remora_Rest_Core_Snowflake_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeContextualMemberPermissions(Remora.Rest.Core.Snowflake,System.Boolean,System.Threading.CancellationToken)
    name: ComputeContextualMemberPermissions
    href: Remora.Discord.Extensions.Services.IPermissionComputationService.html#Remora_Discord_Extensions_Services_IPermissionComputationService_ComputeContextualMemberPermissions_Remora_Rest_Core_Snowflake_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Remora.Discord.Commands.Contexts
  commentId: N:Remora.Discord.Commands.Contexts
  href: Remora.html
  name: Remora.Discord.Commands.Contexts
  nameWithType: Remora.Discord.Commands.Contexts
  fullName: Remora.Discord.Commands.Contexts
  spec.csharp:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Contexts
    name: Contexts
    href: Remora.Discord.Commands.Contexts.html
  spec.vb:
  - uid: Remora
    name: Remora
    href: Remora.html
  - name: .
  - uid: Remora.Discord
    name: Discord
    href: Remora.Discord.html
  - name: .
  - uid: Remora.Discord.Commands
    name: Commands
    href: Remora.Discord.Commands.html
  - name: .
  - uid: Remora.Discord.Commands.Contexts
    name: Contexts
    href: Remora.Discord.Commands.Contexts.html
- uid: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeRolePermissions*
  commentId: Overload:Remora.Discord.Extensions.Services.PermissionComputationService.ComputeRolePermissions
  href: Remora.Discord.Extensions.Services.PermissionComputationService.html#Remora_Discord_Extensions_Services_PermissionComputationService_ComputeRolePermissions_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Nullable_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  name: ComputeRolePermissions
  nameWithType: PermissionComputationService.ComputeRolePermissions
  fullName: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeRolePermissions
- uid: Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeRolePermissions(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Nullable{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeRolePermissions(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Nullable{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
  parent: Remora.Discord.Extensions.Services.IPermissionComputationService
  isExternal: true
  href: Remora.Discord.Extensions.Services.IPermissionComputationService.html#Remora_Discord_Extensions_Services_IPermissionComputationService_ComputeRolePermissions_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Nullable_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  name: ComputeRolePermissions(Snowflake, Snowflake, Snowflake?, CancellationToken)
  nameWithType: IPermissionComputationService.ComputeRolePermissions(Snowflake, Snowflake, Snowflake?, CancellationToken)
  fullName: Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeRolePermissions(Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake, Remora.Rest.Core.Snowflake?, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeRolePermissions(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Nullable{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
    name: ComputeRolePermissions
    href: Remora.Discord.Extensions.Services.IPermissionComputationService.html#Remora_Discord_Extensions_Services_IPermissionComputationService_ComputeRolePermissions_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Nullable_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeRolePermissions(Remora.Rest.Core.Snowflake,Remora.Rest.Core.Snowflake,System.Nullable{Remora.Rest.Core.Snowflake},System.Threading.CancellationToken)
    name: ComputeRolePermissions
    href: Remora.Discord.Extensions.Services.IPermissionComputationService.html#Remora_Discord_Extensions_Services_IPermissionComputationService_ComputeRolePermissions_Remora_Rest_Core_Snowflake_Remora_Rest_Core_Snowflake_System_Nullable_Remora_Rest_Core_Snowflake__System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeContextualRolePermissions*
  commentId: Overload:Remora.Discord.Extensions.Services.PermissionComputationService.ComputeContextualRolePermissions
  href: Remora.Discord.Extensions.Services.PermissionComputationService.html#Remora_Discord_Extensions_Services_PermissionComputationService_ComputeContextualRolePermissions_Remora_Rest_Core_Snowflake_System_Boolean_System_Threading_CancellationToken_
  name: ComputeContextualRolePermissions
  nameWithType: PermissionComputationService.ComputeContextualRolePermissions
  fullName: Remora.Discord.Extensions.Services.PermissionComputationService.ComputeContextualRolePermissions
- uid: Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeContextualRolePermissions(Remora.Rest.Core.Snowflake,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeContextualRolePermissions(Remora.Rest.Core.Snowflake,System.Boolean,System.Threading.CancellationToken)
  parent: Remora.Discord.Extensions.Services.IPermissionComputationService
  isExternal: true
  href: Remora.Discord.Extensions.Services.IPermissionComputationService.html#Remora_Discord_Extensions_Services_IPermissionComputationService_ComputeContextualRolePermissions_Remora_Rest_Core_Snowflake_System_Boolean_System_Threading_CancellationToken_
  name: ComputeContextualRolePermissions(Snowflake, bool, CancellationToken)
  nameWithType: IPermissionComputationService.ComputeContextualRolePermissions(Snowflake, bool, CancellationToken)
  fullName: Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeContextualRolePermissions(Remora.Rest.Core.Snowflake, bool, System.Threading.CancellationToken)
  nameWithType.vb: IPermissionComputationService.ComputeContextualRolePermissions(Snowflake, Boolean, CancellationToken)
  fullName.vb: Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeContextualRolePermissions(Remora.Rest.Core.Snowflake, Boolean, System.Threading.CancellationToken)
  name.vb: ComputeContextualRolePermissions(Snowflake, Boolean, CancellationToken)
  spec.csharp:
  - uid: Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeContextualRolePermissions(Remora.Rest.Core.Snowflake,System.Boolean,System.Threading.CancellationToken)
    name: ComputeContextualRolePermissions
    href: Remora.Discord.Extensions.Services.IPermissionComputationService.html#Remora_Discord_Extensions_Services_IPermissionComputationService_ComputeContextualRolePermissions_Remora_Rest_Core_Snowflake_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: Remora.Discord.Extensions.Services.IPermissionComputationService.ComputeContextualRolePermissions(Remora.Rest.Core.Snowflake,System.Boolean,System.Threading.CancellationToken)
    name: ComputeContextualRolePermissions
    href: Remora.Discord.Extensions.Services.IPermissionComputationService.html#Remora_Discord_Extensions_Services_IPermissionComputationService_ComputeContextualRolePermissions_Remora_Rest_Core_Snowflake_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: Remora.Rest.Core.Snowflake
    name: Snowflake
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
